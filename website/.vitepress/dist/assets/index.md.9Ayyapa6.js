import{V as t}from"./chunks/theme.BT-1xJ2z.js";import{c as s,j as a,G as i,k as o,o as n}from"./chunks/framework.0Hiw1RrX.js";const r={class:"CustomSections"},p=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Graffle","text":"Simple GraphQL Client for JavaScript","tagline":"Minimal. Extensible. Type Safe. Runs everywhere.","actions":[{"theme":"brand","text":"Guides","link":"/guides"},{"theme":"alt","text":"Examples","link":"/examples"},{"theme":"alt","text":"Extensions","link":"/extensions"}],"image":{"src":"/_assets/logo-dark-squared.png","alt":"Graffle"}},"features":[{"title":"Spec Compliant","details":"Graffle complies with the <a href=\\"https://graphql.github.io/graphql-over-http\\">GraphQL over HTTP</a> and <a href=\\"https://github.com/jaydenseric/graphql-multipart-request-spec\\">GraphQL Multipart Request</a> specifications.","icon":"🎫"},{"title":"Extensible","details":"Powerful type-safe extension system. Intercept and manipulate inputs, outputs, and core with hooks; Add new methods; And more.","icon":"🧰"},{"title":"Ecosystem","details":"Meet real-world project needs with extensions for common and niche needs like OpenTelemetry, file uploads, schema errors, and more.","icon":"📦"},{"title":"Multi-Transport","details":"Not just a great way to query GraphQL APIs. Execute documents against in-memory schemas just as easily with the same interface.","icon":"🚛"},{"title":"Custom Scalars","details":"Easily add client-side codecs for custom scalars in the schema to enable automatic encoding of arguments and decoding of data on every request.","icon":"🧙"},{"title":"Document Builder","details":"Optional TypeScript alternative to GQL syntax for building type-safe documents including tailored methods for root fields, batch method for multiple root fields, an a document method for 1:1 with GraphQL.","icon":"🪵"},{"title":"Type Safe Results <br/><span style=\\"opacity:0.25;\\">( Document Builder )</span>","details":"Automatically inferred type safe results based on your document's structure including selection sets, aliases, directives, inline fragments, unions, and more.","icon":"⛑️"},{"title":"Schema Errors<br/><span style=\\"opacity:0.25;\\">( Extension )</span>","details":"First class support for schemas that have modelled errors into their design. Result Fields can be made to throw on errors or automatically map to error classes.","icon":"🎲"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}`),l={name:"index.md"},f=Object.assign(l,{setup(c){const e=[{avatar:"https://www.github.com/jasonkuhrt.png",name:"Jason Kuhrt",title:"Creator",desc:"Ex @prisma Dialogue littleBits. Creator Graffle Molt Paka Nexus. Shapeshifting Polymath ≒ Art ∙ Design ∙ Engineering. Heart humanities.  In an alternate universe ⊻ Coureur de Bois, Architect, Athlete, Lego Master Builder",sponsor:"https://github.com/sponsors/jasonkuhrt",links:[{icon:{svg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle fill="none" cx="12" cy="12" r="10"/><path fill="none" d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/><path d="M2 12h20"/></svg>'},link:"https://kuhrt.me"},{icon:"github",link:"https://github.com/jasonkuhrt"},{icon:"twitter",link:"https://twitter.com/jasonkuhrt"},{icon:"instagram",link:"https://instagram.com/jasonkuhrt"}]}];return(m,d)=>(n(),s("div",null,[a("section",r,[i(o(t),{size:"small",members:e})])]))}});export{p as __pageData,f as default};
