export { TypeFunction } from '#lib/type-function'
export { createConstructorWithContext } from '#src/client/client.js'
export {
  type ConfigGetOutputError,
  type HandleOutput,
  type HandleOutputDocumentBuilderRootField,
} from '#src/client/handle.js'
export { type Context } from '#src/context/context.js'
export * from '#src/context/context.js'
export { contextEmpty } from '#src/context/ContextEmpty.js'
export { addAndApplyMany } from '#src/context/fragments/extensions/fragment.js'
export { type AssertExtendsObject, type Exact, type ExactNonEmpty, type UnionExpanded } from '#src/lib/prelude.js'
export { type CreateGqlTada, type gql } from '#src/static/gql.js'
export { ContextFragments } from '#src/types/ContextFragment.js'
export { type GlobalRegistry } from '#src/types/GlobalRegistry/GlobalRegistry.js'
export * from '#src/types/Schema/StandardTypes/scalar.js'
export { pipe } from '@wollybeard/kit/fn'
export type { Simplify } from 'type-fest'
export { Configuration } from '../context/fragments/configuration/$.js'
export { Extensions } from '../context/fragments/extensions/$.js'
export { Scalars } from '../context/fragments/scalars/$.js'
export { Transports } from '../context/fragments/transports/$.js'
export * from '../extensions/DocumentBuilder/$.js'
export * from '../types/RequestResult/$.js'
export { Schema } from '../types/Schema/$.js'
export { type SchemaDrivenDataMap } from '../types/SchemaDrivenDataMap/$.js'
export * from './kit.js'
