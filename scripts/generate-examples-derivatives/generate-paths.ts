import * as FS from 'node:fs/promises'
import * as Path from 'node:path'
import { readExampleFiles } from './helpers.js'

export const generatePaths = async () => {
  const exampleFiles = await readExampleFiles()

  // Sort by directory and filename for consistent ordering
  const sortedFiles = exampleFiles.all.sort((a, b) => a.path.full.localeCompare(b.path.full))

  // Generate array of paths relative to examples directory
  const paths = sortedFiles.map(file => file.path.full.replace('./examples/', './'))

  // Generate TypeScript file with the paths
  const code = `// This file is generated by scripts/generate-examples-derivatives/generate.ts
// Do not modify this file directly.

import { FsLoc } from '@wollybeard/kit'

export const examplePaths = [
${paths.map(path => `  FsLoc.fromString('${path}'),`).join('\n')}
] as const
`

  // Write to examples directory so it can be imported by tests
  const outputPath = Path.join('./examples', '__tests__', 'paths.generated.ts')
  await FS.mkdir(Path.dirname(outputPath), { recursive: true })
  await FS.writeFile(outputPath, code)

  console.log(`Generated paths file with ${paths.length} examples`)
}
