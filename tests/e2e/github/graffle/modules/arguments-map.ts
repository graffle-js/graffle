/**
 * ====================================================================================
 * GENERATED FILE - DO NOT EDIT MANUALLY
 * ====================================================================================
 *
 * Generated by: Graffle Code Generator
 * Source: src/generator/generators/ArgumentsMap.ts
 *
 * @module ArgumentsMap
 *
 * ArgumentsMap is a type-level structure that mirrors your GraphQL schema's argument structure for type-safe variable inference.
 *
 * @description
 *
 * ArgumentsMap provides a complete type-level representation of all arguments in your GraphQL schema. It enables the Static Document Builder to infer variable types and requirements from your selection sets when you use `$var` placeholders.
 *
 * This module is generated from your GraphQL schema and creates TypeScript interfaces that encode:
 *
 * - Which fields accept arguments
 * - The types and nullability of those arguments
 * - Nested argument structures in complex queries
 * - Input object types used in arguments
 *
 * The ArgumentsMap works in conjunction with the variable inference system to provide compile-time validation of your GraphQL variables without requiring manual type annotations.
 *
 * @remarks
 *
 * ArgumentsMap follows the Schema-Driven Data Map (SDDM) pattern used throughout Graffle's generated code. This pattern uses specific property names with precise meanings:
 *
 * - `operations`: Root types (query, mutation, subscription) that can be directly queried
 * - `directives`: Directive definitions with their arguments
 * - `types`: All types in the schema that have fields with arguments
 * - `f`: Fields map - contains all fields for a given type
 * - `a`: Arguments - direct arguments on a specific field
 * - `ad`: Arguments descendant - reference to a type that has fields with arguments
 * - `nt`: Named type - the GraphQL type name as a string literal
 * - `it`: Inline type - tuple encoding nullability: `[0]` for nullable, `[1]` for required, `[0, [1]]` for list types
 * - `$t`: TypeScript type - the fully resolved TypeScript type for the argument
 *
 * The `ad` property is particularly important: it enables type traversal through fields that don't have direct arguments but return types that do have fields with arguments. This allows the type system to properly track argument requirements across nested selections.
 *
 * @example Basic Field Arguments
 *
 * A simple field with optional scalar arguments:
 *
 * ```typescript
 * export interface Query extends $$Utilities.SchemaDrivenDataMap.OutputObject {
 *   readonly f: {
 *     readonly userById: {
 *       readonly a: {
 *         readonly id: {
 *           readonly nt: 'ID'
 *           readonly it: readonly [0]
 *           readonly $t: string | undefined
 *         }
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * @example Required Arguments
 *
 * A field with a required argument (non-null in GraphQL schema):
 *
 * ```typescript
 * readonly stringWithRequiredArg: {
 *   readonly a: {
 *     readonly string: {
 *       readonly nt: 'String'
 *       readonly it: readonly [1]
 *       readonly $t: string
 *     }
 *   }
 * }
 * ```
 *
 * @example List Arguments
 *
 * Arguments that accept arrays:
 *
 * ```typescript
 * readonly stringWithListArgRequired: {
 *   readonly a: {
 *     readonly ints: {
 *       readonly nt: 'Int'
 *       readonly it: readonly [1, [1]]
 *       readonly $t: readonly number[]
 *     }
 *   }
 * }
 * ```
 *
 * @example Nested Arguments with Descendant
 *
 * A field that doesn't have direct arguments but returns a type with fields that do:
 *
 * ```typescript
 * readonly objectNestedWithArgs: {
 *   readonly ad: ObjectNestedWithArgs
 * }
 * ```
 *
 * Where `ObjectNestedWithArgs` is defined elsewhere:
 *
 * ```typescript
 * export interface ObjectNestedWithArgs
 *   extends $$Utilities.SchemaDrivenDataMap.OutputObject
 * {
 *   readonly f: {
 *     readonly object: {
 *       readonly a: {
 *         readonly int: {
 *           readonly nt: 'Int'
 *           readonly it: readonly [0]
 *           readonly $t: number | undefined
 *         }
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * @example Input Object Arguments
 *
 * Arguments that accept input objects:
 *
 * ```typescript
 * readonly stringWithArgInputObjectRequired: {
 *   readonly a: {
 *     readonly input: {
 *       readonly nt: 'InputObject'
 *       readonly it: readonly [1]
 *       readonly $t: TypeInputsIndex.InputObject
 *     }
 *   }
 * }
 * ```
 *
 * @see {@link https://graffle.js.org | Graffle Documentation}
 * @see {@link https://graffle.js.org/guides/document-builder | Static Document Builder Guide}
 */

import type * as $$Utilities from '../../../../../src/exports/utilities-for-generated.js'
import type * as TypeInputsIndex from './type-inputs-index.js'

//
//
//
//
//
//
// ==================================================================================================
//                                            InputObject
// ==================================================================================================
//
//
//
//
//
//

export interface AbortQueuedMigrationsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AbortQueuedMigrationsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AbortRepositoryMigrationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AbortRepositoryMigrationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly migrationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AcceptEnterpriseAdministratorInvitationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AcceptEnterpriseAdministratorInvitationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly invitationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AcceptEnterpriseMemberInvitationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AcceptEnterpriseMemberInvitationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly invitationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AcceptTopicSuggestionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AcceptTopicSuggestionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface AccessUserNamespaceRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AccessUserNamespaceRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddAssigneesToAssignableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddAssigneesToAssignableInput'
  readonly f: {
    readonly assignableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface AddCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddDiscussionCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly discussionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly replyToId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface AddDiscussionPollVoteInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddDiscussionPollVoteInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pollOptionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddEnterpriseOrganizationMemberInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddEnterpriseOrganizationMemberInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly role: {
      readonly nt: 'OrganizationMemberRole'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.OrganizationMemberRole | undefined
    }
    readonly userIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
  }
}

export interface AddEnterpriseSupportEntitlementInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddEnterpriseSupportEntitlementInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface AddLabelsToLabelableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddLabelsToLabelableInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labelIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly labelableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddProjectCardInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddProjectCardInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly contentId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly note: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectColumnId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddProjectColumnInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddProjectColumnInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddProjectV2DraftIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddProjectV2DraftIssueInput'
  readonly f: {
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface AddProjectV2ItemByIdInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddProjectV2ItemByIdInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly contentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddPullRequestReviewCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddPullRequestReviewCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitOID: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly inReplyTo: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly position: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface AddPullRequestReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddPullRequestReviewInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly comments: {
      readonly nt: 'DraftPullRequestReviewComment'
      readonly it: readonly [0, [0]]
      readonly $t: readonly TypeInputsIndex.DraftPullRequestReviewComment[] | undefined
    }
    readonly commitOID: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly event: {
      readonly nt: 'PullRequestReviewEvent'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestReviewEvent | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly threads: {
      readonly nt: 'DraftPullRequestReviewThread'
      readonly it: readonly [0, [0]]
      readonly $t: readonly TypeInputsIndex.DraftPullRequestReviewThread[] | undefined
    }
  }
}

export interface AddPullRequestReviewThreadInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddPullRequestReviewThreadInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly line: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly side: {
      readonly nt: 'DiffSide'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DiffSide | undefined
    }
    readonly startLine: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly startSide: {
      readonly nt: 'DiffSide'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DiffSide | undefined
    }
    readonly subjectType: {
      readonly nt: 'PullRequestReviewThreadSubjectType'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestReviewThreadSubjectType | undefined
    }
  }
}

export interface AddPullRequestReviewThreadReplyInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddPullRequestReviewThreadReplyInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly pullRequestReviewThreadId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddReactionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddReactionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly content: {
      readonly nt: 'ReactionContent'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ReactionContent
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddStarInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddStarInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly starrableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddSubIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddSubIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly replaceParent: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly subIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly subIssueUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface AddUpvoteInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddUpvoteInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AddVerifiableDomainInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AddVerifiableDomainInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly domain: {
      readonly nt: 'URI'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.URI
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ApproveDeploymentsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ApproveDeploymentsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly comment: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly workflowRunId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ApproveVerifiableDomainInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ApproveVerifiableDomainInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ArchiveProjectV2ItemInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ArchiveProjectV2ItemInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ArchiveRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ArchiveRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface AuditLogOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'AuditLogOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.OrderDirection | undefined
    }
    readonly field: {
      readonly nt: 'AuditLogOrderField'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.AuditLogOrderField | undefined
    }
  }
}

export interface BranchNamePatternParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'BranchNamePatternParametersInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly negate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly operator: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface BulkSponsorship extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'BulkSponsorship'
  readonly f: {
    readonly amount: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly sponsorableId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CancelEnterpriseAdminInvitationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CancelEnterpriseAdminInvitationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly invitationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CancelEnterpriseMemberInvitationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CancelEnterpriseMemberInvitationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly invitationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CancelSponsorshipInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CancelSponsorshipInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sponsorId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sponsorableId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface ChangeUserStatusInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ChangeUserStatusInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly emoji: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expiresAt: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly limitedAvailability: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly message: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface CheckAnnotationData extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckAnnotationData'
  readonly f: {
    readonly annotationLevel: {
      readonly nt: 'CheckAnnotationLevel'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.CheckAnnotationLevel
    }
    readonly location: {
      readonly nt: 'CheckAnnotationRange'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.CheckAnnotationRange
    }
    readonly message: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly rawDetails: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CheckAnnotationRange extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckAnnotationRange'
  readonly f: {
    readonly endColumn: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly endLine: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly startColumn: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly startLine: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface CheckRunAction extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckRunAction'
  readonly f: {
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly identifier: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly label: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CheckRunFilter extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckRunFilter'
  readonly f: {
    readonly appId: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly checkName: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly checkType: {
      readonly nt: 'CheckRunType'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckRunType | undefined
    }
    readonly conclusions: {
      readonly nt: 'CheckConclusionState'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckConclusionState[] | undefined
    }
    readonly status: {
      readonly nt: 'CheckStatusState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckStatusState | undefined
    }
    readonly statuses: {
      readonly nt: 'CheckStatusState'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckStatusState[] | undefined
    }
  }
}

export interface CheckRunOutput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckRunOutput'
  readonly f: {
    readonly annotations: {
      readonly nt: 'CheckAnnotationData'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckAnnotationData[] | undefined
    }
    readonly images: {
      readonly nt: 'CheckRunOutputImage'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckRunOutputImage[] | undefined
    }
    readonly summary: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly text: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CheckRunOutputImage extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckRunOutputImage'
  readonly f: {
    readonly alt: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly caption: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly imageUrl: {
      readonly nt: 'URI'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.URI
    }
  }
}

export interface CheckSuiteAutoTriggerPreference extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckSuiteAutoTriggerPreference'
  readonly f: {
    readonly appId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly setting: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface CheckSuiteFilter extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CheckSuiteFilter'
  readonly f: {
    readonly appId: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly checkName: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface ClearLabelsFromLabelableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ClearLabelsFromLabelableInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labelableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ClearProjectV2ItemFieldValueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ClearProjectV2ItemFieldValueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fieldId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CloneProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CloneProjectInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly includeWorkflows: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly public: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly sourceId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly targetOwnerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CloneTemplateRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CloneTemplateRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly includeAllBranches: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly visibility: {
      readonly nt: 'RepositoryVisibility'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryVisibility
    }
  }
}

export interface CloseDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CloseDiscussionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly discussionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly reason: {
      readonly nt: 'DiscussionCloseReason'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DiscussionCloseReason | undefined
    }
  }
}

export interface CloseIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CloseIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly duplicateIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly stateReason: {
      readonly nt: 'IssueClosedStateReason'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.IssueClosedStateReason | undefined
    }
  }
}

export interface ClosePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ClosePullRequestInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CodeScanningParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CodeScanningParametersInput'
  readonly f: {
    readonly codeScanningTools: {
      readonly nt: 'CodeScanningToolInput'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.CodeScanningToolInput[]
    }
  }
}

export interface CodeScanningToolInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CodeScanningToolInput'
  readonly f: {
    readonly alertsThreshold: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly securityAlertsThreshold: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly tool: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CommitAuthor extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitAuthor'
  readonly f: {
    readonly emails: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface CommitAuthorEmailPatternParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitAuthorEmailPatternParametersInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly negate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly operator: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CommitContributionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitContributionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'CommitContributionOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.CommitContributionOrderField
    }
  }
}

export interface CommitMessage extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitMessage'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly headline: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CommitMessagePatternParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitMessagePatternParametersInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly negate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly operator: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CommittableBranch extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommittableBranch'
  readonly f: {
    readonly branchName: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly repositoryNameWithOwner: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CommitterEmailPatternParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CommitterEmailPatternParametersInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly negate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly operator: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface ContributionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ContributionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
  }
}

export interface ConvertProjectCardNoteToIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ConvertProjectCardNoteToIssueInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectCardId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface ConvertProjectV2DraftIssueItemToIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ConvertProjectV2DraftIssueItemToIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ConvertPullRequestToDraftInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ConvertPullRequestToDraftInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CopyProjectV2Input extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CopyProjectV2Input'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly includeDraftIssues: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateAttributionInvitationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateAttributionInvitationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly sourceId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly targetId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateBranchProtectionRuleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateBranchProtectionRuleInput'
  readonly f: {
    readonly allowsDeletions: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly allowsForcePushes: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly blocksCreations: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly bypassForcePushActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly bypassPullRequestActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly dismissesStaleReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly isAdminEnforced: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly lockAllowsFetchAndMerge: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly lockBranch: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pushActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly requireLastPushApproval: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiredApprovingReviewCount: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly requiredDeploymentEnvironments: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly requiredStatusCheckContexts: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly requiredStatusChecks: {
      readonly nt: 'RequiredStatusCheckInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RequiredStatusCheckInput[] | undefined
    }
    readonly requiresApprovingReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresCodeOwnerReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresCommitSignatures: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresConversationResolution: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresDeployments: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresLinearHistory: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresStatusChecks: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresStrictStatusChecks: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly restrictsPushes: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly restrictsReviewDismissals: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly reviewDismissalActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
  }
}

export interface CreateCheckRunInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateCheckRunInput'
  readonly f: {
    readonly actions: {
      readonly nt: 'CheckRunAction'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckRunAction[] | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly completedAt: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly conclusion: {
      readonly nt: 'CheckConclusionState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckConclusionState | undefined
    }
    readonly detailsUrl: {
      readonly nt: 'URI'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.URI | undefined
    }
    readonly externalId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly headSha: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly output: {
      readonly nt: 'CheckRunOutput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckRunOutput | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly startedAt: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly status: {
      readonly nt: 'RequestableCheckStatusState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RequestableCheckStatusState | undefined
    }
  }
}

export interface CreateCheckSuiteInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateCheckSuiteInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly headSha: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateCommitOnBranchInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateCommitOnBranchInput'
  readonly f: {
    readonly branch: {
      readonly nt: 'CommittableBranch'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.CommittableBranch
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expectedHeadOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly fileChanges: {
      readonly nt: 'FileChanges'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.FileChanges | undefined
    }
    readonly message: {
      readonly nt: 'CommitMessage'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.CommitMessage
    }
  }
}

export interface CreateDeploymentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateDeploymentInput'
  readonly f: {
    readonly autoMerge: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environment: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly payload: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly refId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly requiredContexts: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly task: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CreateDeploymentStatusInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateDeploymentStatusInput'
  readonly f: {
    readonly autoInactive: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly deploymentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environment: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly logUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly state: {
      readonly nt: 'DeploymentStatusState'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.DeploymentStatusState
    }
  }
}

export interface CreateDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateDiscussionInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly categoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateEnterpriseOrganizationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateEnterpriseOrganizationInput'
  readonly f: {
    readonly adminLogins: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
    readonly billingEmail: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly profileName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateEnvironmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateEnvironmentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateIpAllowListEntryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateIpAllowListEntryInput'
  readonly f: {
    readonly allowListValue: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly isActive: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateIssueInput'
  readonly f: {
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueTemplate: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labelIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly milestoneId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly parentIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly projectIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateLabelInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateLabelInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly color: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateLinkedBranchInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateLinkedBranchInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly oid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface CreateMigrationSourceInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateMigrationSourceInput'
  readonly f: {
    readonly accessToken: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly githubPat: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly type: {
      readonly nt: 'MigrationSourceType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.MigrationSourceType
    }
    readonly url: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CreateProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateProjectInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly template: {
      readonly nt: 'ProjectTemplate'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ProjectTemplate | undefined
    }
  }
}

export interface CreateProjectV2FieldInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateProjectV2FieldInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly dataType: {
      readonly nt: 'ProjectV2CustomFieldType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2CustomFieldType
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly singleSelectOptions: {
      readonly nt: 'ProjectV2SingleSelectFieldOptionInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ProjectV2SingleSelectFieldOptionInput[] | undefined
    }
  }
}

export interface CreateProjectV2Input extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateProjectV2Input'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateProjectV2StatusUpdateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateProjectV2StatusUpdateInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly startDate: {
      readonly nt: 'Date'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Date | undefined
    }
    readonly status: {
      readonly nt: 'ProjectV2StatusUpdateStatus'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ProjectV2StatusUpdateStatus | undefined
    }
    readonly targetDate: {
      readonly nt: 'Date'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Date | undefined
    }
  }
}

export interface CreatePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreatePullRequestInput'
  readonly f: {
    readonly baseRefName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly draft: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly headRefName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly headRepositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly maintainerCanModify: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface CreateRefInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateRefInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly oid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface CreateRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly hasIssuesEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly hasWikiEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly homepageUrl: {
      readonly nt: 'URI'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.URI | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly template: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly visibility: {
      readonly nt: 'RepositoryVisibility'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryVisibility
    }
  }
}

export interface CreateRepositoryRulesetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateRepositoryRulesetInput'
  readonly f: {
    readonly bypassActors: {
      readonly nt: 'RepositoryRulesetBypassActorInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RepositoryRulesetBypassActorInput[] | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly conditions: {
      readonly nt: 'RepositoryRuleConditionsInput'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryRuleConditionsInput
    }
    readonly enforcement: {
      readonly nt: 'RuleEnforcement'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RuleEnforcement
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly rules: {
      readonly nt: 'RepositoryRuleInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RepositoryRuleInput[] | undefined
    }
    readonly sourceId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly target: {
      readonly nt: 'RepositoryRulesetTarget'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryRulesetTarget | undefined
    }
  }
}

export interface CreateSponsorshipInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateSponsorshipInput'
  readonly f: {
    readonly amount: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly isRecurring: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly privacyLevel: {
      readonly nt: 'SponsorshipPrivacy'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.SponsorshipPrivacy | undefined
    }
    readonly receiveEmails: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly sponsorId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sponsorableId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly tierId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface CreateSponsorshipsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateSponsorshipsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly privacyLevel: {
      readonly nt: 'SponsorshipPrivacy'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.SponsorshipPrivacy | undefined
    }
    readonly receiveEmails: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly recurring: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly sponsorLogin: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly sponsorships: {
      readonly nt: 'BulkSponsorship'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.BulkSponsorship[]
    }
  }
}

export interface CreateSponsorsListingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateSponsorsListingInput'
  readonly f: {
    readonly billingCountryOrRegionCode: {
      readonly nt: 'SponsorsCountryOrRegionCode'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.SponsorsCountryOrRegionCode | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly contactEmail: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fiscalHostLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fiscallyHostedProjectProfileUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fullDescription: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly residenceCountryOrRegionCode: {
      readonly nt: 'SponsorsCountryOrRegionCode'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.SponsorsCountryOrRegionCode | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CreateSponsorsTierInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateSponsorsTierInput'
  readonly f: {
    readonly amount: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly isRecurring: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly publish: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly repositoryName: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryOwnerLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sponsorableId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly welcomeMessage: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CreateTeamDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateTeamDiscussionCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly discussionId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface CreateTeamDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateTeamDiscussionInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly private: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface CreateUserListInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'CreateUserListInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly isPrivate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface DeclineTopicSuggestionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeclineTopicSuggestionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly reason: {
      readonly nt: 'TopicSuggestionDeclineReason'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.TopicSuggestionDeclineReason | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface DeleteBranchProtectionRuleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteBranchProtectionRuleInput'
  readonly f: {
    readonly branchProtectionRuleId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface DeleteDeploymentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteDeploymentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteDiscussionCommentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteDiscussionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteEnvironmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteEnvironmentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteIpAllowListEntryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteIpAllowListEntryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ipAllowListEntryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteIssueCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteIssueCommentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteLabelInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteLabelInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteLinkedBranchInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteLinkedBranchInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly linkedBranchId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeletePackageVersionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeletePackageVersionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly packageVersionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectCardInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectCardInput'
  readonly f: {
    readonly cardId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface DeleteProjectColumnInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectColumnInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly columnId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectV2FieldInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectV2FieldInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fieldId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectV2Input extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectV2Input'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectV2ItemInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectV2ItemInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectV2StatusUpdateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectV2StatusUpdateInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly statusUpdateId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteProjectV2WorkflowInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteProjectV2WorkflowInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly workflowId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeletePullRequestReviewCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeletePullRequestReviewCommentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeletePullRequestReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeletePullRequestReviewInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteRefInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteRefInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly refId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteRepositoryRulesetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteRepositoryRulesetInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryRulesetId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteTeamDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteTeamDiscussionCommentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteTeamDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteTeamDiscussionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteUserListInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteUserListInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly listId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeleteVerifiableDomainInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeleteVerifiableDomainInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DeploymentOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DeploymentOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'DeploymentOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.DeploymentOrderField
    }
  }
}

export interface DequeuePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DequeuePullRequestInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DisablePullRequestAutoMergeInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DisablePullRequestAutoMergeInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DiscussionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DiscussionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'DiscussionOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.DiscussionOrderField
    }
  }
}

export interface DiscussionPollOptionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DiscussionPollOptionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'DiscussionPollOptionOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.DiscussionPollOptionOrderField
    }
  }
}

export interface DismissPullRequestReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DismissPullRequestReviewInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly message: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DismissRepositoryVulnerabilityAlertInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DismissRepositoryVulnerabilityAlertInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly dismissReason: {
      readonly nt: 'DismissReason'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.DismissReason
    }
    readonly repositoryVulnerabilityAlertId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface DraftPullRequestReviewComment extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DraftPullRequestReviewComment'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly position: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface DraftPullRequestReviewThread extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'DraftPullRequestReviewThread'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly line: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly side: {
      readonly nt: 'DiffSide'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DiffSide | undefined
    }
    readonly startLine: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly startSide: {
      readonly nt: 'DiffSide'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DiffSide | undefined
    }
  }
}

export interface EnablePullRequestAutoMergeInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnablePullRequestAutoMergeInput'
  readonly f: {
    readonly authorEmail: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitBody: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitHeadline: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expectedHeadOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly mergeMethod: {
      readonly nt: 'PullRequestMergeMethod'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestMergeMethod | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface EnqueuePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnqueuePullRequestInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expectedHeadOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly jump: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface EnterpriseAdministratorInvitationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseAdministratorInvitationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseAdministratorInvitationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseAdministratorInvitationOrderField
    }
  }
}

export interface EnterpriseMemberInvitationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseMemberInvitationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseMemberInvitationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseMemberInvitationOrderField
    }
  }
}

export interface EnterpriseMemberOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseMemberOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseMemberOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseMemberOrderField
    }
  }
}

export interface EnterpriseOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseOrderField
    }
  }
}

export interface EnterpriseServerInstallationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseServerInstallationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseServerInstallationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseServerInstallationOrderField
    }
  }
}

export interface EnterpriseServerUserAccountEmailOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseServerUserAccountEmailOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseServerUserAccountEmailOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseServerUserAccountEmailOrderField
    }
  }
}

export interface EnterpriseServerUserAccountOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseServerUserAccountOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseServerUserAccountOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseServerUserAccountOrderField
    }
  }
}

export interface EnterpriseServerUserAccountsUploadOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'EnterpriseServerUserAccountsUploadOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnterpriseServerUserAccountsUploadOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseServerUserAccountsUploadOrderField
    }
  }
}

export interface Environments extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'Environments'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'EnvironmentOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnvironmentOrderField
    }
  }
}

export interface FileAddition extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FileAddition'
  readonly f: {
    readonly contents: {
      readonly nt: 'Base64String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Base64String
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface FileChanges extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FileChanges'
  readonly f: {
    readonly additions: {
      readonly nt: 'FileAddition'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.FileAddition[] | undefined
    }
    readonly deletions: {
      readonly nt: 'FileDeletion'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.FileDeletion[] | undefined
    }
  }
}

export interface FileDeletion extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FileDeletion'
  readonly f: {
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface FileExtensionRestrictionParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FileExtensionRestrictionParametersInput'
  readonly f: {
    readonly restrictedFileExtensions: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
  }
}

export interface FilePathRestrictionParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FilePathRestrictionParametersInput'
  readonly f: {
    readonly restrictedFilePaths: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
  }
}

export interface FollowOrganizationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FollowOrganizationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface FollowUserInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'FollowUserInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface GistOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'GistOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'GistOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GistOrderField
    }
  }
}

export interface GrantEnterpriseOrganizationsMigratorRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'GrantEnterpriseOrganizationsMigratorRoleInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface GrantMigratorRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'GrantMigratorRoleInput'
  readonly f: {
    readonly actor: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly actorType: {
      readonly nt: 'ActorType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ActorType
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ImportProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ImportProjectInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly columnImports: {
      readonly nt: 'ProjectColumnImport'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ProjectColumnImport[]
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ownerName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly public: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
  }
}

export interface InviteEnterpriseAdminInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'InviteEnterpriseAdminInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly email: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly invitee: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly role: {
      readonly nt: 'EnterpriseAdministratorRole'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.EnterpriseAdministratorRole | undefined
    }
  }
}

export interface InviteEnterpriseMemberInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'InviteEnterpriseMemberInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly email: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly invitee: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface IpAllowListEntryOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'IpAllowListEntryOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'IpAllowListEntryOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.IpAllowListEntryOrderField
    }
  }
}

export interface IssueCommentOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'IssueCommentOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'IssueCommentOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.IssueCommentOrderField
    }
  }
}

export interface IssueFilters extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'IssueFilters'
  readonly f: {
    readonly assignee: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly createdBy: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labels: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly mentioned: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly milestone: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly milestoneNumber: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly since: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly states: {
      readonly nt: 'IssueState'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.IssueState[] | undefined
    }
    readonly viewerSubscribed: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
  }
}

export interface IssueOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'IssueOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'IssueOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.IssueOrderField
    }
  }
}

export interface LabelOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LabelOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'LabelOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.LabelOrderField
    }
  }
}

export interface LanguageOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LanguageOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'LanguageOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.LanguageOrderField
    }
  }
}

export interface LinkProjectV2ToRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LinkProjectV2ToRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface LinkProjectV2ToTeamInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LinkProjectV2ToTeamInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface LinkRepositoryToProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LinkRepositoryToProjectInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface LockLockableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'LockLockableInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly lockReason: {
      readonly nt: 'LockReason'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.LockReason | undefined
    }
    readonly lockableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MannequinOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MannequinOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'MannequinOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.MannequinOrderField
    }
  }
}

export interface MarkDiscussionCommentAsAnswerInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MarkDiscussionCommentAsAnswerInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MarkFileAsViewedInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MarkFileAsViewedInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MarkProjectV2AsTemplateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MarkProjectV2AsTemplateInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MarkPullRequestReadyForReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MarkPullRequestReadyForReviewInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MaxFilePathLengthParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MaxFilePathLengthParametersInput'
  readonly f: {
    readonly maxFilePathLength: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface MaxFileSizeParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MaxFileSizeParametersInput'
  readonly f: {
    readonly maxFileSize: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface MergeBranchInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MergeBranchInput'
  readonly f: {
    readonly authorEmail: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly base: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitMessage: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly head: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MergePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MergePullRequestInput'
  readonly f: {
    readonly authorEmail: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitBody: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commitHeadline: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expectedHeadOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly mergeMethod: {
      readonly nt: 'PullRequestMergeMethod'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestMergeMethod | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MergeQueueParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MergeQueueParametersInput'
  readonly f: {
    readonly checkResponseTimeoutMinutes: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly groupingStrategy: {
      readonly nt: 'MergeQueueGroupingStrategy'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.MergeQueueGroupingStrategy
    }
    readonly maxEntriesToBuild: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly maxEntriesToMerge: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly mergeMethod: {
      readonly nt: 'MergeQueueMergeMethod'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.MergeQueueMergeMethod
    }
    readonly minEntriesToMerge: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly minEntriesToMergeWaitMinutes: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface MilestoneOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MilestoneOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'MilestoneOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.MilestoneOrderField
    }
  }
}

export interface MinimizeCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MinimizeCommentInput'
  readonly f: {
    readonly classifier: {
      readonly nt: 'ReportedContentClassifiers'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ReportedContentClassifiers
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MoveProjectCardInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MoveProjectCardInput'
  readonly f: {
    readonly afterCardId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly cardId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly columnId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface MoveProjectColumnInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'MoveProjectColumnInput'
  readonly f: {
    readonly afterColumnId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly columnId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface OrganizationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'OrganizationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'OrganizationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrganizationOrderField
    }
  }
}

export interface OrgEnterpriseOwnerOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'OrgEnterpriseOwnerOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'OrgEnterpriseOwnerOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrgEnterpriseOwnerOrderField
    }
  }
}

export interface PackageFileOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PackageFileOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.OrderDirection | undefined
    }
    readonly field: {
      readonly nt: 'PackageFileOrderField'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PackageFileOrderField | undefined
    }
  }
}

export interface PackageOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PackageOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.OrderDirection | undefined
    }
    readonly field: {
      readonly nt: 'PackageOrderField'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PackageOrderField | undefined
    }
  }
}

export interface PackageVersionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PackageVersionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.OrderDirection | undefined
    }
    readonly field: {
      readonly nt: 'PackageVersionOrderField'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PackageVersionOrderField | undefined
    }
  }
}

export interface PinEnvironmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PinEnvironmentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly pinned: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface PinIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PinIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface PinnedEnvironmentOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PinnedEnvironmentOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'PinnedEnvironmentOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.PinnedEnvironmentOrderField
    }
  }
}

export interface ProjectCardImport extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectCardImport'
  readonly f: {
    readonly number: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly repository: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface ProjectColumnImport extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectColumnImport'
  readonly f: {
    readonly columnName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly issues: {
      readonly nt: 'ProjectCardImport'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ProjectCardImport[] | undefined
    }
    readonly position: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface ProjectOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectOrderField
    }
  }
}

export interface ProjectV2Collaborator extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2Collaborator'
  readonly f: {
    readonly role: {
      readonly nt: 'ProjectV2Roles'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2Roles
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface ProjectV2FieldOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2FieldOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2FieldOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2FieldOrderField
    }
  }
}

export interface ProjectV2FieldValue extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2FieldValue'
  readonly f: {
    readonly date: {
      readonly nt: 'Date'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Date | undefined
    }
    readonly iterationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly number: {
      readonly nt: 'Float'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Float | undefined
    }
    readonly singleSelectOptionId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly text: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface ProjectV2Filters extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2Filters'
  readonly f: {
    readonly state: {
      readonly nt: 'ProjectV2State'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ProjectV2State | undefined
    }
  }
}

export interface ProjectV2ItemFieldValueOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2ItemFieldValueOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2ItemFieldValueOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2ItemFieldValueOrderField
    }
  }
}

export interface ProjectV2ItemOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2ItemOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2ItemOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2ItemOrderField
    }
  }
}

export interface ProjectV2Order extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2Order'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2OrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2OrderField
    }
  }
}

export interface ProjectV2SingleSelectFieldOptionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2SingleSelectFieldOptionInput'
  readonly f: {
    readonly color: {
      readonly nt: 'ProjectV2SingleSelectFieldOptionColor'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2SingleSelectFieldOptionColor
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface ProjectV2StatusOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2StatusOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2StatusUpdateOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2StatusUpdateOrderField
    }
  }
}

export interface ProjectV2ViewOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2ViewOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2ViewOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2ViewOrderField
    }
  }
}

export interface ProjectV2WorkflowOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ProjectV2WorkflowOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ProjectV2WorkflowsOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2WorkflowsOrderField
    }
  }
}

export interface PropertyTargetDefinitionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PropertyTargetDefinitionInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly propertyValues: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
    readonly source: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface PublishSponsorsTierInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PublishSponsorsTierInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly tierId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface PullRequestOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PullRequestOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'PullRequestOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.PullRequestOrderField
    }
  }
}

export interface PullRequestParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'PullRequestParametersInput'
  readonly f: {
    readonly allowedMergeMethods: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly dismissStaleReviewsOnPush: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly requireCodeOwnerReview: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly requireLastPushApproval: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly requiredApprovingReviewCount: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly requiredReviewThreadResolution: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface ReactionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReactionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ReactionOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ReactionOrderField
    }
  }
}

export interface RefNameConditionTargetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RefNameConditionTargetInput'
  readonly f: {
    readonly exclude: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
    readonly include: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
  }
}

export interface RefOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RefOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'RefOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RefOrderField
    }
  }
}

export interface RefUpdate extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RefUpdate'
  readonly f: {
    readonly afterOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly beforeOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly force: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly name: {
      readonly nt: 'GitRefname'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitRefname
    }
  }
}

export interface RegenerateEnterpriseIdentityProviderRecoveryCodesInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'RegenerateEnterpriseIdentityProviderRecoveryCodesInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RegenerateVerifiableDomainTokenInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RegenerateVerifiableDomainTokenInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RejectDeploymentsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RejectDeploymentsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly comment: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly workflowRunId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ReleaseOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReleaseOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'ReleaseOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ReleaseOrderField
    }
  }
}

export interface RemoveAssigneesFromAssignableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveAssigneesFromAssignableInput'
  readonly f: {
    readonly assignableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface RemoveEnterpriseAdminInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveEnterpriseAdminInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface RemoveEnterpriseIdentityProviderInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveEnterpriseIdentityProviderInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveEnterpriseMemberInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveEnterpriseMemberInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveEnterpriseOrganizationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveEnterpriseOrganizationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveEnterpriseSupportEntitlementInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveEnterpriseSupportEntitlementInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface RemoveLabelsFromLabelableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveLabelsFromLabelableInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labelIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly labelableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveOutsideCollaboratorInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveOutsideCollaboratorInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveReactionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveReactionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly content: {
      readonly nt: 'ReactionContent'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ReactionContent
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveStarInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveStarInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly starrableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveSubIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveSubIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly subIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RemoveUpvoteInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RemoveUpvoteInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ReopenDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReopenDiscussionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly discussionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ReopenIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReopenIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ReopenPullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReopenPullRequestInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ReorderEnvironmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReorderEnvironmentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly position: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
  }
}

export interface RepositoryIdConditionTargetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryIdConditionTargetInput'
  readonly f: {
    readonly repositoryIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
  }
}

export interface RepositoryInvitationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryInvitationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'RepositoryInvitationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryInvitationOrderField
    }
  }
}

export interface RepositoryMigrationOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryMigrationOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'RepositoryMigrationOrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryMigrationOrderDirection
    }
    readonly field: {
      readonly nt: 'RepositoryMigrationOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryMigrationOrderField
    }
  }
}

export interface RepositoryNameConditionTargetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryNameConditionTargetInput'
  readonly f: {
    readonly exclude: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
    readonly include: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
    readonly protected: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
  }
}

export interface RepositoryOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'RepositoryOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryOrderField
    }
  }
}

export interface RepositoryPropertyConditionTargetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryPropertyConditionTargetInput'
  readonly f: {
    readonly exclude: {
      readonly nt: 'PropertyTargetDefinitionInput'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.PropertyTargetDefinitionInput[]
    }
    readonly include: {
      readonly nt: 'PropertyTargetDefinitionInput'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.PropertyTargetDefinitionInput[]
    }
  }
}

export interface RepositoryRuleConditionsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryRuleConditionsInput'
  readonly f: {
    readonly refName: {
      readonly nt: 'RefNameConditionTargetInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RefNameConditionTargetInput | undefined
    }
    readonly repositoryId: {
      readonly nt: 'RepositoryIdConditionTargetInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryIdConditionTargetInput | undefined
    }
    readonly repositoryName: {
      readonly nt: 'RepositoryNameConditionTargetInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryNameConditionTargetInput | undefined
    }
    readonly repositoryProperty: {
      readonly nt: 'RepositoryPropertyConditionTargetInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryPropertyConditionTargetInput | undefined
    }
  }
}

export interface RepositoryRuleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryRuleInput'
  readonly f: {
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly parameters: {
      readonly nt: 'RuleParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RuleParametersInput | undefined
    }
    readonly type: {
      readonly nt: 'RepositoryRuleType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryRuleType
    }
  }
}

export interface RepositoryRuleOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryRuleOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'RepositoryRuleOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryRuleOrderField
    }
  }
}

export interface RepositoryRulesetBypassActorInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RepositoryRulesetBypassActorInput'
  readonly f: {
    readonly actorId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly bypassMode: {
      readonly nt: 'RepositoryRulesetBypassActorBypassMode'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryRulesetBypassActorBypassMode
    }
    readonly deployKey: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly enterpriseOwner: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly organizationAdmin: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly repositoryRoleDatabaseId: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
  }
}

export interface ReprioritizeSubIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ReprioritizeSubIssueInput'
  readonly f: {
    readonly afterId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly beforeId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly subIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RequestReviewsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RequestReviewsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly teamIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly union: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly userIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
  }
}

export interface RequiredDeploymentsParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RequiredDeploymentsParametersInput'
  readonly f: {
    readonly requiredDeploymentEnvironments: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
  }
}

export interface RequiredStatusCheckInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RequiredStatusCheckInput'
  readonly f: {
    readonly appId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly context: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface RequiredStatusChecksParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RequiredStatusChecksParametersInput'
  readonly f: {
    readonly doNotEnforceOnCreate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiredStatusChecks: {
      readonly nt: 'StatusCheckConfigurationInput'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.StatusCheckConfigurationInput[]
    }
    readonly strictRequiredStatusChecksPolicy: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface RerequestCheckSuiteInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RerequestCheckSuiteInput'
  readonly f: {
    readonly checkSuiteId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface ResolveReviewThreadInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'ResolveReviewThreadInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly threadId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RetireSponsorsTierInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RetireSponsorsTierInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly tierId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RevertPullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RevertPullRequestInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly draft: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface RevokeEnterpriseOrganizationsMigratorRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RevokeEnterpriseOrganizationsMigratorRoleInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface RevokeMigratorRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RevokeMigratorRoleInput'
  readonly f: {
    readonly actor: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly actorType: {
      readonly nt: 'ActorType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ActorType
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface RuleParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'RuleParametersInput'
  readonly f: {
    readonly branchNamePattern: {
      readonly nt: 'BranchNamePatternParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.BranchNamePatternParametersInput | undefined
    }
    readonly codeScanning: {
      readonly nt: 'CodeScanningParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CodeScanningParametersInput | undefined
    }
    readonly commitAuthorEmailPattern: {
      readonly nt: 'CommitAuthorEmailPatternParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CommitAuthorEmailPatternParametersInput | undefined
    }
    readonly commitMessagePattern: {
      readonly nt: 'CommitMessagePatternParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CommitMessagePatternParametersInput | undefined
    }
    readonly committerEmailPattern: {
      readonly nt: 'CommitterEmailPatternParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CommitterEmailPatternParametersInput | undefined
    }
    readonly fileExtensionRestriction: {
      readonly nt: 'FileExtensionRestrictionParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.FileExtensionRestrictionParametersInput | undefined
    }
    readonly filePathRestriction: {
      readonly nt: 'FilePathRestrictionParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.FilePathRestrictionParametersInput | undefined
    }
    readonly maxFilePathLength: {
      readonly nt: 'MaxFilePathLengthParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.MaxFilePathLengthParametersInput | undefined
    }
    readonly maxFileSize: {
      readonly nt: 'MaxFileSizeParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.MaxFileSizeParametersInput | undefined
    }
    readonly mergeQueue: {
      readonly nt: 'MergeQueueParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.MergeQueueParametersInput | undefined
    }
    readonly pullRequest: {
      readonly nt: 'PullRequestParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestParametersInput | undefined
    }
    readonly requiredDeployments: {
      readonly nt: 'RequiredDeploymentsParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RequiredDeploymentsParametersInput | undefined
    }
    readonly requiredStatusChecks: {
      readonly nt: 'RequiredStatusChecksParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RequiredStatusChecksParametersInput | undefined
    }
    readonly tagNamePattern: {
      readonly nt: 'TagNamePatternParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.TagNamePatternParametersInput | undefined
    }
    readonly update: {
      readonly nt: 'UpdateParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.UpdateParametersInput | undefined
    }
    readonly workflows: {
      readonly nt: 'WorkflowsParametersInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.WorkflowsParametersInput | undefined
    }
  }
}

export interface SavedReplyOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SavedReplyOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SavedReplyOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SavedReplyOrderField
    }
  }
}

export interface SecurityAdvisoryIdentifierFilter extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SecurityAdvisoryIdentifierFilter'
  readonly f: {
    readonly type: {
      readonly nt: 'SecurityAdvisoryIdentifierType'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SecurityAdvisoryIdentifierType
    }
    readonly value: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface SecurityAdvisoryOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SecurityAdvisoryOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SecurityAdvisoryOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SecurityAdvisoryOrderField
    }
  }
}

export interface SecurityVulnerabilityOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SecurityVulnerabilityOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SecurityVulnerabilityOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SecurityVulnerabilityOrderField
    }
  }
}

export interface SetEnterpriseIdentityProviderInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SetEnterpriseIdentityProviderInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly digestMethod: {
      readonly nt: 'SamlDigestAlgorithm'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SamlDigestAlgorithm
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly idpCertificate: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly issuer: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly signatureMethod: {
      readonly nt: 'SamlSignatureAlgorithm'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SamlSignatureAlgorithm
    }
    readonly ssoUrl: {
      readonly nt: 'URI'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.URI
    }
  }
}

export interface SetOrganizationInteractionLimitInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SetOrganizationInteractionLimitInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expiry: {
      readonly nt: 'RepositoryInteractionLimitExpiry'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimitExpiry | undefined
    }
    readonly limit: {
      readonly nt: 'RepositoryInteractionLimit'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimit
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface SetRepositoryInteractionLimitInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SetRepositoryInteractionLimitInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expiry: {
      readonly nt: 'RepositoryInteractionLimitExpiry'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimitExpiry | undefined
    }
    readonly limit: {
      readonly nt: 'RepositoryInteractionLimit'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimit
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface SetUserInteractionLimitInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SetUserInteractionLimitInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expiry: {
      readonly nt: 'RepositoryInteractionLimitExpiry'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimitExpiry | undefined
    }
    readonly limit: {
      readonly nt: 'RepositoryInteractionLimit'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryInteractionLimit
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface SponsorableOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorableOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorableOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorableOrderField
    }
  }
}

export interface SponsorAndLifetimeValueOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorAndLifetimeValueOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorAndLifetimeValueOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorAndLifetimeValueOrderField
    }
  }
}

export interface SponsorOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorOrderField
    }
  }
}

export interface SponsorsActivityOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorsActivityOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorsActivityOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorsActivityOrderField
    }
  }
}

export interface SponsorshipNewsletterOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorshipNewsletterOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorshipNewsletterOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorshipNewsletterOrderField
    }
  }
}

export interface SponsorshipOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorshipOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorshipOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorshipOrderField
    }
  }
}

export interface SponsorsTierOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SponsorsTierOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'SponsorsTierOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SponsorsTierOrderField
    }
  }
}

export interface StarOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'StarOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'StarOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.StarOrderField
    }
  }
}

export interface StartOrganizationMigrationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'StartOrganizationMigrationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sourceAccessToken: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly sourceOrgUrl: {
      readonly nt: 'URI'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.URI
    }
    readonly targetEnterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly targetOrgName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface StartRepositoryMigrationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'StartRepositoryMigrationInput'
  readonly f: {
    readonly accessToken: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly continueOnError: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly gitArchiveUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly githubPat: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly lockSource: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly metadataArchiveUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryName: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly skipReleases: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly sourceId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly sourceRepositoryUrl: {
      readonly nt: 'URI'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.URI
    }
    readonly targetRepoVisibility: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface StatusCheckConfigurationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'StatusCheckConfigurationInput'
  readonly f: {
    readonly context: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly integrationId: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
  }
}

export interface SubmitPullRequestReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'SubmitPullRequestReviewInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly event: {
      readonly nt: 'PullRequestReviewEvent'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.PullRequestReviewEvent
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
  }
}

export interface TagNamePatternParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TagNamePatternParametersInput'
  readonly f: {
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly negate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly operator: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
  }
}

export interface TeamDiscussionCommentOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TeamDiscussionCommentOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'TeamDiscussionCommentOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.TeamDiscussionCommentOrderField
    }
  }
}

export interface TeamDiscussionOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TeamDiscussionOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'TeamDiscussionOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.TeamDiscussionOrderField
    }
  }
}

export interface TeamMemberOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TeamMemberOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'TeamMemberOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.TeamMemberOrderField
    }
  }
}

export interface TeamOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TeamOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'TeamOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.TeamOrderField
    }
  }
}

export interface TeamRepositoryOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TeamRepositoryOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'TeamRepositoryOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.TeamRepositoryOrderField
    }
  }
}

export interface TransferEnterpriseOrganizationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TransferEnterpriseOrganizationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly destinationEnterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface TransferIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'TransferIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly createLabelsIfMissing: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnarchiveProjectV2ItemInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnarchiveProjectV2ItemInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnarchiveRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnarchiveRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnfollowOrganizationInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnfollowOrganizationInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnfollowUserInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnfollowUserInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly userId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnlinkProjectV2FromRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnlinkProjectV2FromRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnlinkProjectV2FromTeamInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnlinkProjectV2FromTeamInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly teamId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnlinkRepositoryFromProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnlinkRepositoryFromProjectInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnlockLockableInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnlockLockableInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly lockableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnmarkDiscussionCommentAsAnswerInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnmarkDiscussionCommentAsAnswerInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnmarkFileAsViewedInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnmarkFileAsViewedInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnmarkIssueAsDuplicateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnmarkIssueAsDuplicateInput'
  readonly f: {
    readonly canonicalId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly duplicateId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnmarkProjectV2AsTemplateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnmarkProjectV2AsTemplateInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnminimizeCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnminimizeCommentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly subjectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnpinIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnpinIssueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly issueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UnresolveReviewThreadInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UnresolveReviewThreadInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly threadId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateBranchProtectionRuleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateBranchProtectionRuleInput'
  readonly f: {
    readonly allowsDeletions: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly allowsForcePushes: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly blocksCreations: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly branchProtectionRuleId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly bypassForcePushActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly bypassPullRequestActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly dismissesStaleReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly isAdminEnforced: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly lockAllowsFetchAndMerge: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly lockBranch: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly pattern: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pushActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly requireLastPushApproval: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiredApprovingReviewCount: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
    readonly requiredDeploymentEnvironments: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly requiredStatusCheckContexts: {
      readonly nt: 'String'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.String[] | undefined
    }
    readonly requiredStatusChecks: {
      readonly nt: 'RequiredStatusCheckInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RequiredStatusCheckInput[] | undefined
    }
    readonly requiresApprovingReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresCodeOwnerReviews: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresCommitSignatures: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresConversationResolution: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresDeployments: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresLinearHistory: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresStatusChecks: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly requiresStrictStatusChecks: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly restrictsPushes: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly restrictsReviewDismissals: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly reviewDismissalActorIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
  }
}

export interface UpdateCheckRunInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateCheckRunInput'
  readonly f: {
    readonly actions: {
      readonly nt: 'CheckRunAction'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.CheckRunAction[] | undefined
    }
    readonly checkRunId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly completedAt: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly conclusion: {
      readonly nt: 'CheckConclusionState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckConclusionState | undefined
    }
    readonly detailsUrl: {
      readonly nt: 'URI'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.URI | undefined
    }
    readonly externalId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly output: {
      readonly nt: 'CheckRunOutput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.CheckRunOutput | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly startedAt: {
      readonly nt: 'DateTime'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.DateTime | undefined
    }
    readonly status: {
      readonly nt: 'RequestableCheckStatusState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RequestableCheckStatusState | undefined
    }
  }
}

export interface UpdateCheckSuitePreferencesInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateCheckSuitePreferencesInput'
  readonly f: {
    readonly autoTriggerPreferences: {
      readonly nt: 'CheckSuiteAutoTriggerPreference'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.CheckSuiteAutoTriggerPreference[]
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateDiscussionCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly commentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateDiscussionInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly categoryId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly discussionId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateEnterpriseAdministratorRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseAdministratorRoleInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly login: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly role: {
      readonly nt: 'EnterpriseAdministratorRole'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseAdministratorRole
    }
  }
}

export interface UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly policyValue: {
      readonly nt: 'EnterpriseAllowPrivateRepositoryForkingPolicyValue'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.EnterpriseAllowPrivateRepositoryForkingPolicyValue | undefined
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseDefaultRepositoryPermissionSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseDefaultRepositoryPermissionSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseDefaultRepositoryPermissionSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseDefaultRepositoryPermissionSettingValue
    }
  }
}

export interface UpdateEnterpriseDeployKeySettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseDeployKeySettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanCreateRepositoriesSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanCreateRepositoriesSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly membersCanCreateInternalRepositories: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly membersCanCreatePrivateRepositories: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly membersCanCreatePublicRepositories: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly membersCanCreateRepositoriesPolicyEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseMembersCanCreateRepositoriesSettingValue'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.EnterpriseMembersCanCreateRepositoriesSettingValue | undefined
    }
  }
}

export interface UpdateEnterpriseMembersCanDeleteIssuesSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanDeleteIssuesSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanMakePurchasesSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanMakePurchasesSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseMembersCanMakePurchasesSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseMembersCanMakePurchasesSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseOrganizationProjectsSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseOrganizationProjectsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseOwnerOrganizationRoleInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseOwnerOrganizationRoleInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly organizationRole: {
      readonly nt: 'RoleInOrganization'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RoleInOrganization
    }
  }
}

export interface UpdateEnterpriseProfileInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseProfileInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly location: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly websiteUrl: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateEnterpriseRepositoryProjectsSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseRepositoryProjectsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseTeamDiscussionsSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnterpriseTeamDiscussionsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledDisabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledDisabledSettingValue
    }
  }
}

export interface UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseDisallowedMethodsSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseDisallowedMethodsSettingValue
    }
  }
}

export interface UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enterpriseId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'EnterpriseEnabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.EnterpriseEnabledSettingValue
    }
  }
}

export interface UpdateEnvironmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateEnvironmentInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly environmentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly preventSelfReview: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly reviewers: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly waitTimer: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
  }
}

export interface UpdateIpAllowListEnabledSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateIpAllowListEnabledSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'IpAllowListEnabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.IpAllowListEnabledSettingValue
    }
  }
}

export interface UpdateIpAllowListEntryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateIpAllowListEntryInput'
  readonly f: {
    readonly allowListValue: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ipAllowListEntryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly isActive: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateIpAllowListForInstalledAppsEnabledSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateIpAllowListForInstalledAppsEnabledSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'IpAllowListForInstalledAppsEnabledSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.IpAllowListForInstalledAppsEnabledSettingValue
    }
  }
}

export interface UpdateIssueCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateIssueCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateIssueInput'
  readonly f: {
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly labelIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly milestoneId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly projectIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly state: {
      readonly nt: 'IssueState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.IssueState | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateLabelInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateLabelInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly color: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateNotificationRestrictionSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateNotificationRestrictionSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly ownerId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly settingValue: {
      readonly nt: 'NotificationRestrictionSettingValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.NotificationRestrictionSettingValue
    }
  }
}

export interface UpdateOrganizationAllowPrivateRepositoryForkingSettingInput
  extends $$Utilities.SchemaDrivenDataMap.InputObject
{
  readonly n: 'UpdateOrganizationAllowPrivateRepositoryForkingSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly forkingEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateOrganizationWebCommitSignoffSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateOrganizationWebCommitSignoffSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly organizationId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly webCommitSignoffRequired: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface UpdateParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateParametersInput'
  readonly f: {
    readonly updateAllowsFetchAndMerge: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface UpdatePatreonSponsorabilityInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdatePatreonSponsorabilityInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly enablePatreonSponsorships: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateProjectCardInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectCardInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly isArchived: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly note: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectCardId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateProjectColumnInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectColumnInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly projectColumnId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateProjectInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly public: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly state: {
      readonly nt: 'ProjectState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ProjectState | undefined
    }
  }
}

export interface UpdateProjectV2CollaboratorsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2CollaboratorsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly collaborators: {
      readonly nt: 'ProjectV2Collaborator'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ProjectV2Collaborator[]
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateProjectV2DraftIssueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2DraftIssueInput'
  readonly f: {
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly draftIssueId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateProjectV2FieldInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2FieldInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fieldId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly singleSelectOptions: {
      readonly nt: 'ProjectV2SingleSelectFieldOptionInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ProjectV2SingleSelectFieldOptionInput[] | undefined
    }
  }
}

export interface UpdateProjectV2Input extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2Input'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly closed: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly public: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly readme: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly shortDescription: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateProjectV2ItemFieldValueInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2ItemFieldValueInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly fieldId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly value: {
      readonly nt: 'ProjectV2FieldValue'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ProjectV2FieldValue
    }
  }
}

export interface UpdateProjectV2ItemPositionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2ItemPositionInput'
  readonly f: {
    readonly afterId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly projectId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateProjectV2StatusUpdateInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateProjectV2StatusUpdateInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly startDate: {
      readonly nt: 'Date'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Date | undefined
    }
    readonly status: {
      readonly nt: 'ProjectV2StatusUpdateStatus'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ProjectV2StatusUpdateStatus | undefined
    }
    readonly statusUpdateId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly targetDate: {
      readonly nt: 'Date'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Date | undefined
    }
  }
}

export interface UpdatePullRequestBranchInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdatePullRequestBranchInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly expectedHeadOid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.GitObjectID | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly updateMethod: {
      readonly nt: 'PullRequestBranchUpdateMethod'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestBranchUpdateMethod | undefined
    }
  }
}

export interface UpdatePullRequestInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdatePullRequestInput'
  readonly f: {
    readonly assigneeIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly baseRefName: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly labelIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly maintainerCanModify: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly milestoneId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly projectIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly pullRequestId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly state: {
      readonly nt: 'PullRequestUpdateState'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.PullRequestUpdateState | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdatePullRequestReviewCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdatePullRequestReviewCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestReviewCommentId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdatePullRequestReviewInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdatePullRequestReviewInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly pullRequestReviewId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateRefInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateRefInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly force: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly oid: {
      readonly nt: 'GitObjectID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.GitObjectID
    }
    readonly refId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateRefsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateRefsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly refUpdates: {
      readonly nt: 'RefUpdate'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.RefUpdate[]
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly hasDiscussionsEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly hasIssuesEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly hasProjectsEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly hasSponsorshipsEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly hasWikiEnabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly homepageUrl: {
      readonly nt: 'URI'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.URI | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly template: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
  }
}

export interface UpdateRepositoryRulesetInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateRepositoryRulesetInput'
  readonly f: {
    readonly bypassActors: {
      readonly nt: 'RepositoryRulesetBypassActorInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RepositoryRulesetBypassActorInput[] | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly conditions: {
      readonly nt: 'RepositoryRuleConditionsInput'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryRuleConditionsInput | undefined
    }
    readonly enforcement: {
      readonly nt: 'RuleEnforcement'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RuleEnforcement | undefined
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryRulesetId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly rules: {
      readonly nt: 'RepositoryRuleInput'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.RepositoryRuleInput[] | undefined
    }
    readonly target: {
      readonly nt: 'RepositoryRulesetTarget'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.RepositoryRulesetTarget | undefined
    }
  }
}

export interface UpdateRepositoryWebCommitSignoffSettingInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateRepositoryWebCommitSignoffSettingInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly webCommitSignoffRequired: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
  }
}

export interface UpdateSponsorshipPreferencesInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateSponsorshipPreferencesInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly privacyLevel: {
      readonly nt: 'SponsorshipPrivacy'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.SponsorshipPrivacy | undefined
    }
    readonly receiveEmails: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly sponsorId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly sponsorableId: {
      readonly nt: 'ID'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.ID | undefined
    }
    readonly sponsorableLogin: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateSubscriptionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateSubscriptionInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly state: {
      readonly nt: 'SubscriptionState'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.SubscriptionState
    }
    readonly subscribableId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateTeamDiscussionCommentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateTeamDiscussionCommentInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly bodyVersion: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface UpdateTeamDiscussionInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateTeamDiscussionInput'
  readonly f: {
    readonly body: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly bodyVersion: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly pinned: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly title: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateTeamReviewAssignmentInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateTeamReviewAssignmentInput'
  readonly f: {
    readonly algorithm: {
      readonly nt: 'TeamReviewAssignmentAlgorithm'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.TeamReviewAssignmentAlgorithm | undefined
    }
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly countMembersAlreadyRequested: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly enabled: {
      readonly nt: 'Boolean'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Boolean
    }
    readonly excludedTeamMemberIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly includeChildTeamMembers: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly notifyTeam: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly removeTeamRequest: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly teamMemberCount: {
      readonly nt: 'Int'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Int | undefined
    }
  }
}

export interface UpdateTeamsRepositoryInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateTeamsRepositoryInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly permission: {
      readonly nt: 'RepositoryPermission'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.RepositoryPermission
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly teamIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
  }
}

export interface UpdateTopicsInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateTopicsInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly topicNames: {
      readonly nt: 'String'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.String[]
    }
  }
}

export interface UpdateUserListInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateUserListInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly description: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly isPrivate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly listId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly name: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface UpdateUserListsForItemInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UpdateUserListsForItemInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly itemId: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
    readonly listIds: {
      readonly nt: 'ID'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.ID[]
    }
    readonly suggestedListIds: {
      readonly nt: 'ID'
      readonly it: readonly [0, [1]]
      readonly $t: readonly TypeInputsIndex.ID[] | undefined
    }
  }
}

export interface UserStatusOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'UserStatusOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'UserStatusOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.UserStatusOrderField
    }
  }
}

export interface VerifiableDomainOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'VerifiableDomainOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'VerifiableDomainOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.VerifiableDomainOrderField
    }
  }
}

export interface VerifyVerifiableDomainInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'VerifyVerifiableDomainInput'
  readonly f: {
    readonly clientMutationId: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly id: {
      readonly nt: 'ID'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.ID
    }
  }
}

export interface WorkflowFileReferenceInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'WorkflowFileReferenceInput'
  readonly f: {
    readonly path: {
      readonly nt: 'String'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.String
    }
    readonly ref: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
    readonly repositoryId: {
      readonly nt: 'Int'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.Int
    }
    readonly sha: {
      readonly nt: 'String'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.String | undefined
    }
  }
}

export interface WorkflowRunOrder extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'WorkflowRunOrder'
  readonly f: {
    readonly direction: {
      readonly nt: 'OrderDirection'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.OrderDirection
    }
    readonly field: {
      readonly nt: 'WorkflowRunOrderField'
      readonly it: readonly [1]
      readonly $t: TypeInputsIndex.WorkflowRunOrderField
    }
  }
}

export interface WorkflowsParametersInput extends $$Utilities.SchemaDrivenDataMap.InputObject {
  readonly n: 'WorkflowsParametersInput'
  readonly f: {
    readonly doNotEnforceOnCreate: {
      readonly nt: 'Boolean'
      readonly it: readonly [0]
      readonly $t: TypeInputsIndex.Boolean | undefined
    }
    readonly workflows: {
      readonly nt: 'WorkflowFileReferenceInput'
      readonly it: readonly [1, [1]]
      readonly $t: readonly TypeInputsIndex.WorkflowFileReferenceInput[]
    }
  }
}

//
//
//
//
//
//
// ==================================================================================================
//                                            OutputObject
// ==================================================================================================
//
//
//
//
//
//

export interface AcceptEnterpriseAdministratorInvitationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseAdministratorInvitation
    }
  }
}

export interface AcceptEnterpriseMemberInvitationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseMemberInvitation
    }
  }
}

export interface AcceptTopicSuggestionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly topic: {
      readonly ad: Topic
    }
  }
}

export interface AccessUserNamespaceRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface AddAssigneesToAssignablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignable: {
      readonly ad: Assignable
    }
  }
}

export interface AddCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commentEdge: {
      readonly ad: IssueCommentEdge
    }
  }
}

export interface AddDiscussionCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comment: {
      readonly ad: DiscussionComment
    }
  }
}

export interface AddDiscussionPollVotePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pollOption: {
      readonly ad: DiscussionPollOption
    }
  }
}

export interface AddEnterpriseOrganizationMemberPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly users: {
      readonly ad: User
    }
  }
}

export interface AddLabelsToLabelablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly labelable: {
      readonly ad: Labelable
    }
  }
}

export interface AddProjectCardPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly cardEdge: {
      readonly ad: ProjectCardEdge
    }
    readonly projectColumn: {
      readonly ad: ProjectColumn
    }
  }
}

export interface AddProjectColumnPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly columnEdge: {
      readonly ad: ProjectColumnEdge
    }
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface AddProjectV2DraftIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectItem: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface AddProjectV2ItemByIdPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface AddPullRequestReviewCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comment: {
      readonly ad: PullRequestReviewComment
    }
    readonly commentEdge: {
      readonly ad: PullRequestReviewCommentEdge
    }
  }
}

export interface AddPullRequestReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
    readonly reviewEdge: {
      readonly ad: PullRequestReviewEdge
    }
  }
}

export interface AddPullRequestReviewThreadPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly thread: {
      readonly ad: PullRequestReviewThread
    }
  }
}

export interface AddPullRequestReviewThreadReplyPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comment: {
      readonly ad: PullRequestReviewComment
    }
  }
}

export interface AddReactionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reaction: {
      readonly ad: Reaction
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly subject: {
      readonly ad: Reactable
    }
  }
}

export interface AddStarPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly starrable: {
      readonly ad: Starrable
    }
  }
}

export interface AddSubIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
    readonly subIssue: {
      readonly ad: Issue
    }
  }
}

export interface AddedToMergeQueueEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly enqueuer: {
      readonly ad: User
    }
    readonly mergeQueue: {
      readonly ad: MergeQueue
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AddedToProjectEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: Project
    }
    readonly projectCard: {
      readonly ad: ProjectCard
    }
  }
}

export interface App extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ipAllowListEntries: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IpAllowListEntryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IpAllowListEntryOrder | undefined
        }
      }
    }
    readonly logoUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface ApproveDeploymentsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly deployments: {
      readonly ad: Deployment
    }
  }
}

export interface ArchiveProjectV2ItemPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ArchiveRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface AssignedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly assignable: {
      readonly ad: Assignable
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface AutoMergeDisabledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly disabler: {
      readonly ad: User
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutoMergeEnabledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly enabler: {
      readonly ad: User
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutoMergeRequest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enabledBy: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutoRebaseEnabledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly enabler: {
      readonly ad: User
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutoSquashEnabledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly enabler: {
      readonly ad: User
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutomaticBaseChangeFailedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface AutomaticBaseChangeSucceededEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface BaseRefChangedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface BaseRefDeletedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface BaseRefForcePushedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly afterCommit: {
      readonly ad: Commit
    }
    readonly beforeCommit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface Blame extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ranges: {
      readonly ad: BlameRange
    }
  }
}

export interface BlameRange extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commit: {
      readonly ad: Commit
    }
  }
}

export interface Blob extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface Bot extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface BranchProtectionRule extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRuleConflicts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: BranchProtectionRuleConflictConnection
    }
    readonly bypassForcePushAllowances: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: BypassForcePushAllowanceConnection
    }
    readonly bypassPullRequestAllowances: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: BypassPullRequestAllowanceConnection
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly matchingRefs: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: RefConnection
    }
    readonly pushAllowances: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PushAllowanceConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly requiredStatusChecks: {
      readonly ad: RequiredStatusCheckDescription
    }
    readonly reviewDismissalAllowances: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ReviewDismissalAllowanceConnection
    }
  }
}

export interface BranchProtectionRuleConflict extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
    readonly conflictingBranchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface BranchProtectionRuleConflictConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: BranchProtectionRuleConflictEdge
    }
    readonly nodes: {
      readonly ad: BranchProtectionRuleConflict
    }
  }
}

export interface BranchProtectionRuleConflictEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: BranchProtectionRuleConflict
    }
  }
}

export interface BranchProtectionRuleConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: BranchProtectionRuleEdge
    }
    readonly nodes: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface BranchProtectionRuleEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface BypassForcePushAllowance extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface BypassForcePushAllowanceConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: BypassForcePushAllowanceEdge
    }
    readonly nodes: {
      readonly ad: BypassForcePushAllowance
    }
  }
}

export interface BypassForcePushAllowanceEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: BypassForcePushAllowance
    }
  }
}

export interface BypassPullRequestAllowance extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface BypassPullRequestAllowanceConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: BypassPullRequestAllowanceEdge
    }
    readonly nodes: {
      readonly ad: BypassPullRequestAllowance
    }
  }
}

export interface BypassPullRequestAllowanceEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: BypassPullRequestAllowance
    }
  }
}

export interface CancelEnterpriseAdminInvitationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseAdministratorInvitation
    }
  }
}

export interface CancelEnterpriseMemberInvitationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseMemberInvitation
    }
  }
}

export interface CancelSponsorshipPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsTier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface ChangeUserStatusPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly status: {
      readonly ad: UserStatus
    }
  }
}

export interface CheckRun extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly annotations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly checkSuite: {
      readonly ad: CheckSuite
    }
    readonly deployment: {
      readonly ad: Deployment
    }
    readonly isRequired: {
      readonly a: {
        readonly pullRequestId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly pullRequestNumber: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly pendingDeploymentRequest: {
      readonly ad: DeploymentRequest
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly steps: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface CheckRunConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CheckRunEdge
    }
    readonly nodes: {
      readonly ad: CheckRun
    }
  }
}

export interface CheckRunEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CheckRun
    }
  }
}

export interface CheckSuite extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly app: {
      readonly ad: App
    }
    readonly branch: {
      readonly ad: Ref
    }
    readonly checkRuns: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'CheckRunFilter'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.CheckRunFilter | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CheckRunConnection
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly creator: {
      readonly ad: User
    }
    readonly matchingPullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly push: {
      readonly ad: Push
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly workflowRun: {
      readonly ad: WorkflowRun
    }
  }
}

export interface CheckSuiteConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CheckSuiteEdge
    }
    readonly nodes: {
      readonly ad: CheckSuite
    }
  }
}

export interface CheckSuiteEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CheckSuite
    }
  }
}

export interface ClearLabelsFromLabelablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly labelable: {
      readonly ad: Labelable
    }
  }
}

export interface ClearProjectV2ItemFieldValuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2Item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface CloneProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface CloneTemplateRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface CloseDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface CloseIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface ClosePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ClosedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface CommentDeletedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly deletedCommentAuthor: {
      readonly ad: Actor
    }
  }
}

export interface Commit extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly associatedPullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'PullRequestOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PullRequestOrder | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly author: {
      readonly ad: GitActor
    }
    readonly authors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: GitActorConnection
    }
    readonly blame: {
      readonly a: {
        readonly path: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Blame
    }
    readonly checkSuites: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'CheckSuiteFilter'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.CheckSuiteFilter | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CheckSuiteConnection
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitCommentConnection
    }
    readonly committer: {
      readonly ad: GitActor
    }
    readonly deployments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly environments: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DeploymentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DeploymentOrder | undefined
        }
      }
      readonly ad: DeploymentConnection
    }
    readonly file: {
      readonly a: {
        readonly path: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: TreeEntry
    }
    readonly history: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly author: {
          readonly nt: 'CommitAuthor'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.CommitAuthor | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly path: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly since: {
          readonly nt: 'GitTimestamp'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GitTimestamp | undefined
        }
        readonly until: {
          readonly nt: 'GitTimestamp'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GitTimestamp | undefined
        }
      }
      readonly ad: CommitHistoryConnection
    }
    readonly onBehalfOf: {
      readonly ad: Organization
    }
    readonly parents: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly signature: {
      readonly ad: GitSignature
    }
    readonly status: {
      readonly ad: Status
    }
    readonly statusCheckRollup: {
      readonly ad: StatusCheckRollup
    }
    readonly submodules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly tree: {
      readonly ad: Tree
    }
  }
}

export interface CommitComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface CommitCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CommitCommentEdge
    }
    readonly nodes: {
      readonly ad: CommitComment
    }
  }
}

export interface CommitCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CommitComment
    }
  }
}

export interface CommitCommentThread extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitCommentConnection
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface CommitConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CommitEdge
    }
    readonly nodes: {
      readonly ad: Commit
    }
  }
}

export interface CommitContributionsByRepository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly contributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'CommitContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.CommitContributionOrder | undefined
        }
      }
      readonly ad: CreatedCommitContributionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface CommitEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Commit
    }
  }
}

export interface CommitHistoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CommitEdge
    }
    readonly nodes: {
      readonly ad: Commit
    }
  }
}

export interface Comparison extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly baseTarget: {
      readonly ad: GitObject
    }
    readonly commits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ComparisonCommitConnection
    }
    readonly headTarget: {
      readonly ad: GitObject
    }
  }
}

export interface ComparisonCommitConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CommitEdge
    }
    readonly nodes: {
      readonly ad: Commit
    }
  }
}

export interface ConnectedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface ContributionsCollection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commitContributionsByRepository: {
      readonly a: {
        readonly maxRepositories: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitContributionsByRepository
    }
    readonly issueContributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedIssueContributionConnection
    }
    readonly issueContributionsByRepository: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly maxRepositories: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: IssueContributionsByRepository
    }
    readonly joinedGitHubContribution: {
      readonly ad: JoinedGitHubContribution
    }
    readonly mostRecentCollectionWithActivity: {
      readonly ad: ContributionsCollection
    }
    readonly mostRecentCollectionWithoutActivity: {
      readonly ad: ContributionsCollection
    }
    readonly popularIssueContribution: {
      readonly ad: CreatedIssueContribution
    }
    readonly popularPullRequestContribution: {
      readonly ad: CreatedPullRequestContribution
    }
    readonly pullRequestContributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedPullRequestContributionConnection
    }
    readonly pullRequestContributionsByRepository: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly maxRepositories: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestContributionsByRepository
    }
    readonly pullRequestReviewContributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedPullRequestReviewContributionConnection
    }
    readonly pullRequestReviewContributionsByRepository: {
      readonly a: {
        readonly maxRepositories: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewContributionsByRepository
    }
    readonly repositoryContributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedRepositoryContributionConnection
    }
    readonly totalIssueContributions: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly totalPullRequestContributions: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly totalRepositoriesWithContributedIssues: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly totalRepositoriesWithContributedPullRequests: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludePopular: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly totalRepositoryContributions: {
      readonly a: {
        readonly excludeFirst: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface ConvertProjectCardNoteToIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectCard: {
      readonly ad: ProjectCard
    }
  }
}

export interface ConvertProjectV2DraftIssueItemToIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ConvertPullRequestToDraftPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ConvertToDraftEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ConvertedNoteToIssueEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: Project
    }
    readonly projectCard: {
      readonly ad: ProjectCard
    }
  }
}

export interface ConvertedToDiscussionEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface CopyProjectV2Payload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface CreateAttributionInvitationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly owner: {
      readonly ad: Organization
    }
  }
}

export interface CreateBranchProtectionRulePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface CreateCheckRunPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly checkRun: {
      readonly ad: CheckRun
    }
  }
}

export interface CreateCheckSuitePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly checkSuite: {
      readonly ad: CheckSuite
    }
  }
}

export interface CreateCommitOnBranchPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commit: {
      readonly ad: Commit
    }
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface CreateDeploymentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly deployment: {
      readonly ad: Deployment
    }
  }
}

export interface CreateDeploymentStatusPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly deploymentStatus: {
      readonly ad: DeploymentStatus
    }
  }
}

export interface CreateDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface CreateEnterpriseOrganizationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface CreateEnvironmentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
  }
}

export interface CreateIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface CreateLabelPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly label: {
      readonly ad: Label
    }
  }
}

export interface CreateLinkedBranchPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
    readonly linkedBranch: {
      readonly ad: LinkedBranch
    }
  }
}

export interface CreateProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface CreateProjectV2Payload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface CreateProjectV2StatusUpdatePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly statusUpdate: {
      readonly ad: ProjectV2StatusUpdate
    }
  }
}

export interface CreatePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface CreateRefPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface CreateRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface CreateRepositoryRulesetPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ruleset: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface CreateSponsorsListingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
  }
}

export interface CreateSponsorsTierPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsTier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface CreateSponsorshipPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorship: {
      readonly ad: Sponsorship
    }
  }
}

export interface CreateSponsorshipsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorables: {
      readonly ad: Sponsorable
    }
  }
}

export interface CreateTeamDiscussionCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly teamDiscussionComment: {
      readonly ad: TeamDiscussionComment
    }
  }
}

export interface CreateTeamDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly teamDiscussion: {
      readonly ad: TeamDiscussion
    }
  }
}

export interface CreateUserListPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly list: {
      readonly ad: UserList
    }
    readonly viewer: {
      readonly ad: User
    }
  }
}

export interface CreatedCommitContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface CreatedCommitContributionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CreatedCommitContributionEdge
    }
    readonly nodes: {
      readonly ad: CreatedCommitContribution
    }
  }
}

export interface CreatedCommitContributionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CreatedCommitContribution
    }
  }
}

export interface CreatedIssueContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface CreatedIssueContributionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CreatedIssueContributionEdge
    }
    readonly nodes: {
      readonly ad: CreatedIssueContribution
    }
  }
}

export interface CreatedIssueContributionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CreatedIssueContribution
    }
  }
}

export interface CreatedPullRequestContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface CreatedPullRequestContributionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CreatedPullRequestContributionEdge
    }
    readonly nodes: {
      readonly ad: CreatedPullRequestContribution
    }
  }
}

export interface CreatedPullRequestContributionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CreatedPullRequestContribution
    }
  }
}

export interface CreatedPullRequestReviewContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface CreatedPullRequestReviewContributionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CreatedPullRequestReviewContributionEdge
    }
    readonly nodes: {
      readonly ad: CreatedPullRequestReviewContribution
    }
  }
}

export interface CreatedPullRequestReviewContributionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CreatedPullRequestReviewContribution
    }
  }
}

export interface CreatedRepositoryContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface CreatedRepositoryContributionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: CreatedRepositoryContributionEdge
    }
    readonly nodes: {
      readonly ad: CreatedRepositoryContribution
    }
  }
}

export interface CreatedRepositoryContributionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: CreatedRepositoryContribution
    }
  }
}

export interface CrossReferencedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface DeclineTopicSuggestionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly topic: {
      readonly ad: Topic
    }
  }
}

export interface DeleteDiscussionCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comment: {
      readonly ad: DiscussionComment
    }
  }
}

export interface DeleteDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface DeleteIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface DeleteLinkedBranchPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface DeleteProjectCardPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly column: {
      readonly ad: ProjectColumn
    }
  }
}

export interface DeleteProjectColumnPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface DeleteProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly owner: {
      readonly ad: ProjectOwner
    }
  }
}

export interface DeleteProjectV2Payload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface DeleteProjectV2StatusUpdatePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface DeleteProjectV2WorkflowPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface DeletePullRequestReviewCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
    readonly pullRequestReviewComment: {
      readonly ad: PullRequestReviewComment
    }
  }
}

export interface DeletePullRequestReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
  }
}

export interface DeleteUserListPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface DemilestonedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface DependabotUpdate extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface DependencyGraphDependency extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface DependencyGraphDependencyConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DependencyGraphDependencyEdge
    }
    readonly nodes: {
      readonly ad: DependencyGraphDependency
    }
  }
}

export interface DependencyGraphDependencyEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DependencyGraphDependency
    }
  }
}

export interface DependencyGraphManifest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly dependencies: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DependencyGraphDependencyConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface DependencyGraphManifestConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DependencyGraphManifestEdge
    }
    readonly nodes: {
      readonly ad: DependencyGraphManifest
    }
  }
}

export interface DependencyGraphManifestEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DependencyGraphManifest
    }
  }
}

export interface DeployedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly deployment: {
      readonly ad: Deployment
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface Deployment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commit: {
      readonly ad: Commit
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly latestStatus: {
      readonly ad: DeploymentStatus
    }
    readonly ref: {
      readonly ad: Ref
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly statuses: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DeploymentStatusConnection
    }
  }
}

export interface DeploymentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DeploymentEdge
    }
    readonly nodes: {
      readonly ad: Deployment
    }
  }
}

export interface DeploymentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Deployment
    }
  }
}

export interface DeploymentEnvironmentChangedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly deploymentStatus: {
      readonly ad: DeploymentStatus
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface DeploymentProtectionRule extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reviewers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface DeploymentProtectionRuleConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DeploymentProtectionRuleEdge
    }
    readonly nodes: {
      readonly ad: DeploymentProtectionRule
    }
  }
}

export interface DeploymentProtectionRuleEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DeploymentProtectionRule
    }
  }
}

export interface DeploymentRequest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
    readonly reviewers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface DeploymentRequestConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DeploymentRequestEdge
    }
    readonly nodes: {
      readonly ad: DeploymentRequest
    }
  }
}

export interface DeploymentRequestEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DeploymentRequest
    }
  }
}

export interface DeploymentReview extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: EnvironmentConnection
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface DeploymentReviewConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DeploymentReviewEdge
    }
    readonly nodes: {
      readonly ad: DeploymentReview
    }
  }
}

export interface DeploymentReviewEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DeploymentReview
    }
  }
}

export interface DeploymentStatus extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly deployment: {
      readonly ad: Deployment
    }
  }
}

export interface DeploymentStatusConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DeploymentStatusEdge
    }
    readonly nodes: {
      readonly ad: DeploymentStatus
    }
  }
}

export interface DeploymentStatusEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DeploymentStatus
    }
  }
}

export interface DequeuePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly mergeQueueEntry: {
      readonly ad: MergeQueueEntry
    }
  }
}

export interface DisablePullRequestAutoMergePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface DisconnectedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface Discussion extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly answer: {
      readonly ad: DiscussionComment
    }
    readonly answerChosenBy: {
      readonly ad: Actor
    }
    readonly author: {
      readonly ad: Actor
    }
    readonly category: {
      readonly ad: DiscussionCategory
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DiscussionCommentConnection
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
      }
      readonly ad: LabelConnection
    }
    readonly poll: {
      readonly ad: DiscussionPoll
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface DiscussionCategory extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface DiscussionCategoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DiscussionCategoryEdge
    }
    readonly nodes: {
      readonly ad: DiscussionCategory
    }
  }
}

export interface DiscussionCategoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DiscussionCategory
    }
  }
}

export interface DiscussionComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly discussion: {
      readonly ad: Discussion
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly replies: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DiscussionCommentConnection
    }
    readonly replyTo: {
      readonly ad: DiscussionComment
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface DiscussionCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DiscussionCommentEdge
    }
    readonly nodes: {
      readonly ad: DiscussionComment
    }
  }
}

export interface DiscussionCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DiscussionComment
    }
  }
}

export interface DiscussionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DiscussionEdge
    }
    readonly nodes: {
      readonly ad: Discussion
    }
  }
}

export interface DiscussionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Discussion
    }
  }
}

export interface DiscussionPoll extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
    readonly options: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DiscussionPollOptionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DiscussionPollOptionOrder | undefined
        }
      }
      readonly ad: DiscussionPollOptionConnection
    }
  }
}

export interface DiscussionPollOption extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly poll: {
      readonly ad: DiscussionPoll
    }
  }
}

export interface DiscussionPollOptionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: DiscussionPollOptionEdge
    }
    readonly nodes: {
      readonly ad: DiscussionPollOption
    }
  }
}

export interface DiscussionPollOptionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: DiscussionPollOption
    }
  }
}

export interface DismissPullRequestReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
  }
}

export interface DismissRepositoryVulnerabilityAlertPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repositoryVulnerabilityAlert: {
      readonly ad: RepositoryVulnerabilityAlert
    }
  }
}

export interface DraftIssue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignees: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly projectV2Items: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2ItemConnection
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
  }
}

export interface EnablePullRequestAutoMergePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface EnqueuePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly mergeQueueEntry: {
      readonly ad: MergeQueueEntry
    }
  }
}

export interface Enterprise extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly members: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly deployment: {
          readonly nt: 'EnterpriseUserDeployment'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseUserDeployment | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasTwoFactorEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseMemberOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMemberOrder | undefined
        }
        readonly organizationLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'EnterpriseUserAccountMembershipRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseUserAccountMembershipRole | undefined
        }
        readonly twoFactorMethodSecurity: {
          readonly nt: 'TwoFactorCredentialSecurityType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TwoFactorCredentialSecurityType | undefined
        }
      }
    }
    readonly organizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly viewerOrganizationRole: {
          readonly nt: 'RoleInOrganization'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RoleInOrganization | undefined
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly ownerInfo: {
      readonly ad: EnterpriseOwnerInfo
    }
    readonly ruleset: {
      readonly a: {
        readonly databaseId: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: RepositoryRuleset
    }
    readonly rulesets: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: RepositoryRulesetConnection
    }
    readonly userNamespaceRepositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: UserNamespaceRepositoryConnection
    }
  }
}

export interface EnterpriseAdministratorConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseAdministratorEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface EnterpriseAdministratorEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface EnterpriseAdministratorInvitation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly invitee: {
      readonly ad: User
    }
    readonly inviter: {
      readonly ad: User
    }
  }
}

export interface EnterpriseAdministratorInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseAdministratorInvitationEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseAdministratorInvitation
    }
  }
}

export interface EnterpriseAdministratorInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseAdministratorInvitation
    }
  }
}

export interface EnterpriseConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseEdge
    }
    readonly nodes: {
      readonly ad: Enterprise
    }
  }
}

export interface EnterpriseEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Enterprise
    }
  }
}

export interface EnterpriseFailedInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseFailedInvitationEdge
    }
    readonly nodes: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface EnterpriseFailedInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface EnterpriseIdentityProvider extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly externalIdentities: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly membersOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly userName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ExternalIdentityConnection
    }
  }
}

export interface EnterpriseMemberInvitation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly invitee: {
      readonly ad: User
    }
    readonly inviter: {
      readonly ad: User
    }
  }
}

export interface EnterpriseMemberInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseMemberInvitationEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseMemberInvitation
    }
  }
}

export interface EnterpriseMemberInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseMemberInvitation
    }
  }
}

export interface EnterpriseOrganizationMembershipConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseOrganizationMembershipEdge
    }
    readonly nodes: {
      readonly ad: Organization
    }
  }
}

export interface EnterpriseOrganizationMembershipEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Organization
    }
  }
}

export interface EnterpriseOutsideCollaboratorConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseOutsideCollaboratorEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface EnterpriseOutsideCollaboratorEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
    readonly repositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
      }
    }
  }
}

export interface EnterpriseOwnerInfo extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly admins: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasTwoFactorEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseMemberOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMemberOrder | undefined
        }
        readonly organizationLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'EnterpriseAdministratorRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseAdministratorRole | undefined
        }
        readonly twoFactorMethodSecurity: {
          readonly nt: 'TwoFactorCredentialSecurityType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TwoFactorCredentialSecurityType | undefined
        }
      }
      readonly ad: EnterpriseAdministratorConnection
    }
    readonly affiliatedUsersWithTwoFactorDisabled: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly allowPrivateRepositoryForkingSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly defaultRepositoryPermissionSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'DefaultRepositoryPermissionField'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DefaultRepositoryPermissionField
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly domains: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly isApproved: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isVerified: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'VerifiableDomainOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.VerifiableDomainOrder | undefined
        }
      }
    }
    readonly enterpriseServerInstallations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly connectedOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseServerInstallationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseServerInstallationOrder | undefined
        }
      }
      readonly ad: EnterpriseServerInstallationConnection
    }
    readonly failedInvitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: EnterpriseFailedInvitationConnection
    }
    readonly ipAllowListEntries: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IpAllowListEntryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IpAllowListEntryOrder | undefined
        }
      }
    }
    readonly membersCanChangeRepositoryVisibilitySettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanCreateRepositoriesSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'OrganizationMembersCanCreateRepositoriesSettingValue'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.OrganizationMembersCanCreateRepositoriesSettingValue
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanDeleteIssuesSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanDeleteRepositoriesSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanInviteCollaboratorsSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanUpdateProtectedBranchesSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly membersCanViewDependencyInsightsSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly oidcProvider: {
      readonly ad: OIDCProvider
    }
    readonly organizationProjectsSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly outsideCollaborators: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasTwoFactorEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseMemberOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMemberOrder | undefined
        }
        readonly organizationLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly twoFactorMethodSecurity: {
          readonly nt: 'TwoFactorCredentialSecurityType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TwoFactorCredentialSecurityType | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: EnterpriseOutsideCollaboratorConnection
    }
    readonly pendingAdminInvitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseAdministratorInvitationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseAdministratorInvitationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'EnterpriseAdministratorRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseAdministratorRole | undefined
        }
      }
      readonly ad: EnterpriseAdministratorInvitationConnection
    }
    readonly pendingCollaboratorInvitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryInvitationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryInvitationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: RepositoryInvitationConnection
    }
    readonly pendingMemberInvitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly invitationSource: {
          readonly nt: 'OrganizationInvitationSource'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationInvitationSource | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly organizationLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: EnterprisePendingMemberInvitationConnection
    }
    readonly pendingUnaffiliatedMemberInvitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseMemberInvitationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMemberInvitationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: EnterpriseMemberInvitationConnection
    }
    readonly repositoryDeployKeySettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly repositoryProjectsSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly samlIdentityProvider: {
      readonly ad: EnterpriseIdentityProvider
    }
    readonly samlIdentityProviderSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'IdentityProviderConfigurationState'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.IdentityProviderConfigurationState
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly supportEntitlements: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseMemberOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMemberOrder | undefined
        }
      }
    }
    readonly teamDiscussionsSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly twoFactorRequiredSettingOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly value: {
          readonly nt: 'Boolean'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Boolean
        }
      }
      readonly ad: OrganizationConnection
    }
  }
}

export interface EnterprisePendingMemberInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterprisePendingMemberInvitationEdge
    }
    readonly nodes: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface EnterprisePendingMemberInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface EnterpriseServerInstallation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly userAccounts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseServerUserAccountOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseServerUserAccountOrder | undefined
        }
      }
      readonly ad: EnterpriseServerUserAccountConnection
    }
    readonly userAccountsUploads: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseServerUserAccountsUploadOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseServerUserAccountsUploadOrder | undefined
        }
      }
      readonly ad: EnterpriseServerUserAccountsUploadConnection
    }
  }
}

export interface EnterpriseServerInstallationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseServerInstallationEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerInstallationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerInstallationMembershipConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseServerInstallationMembershipEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerInstallationMembershipEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerUserAccount extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly emails: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseServerUserAccountEmailOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseServerUserAccountEmailOrder | undefined
        }
      }
      readonly ad: EnterpriseServerUserAccountEmailConnection
    }
    readonly enterpriseServerInstallation: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerUserAccountConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseServerUserAccountEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseServerUserAccount
    }
  }
}

export interface EnterpriseServerUserAccountEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseServerUserAccount
    }
  }
}

export interface EnterpriseServerUserAccountEmail extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly userAccount: {
      readonly ad: EnterpriseServerUserAccount
    }
  }
}

export interface EnterpriseServerUserAccountEmailConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseServerUserAccountEmailEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseServerUserAccountEmail
    }
  }
}

export interface EnterpriseServerUserAccountEmailEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseServerUserAccountEmail
    }
  }
}

export interface EnterpriseServerUserAccountsUpload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly enterpriseServerInstallation: {
      readonly ad: EnterpriseServerInstallation
    }
  }
}

export interface EnterpriseServerUserAccountsUploadConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnterpriseServerUserAccountsUploadEdge
    }
    readonly nodes: {
      readonly ad: EnterpriseServerUserAccountsUpload
    }
  }
}

export interface EnterpriseServerUserAccountsUploadEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: EnterpriseServerUserAccountsUpload
    }
  }
}

export interface EnterpriseUserAccount extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly enterpriseInstallations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseServerInstallationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseServerInstallationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'EnterpriseUserAccountMembershipRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseUserAccountMembershipRole | undefined
        }
      }
      readonly ad: EnterpriseServerInstallationMembershipConnection
    }
    readonly organizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'EnterpriseUserAccountMembershipRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseUserAccountMembershipRole | undefined
        }
      }
      readonly ad: EnterpriseOrganizationMembershipConnection
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface Environment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly latestCompletedDeployment: {
      readonly ad: Deployment
    }
    readonly protectionRules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DeploymentProtectionRuleConnection
    }
  }
}

export interface EnvironmentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: EnvironmentEdge
    }
    readonly nodes: {
      readonly ad: Environment
    }
  }
}

export interface EnvironmentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Environment
    }
  }
}

export interface ExternalIdentity extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organizationInvitation: {
      readonly ad: OrganizationInvitation
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface ExternalIdentityConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ExternalIdentityEdge
    }
    readonly nodes: {
      readonly ad: ExternalIdentity
    }
  }
}

export interface ExternalIdentityEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ExternalIdentity
    }
  }
}

export interface FollowOrganizationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface FollowUserPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface FollowerConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface FollowingConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface Gist extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: GistCommentConnection
    }
    readonly files: {
      readonly a: {
        readonly limit: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly oid: {
          readonly nt: 'GitObjectID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GitObjectID | undefined
        }
      }
      readonly ad: GistFile
    }
    readonly forks: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'GistOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GistOrder | undefined
        }
      }
      readonly ad: GistConnection
    }
    readonly owner: {
      readonly ad: RepositoryOwner
    }
    readonly stargazers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'StarOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.StarOrder | undefined
        }
      }
      readonly ad: StargazerConnection
    }
  }
}

export interface GistComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly gist: {
      readonly ad: Gist
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface GistCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: GistCommentEdge
    }
    readonly nodes: {
      readonly ad: GistComment
    }
  }
}

export interface GistCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: GistComment
    }
  }
}

export interface GistConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: GistEdge
    }
    readonly nodes: {
      readonly ad: Gist
    }
  }
}

export interface GistEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Gist
    }
  }
}

export interface GistFile extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly text: {
      readonly a: {
        readonly truncate: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface GitActor extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface GitActorConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: GitActorEdge
    }
    readonly nodes: {
      readonly ad: GitActor
    }
  }
}

export interface GitActorEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: GitActor
    }
  }
}

export interface GpgSignature extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly signer: {
      readonly ad: User
    }
  }
}

export interface GrantEnterpriseOrganizationsMigratorRolePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: OrganizationConnection
    }
  }
}

export interface HeadRefDeletedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly headRef: {
      readonly ad: Ref
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface HeadRefForcePushedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly afterCommit: {
      readonly ad: Commit
    }
    readonly beforeCommit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface HeadRefRestoredEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ImportProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface InviteEnterpriseAdminPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseAdministratorInvitation
    }
  }
}

export interface InviteEnterpriseMemberPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitation: {
      readonly ad: EnterpriseMemberInvitation
    }
  }
}

export interface Issue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignees: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly author: {
      readonly ad: Actor
    }
    readonly closedByPullRequestsReferences: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeClosedPrs: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderByState: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly userLinkedOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueCommentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueCommentOrder | undefined
        }
      }
      readonly ad: IssueCommentConnection
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly hovercard: {
      readonly a: {
        readonly includeNotificationContexts: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
      }
      readonly ad: LabelConnection
    }
    readonly linkedBranches: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: LinkedBranchConnection
    }
    readonly milestone: {
      readonly ad: Milestone
    }
    readonly parent: {
      readonly ad: Issue
    }
    readonly participants: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly projectCards: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly archivedStates: {
          readonly nt: 'ProjectCardArchivedState'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.ProjectCardArchivedState[] | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectCardConnection
    }
    readonly projectItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeArchived: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2ItemConnection
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly stateReason: {
      readonly a: {
        readonly enableDuplicate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly subIssues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly timeline: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
    }
    readonly timelineItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly itemTypes: {
          readonly nt: 'IssueTimelineItemsItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.IssueTimelineItemsItemType[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly skip: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly trackedInIssues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly trackedIssues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly trackedIssuesCount: {
      readonly a: {
        readonly states: {
          readonly nt: 'TrackedIssueStates'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.TrackedIssueStates[] | undefined
        }
      }
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface IssueComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly issue: {
      readonly ad: Issue
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface IssueCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: IssueCommentEdge
    }
    readonly nodes: {
      readonly ad: IssueComment
    }
  }
}

export interface IssueCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: IssueComment
    }
  }
}

export interface IssueConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: IssueEdge
    }
    readonly nodes: {
      readonly ad: Issue
    }
  }
}

export interface IssueContributionsByRepository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly contributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedIssueContributionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface IssueEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Issue
    }
  }
}

export interface IssueTemplate extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignees: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
      }
      readonly ad: LabelConnection
    }
  }
}

export interface JoinedGitHubContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface Label extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'IssueFilters'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueFilters | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'IssueState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.IssueState[] | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly pullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface LabelConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: LabelEdge
    }
    readonly nodes: {
      readonly ad: Label
    }
  }
}

export interface LabelEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Label
    }
  }
}

export interface LabeledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly label: {
      readonly ad: Label
    }
    readonly labelable: {
      readonly ad: Labelable
    }
  }
}

export interface LinkProjectV2ToRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface LinkProjectV2ToTeamPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly team: {
      readonly ad: Team
    }
  }
}

export interface LinkRepositoryToProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface LinkedBranch extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface LinkedBranchConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: LinkedBranchEdge
    }
    readonly nodes: {
      readonly ad: LinkedBranch
    }
  }
}

export interface LinkedBranchEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: LinkedBranch
    }
  }
}

export interface LockLockablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface LockedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface Mannequin extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly claimant: {
      readonly ad: User
    }
  }
}

export interface MannequinConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: MannequinEdge
    }
    readonly nodes: {
      readonly ad: Mannequin
    }
  }
}

export interface MannequinEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Mannequin
    }
  }
}

export interface MarkDiscussionCommentAsAnswerPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface MarkFileAsViewedPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface MarkProjectV2AsTemplatePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface MarkPullRequestReadyForReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface MarkedAsDuplicateEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface MarketplaceListing extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly app: {
      readonly ad: App
    }
    readonly logoUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface MarketplaceListingConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: MarketplaceListingEdge
    }
    readonly nodes: {
      readonly ad: MarketplaceListing
    }
  }
}

export interface MarketplaceListingEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: MarketplaceListing
    }
  }
}

export interface MembersCanDeleteReposClearAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface MembersCanDeleteReposDisableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface MembersCanDeleteReposEnableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface MentionedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface MergeBranchPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly mergeCommit: {
      readonly ad: Commit
    }
  }
}

export interface MergePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface MergeQueue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly entries: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: MergeQueueEntryConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface MergeQueueEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly baseCommit: {
      readonly ad: Commit
    }
    readonly enqueuer: {
      readonly ad: Actor
    }
    readonly headCommit: {
      readonly ad: Commit
    }
    readonly mergeQueue: {
      readonly ad: MergeQueue
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface MergeQueueEntryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: MergeQueueEntryEdge
    }
    readonly nodes: {
      readonly ad: MergeQueueEntry
    }
  }
}

export interface MergeQueueEntryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: MergeQueueEntry
    }
  }
}

export interface MergedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly mergeRef: {
      readonly ad: Ref
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface Milestone extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly issues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'IssueFilters'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueFilters | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'IssueState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.IssueState[] | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly pullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface MilestoneConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: MilestoneEdge
    }
    readonly nodes: {
      readonly ad: Milestone
    }
  }
}

export interface MilestoneEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Milestone
    }
  }
}

export interface MilestonedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface MoveProjectCardPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly cardEdge: {
      readonly ad: ProjectCardEdge
    }
  }
}

export interface MoveProjectColumnPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly columnEdge: {
      readonly ad: ProjectColumnEdge
    }
  }
}

export interface MovedColumnsInProjectEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: Project
    }
    readonly projectCard: {
      readonly ad: ProjectCard
    }
  }
}

export interface OIDCProvider extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly externalIdentities: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly membersOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly userName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ExternalIdentityConnection
    }
  }
}

export interface OauthApplicationCreateAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgAddBillingManagerAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgAddMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgBlockUserAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly blockedUser: {
      readonly ad: User
    }
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgConfigDisableCollaboratorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgConfigEnableCollaboratorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgCreateAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgDisableOauthAppRestrictionsAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgDisableSamlAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgDisableTwoFactorRequirementAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgEnableOauthAppRestrictionsAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgEnableSamlAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgEnableTwoFactorRequirementAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgInviteMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly organizationInvitation: {
      readonly ad: OrganizationInvitation
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgInviteToBusinessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgOauthAppAccessApprovedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgOauthAppAccessBlockedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgOauthAppAccessDeniedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgOauthAppAccessRequestedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgOauthAppAccessUnblockedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgRemoveBillingManagerAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgRemoveMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgRemoveOutsideCollaboratorAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgRestoreMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgRestoreMemberMembershipOrganizationAuditEntryData
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface OrgRestoreMemberMembershipRepositoryAuditEntryData
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface OrgRestoreMemberMembershipTeamAuditEntryData extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly team: {
      readonly ad: Team
    }
  }
}

export interface OrgUnblockUserAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly blockedUser: {
      readonly ad: User
    }
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgUpdateDefaultRepositoryPermissionAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgUpdateMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgUpdateMemberRepositoryCreationPermissionAuditEntry
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface OrgUpdateMemberRepositoryInvitationPermissionAuditEntry
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface Organization extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly anyPinnableItems: {
      readonly a: {
        readonly type: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PinnableItemType | undefined
        }
      }
    }
    readonly auditLog: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'AuditLogOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.AuditLogOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
    }
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly domains: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly isApproved: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isVerified: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'VerifiableDomainOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.VerifiableDomainOrder | undefined
        }
      }
    }
    readonly enterpriseOwners: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrgEnterpriseOwnerOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrgEnterpriseOwnerOrder | undefined
        }
        readonly organizationRole: {
          readonly nt: 'RoleInOrganization'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RoleInOrganization | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: OrganizationEnterpriseOwnerConnection
    }
    readonly ipAllowListEntries: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IpAllowListEntryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IpAllowListEntryOrder | undefined
        }
      }
    }
    readonly isSponsoredBy: {
      readonly a: {
        readonly accountLogin: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly itemShowcase: {
      readonly ad: ProfileItemShowcase
    }
    readonly lifetimeReceivedSponsorshipValues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorAndLifetimeValueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorAndLifetimeValueOrder | undefined
        }
      }
      readonly ad: SponsorAndLifetimeValueConnection
    }
    readonly mannequins: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly orderBy: {
          readonly nt: 'MannequinOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.MannequinOrder | undefined
        }
      }
      readonly ad: MannequinConnection
    }
    readonly memberStatuses: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'UserStatusOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.UserStatusOrder | undefined
        }
      }
      readonly ad: UserStatusConnection
    }
    readonly membersWithRole: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: OrganizationMemberConnection
    }
    readonly packages: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageOrder | undefined
        }
        readonly packageType: {
          readonly nt: 'PackageType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageType | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: PackageConnection
    }
    readonly pendingMembers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly pinnableItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
    readonly pinnedItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
    readonly project: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Project
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectOrder | undefined
        }
        readonly search: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly states: {
          readonly nt: 'ProjectState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.ProjectState[] | undefined
        }
      }
      readonly ad: ProjectConnection
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly recentProjects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly repositories: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isArchived: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isFork: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly repository: {
      readonly a: {
        readonly followRenames: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Repository
    }
    readonly repositoryDiscussionComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly onlyAnswers: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: DiscussionCommentConnection
    }
    readonly repositoryDiscussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly answered: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DiscussionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DiscussionOrder | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly states: {
          readonly nt: 'DiscussionState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.DiscussionState[] | undefined
        }
      }
      readonly ad: DiscussionConnection
    }
    readonly repositoryMigrations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryMigrationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryMigrationOrder | undefined
        }
        readonly repositoryName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly state: {
          readonly nt: 'MigrationState'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.MigrationState | undefined
        }
      }
    }
    readonly ruleset: {
      readonly a: {
        readonly databaseId: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
        readonly includeParents: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: RepositoryRuleset
    }
    readonly rulesets: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeParents: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly targets: {
          readonly nt: 'RepositoryRulesetTarget'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.RepositoryRulesetTarget[] | undefined
        }
      }
      readonly ad: RepositoryRulesetConnection
    }
    readonly samlIdentityProvider: {
      readonly ad: OrganizationIdentityProvider
    }
    readonly sponsoring: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
      }
    }
    readonly sponsors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
        readonly tierId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
    }
    readonly sponsorsActivities: {
      readonly a: {
        readonly actions: {
          readonly nt: 'SponsorsActivityAction'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SponsorsActivityAction[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeAsSponsor: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorsActivityOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityOrder | undefined
        }
        readonly period: {
          readonly nt: 'SponsorsActivityPeriod'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityPeriod | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: SponsorsActivityConnection
    }
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
    readonly sponsorshipForViewerAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipForViewerAsSponsorable: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipNewsletters: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipNewsletterOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipNewsletterOrder | undefined
        }
      }
      readonly ad: SponsorshipNewsletterConnection
    }
    readonly sponsorshipsAsMaintainer: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly sponsorshipsAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly maintainerLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly team: {
      readonly a: {
        readonly slug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Team
    }
    readonly teams: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly ldapMapped: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly notificationSetting: {
          readonly nt: 'TeamNotificationSetting'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamNotificationSetting | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamOrder | undefined
        }
        readonly privacy: {
          readonly nt: 'TeamPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamPrivacy | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'TeamRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamRole | undefined
        }
        readonly rootTeamsOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly userLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
      }
      readonly ad: TeamConnection
    }
    readonly totalSponsorshipAmountAsSponsorInCents: {
      readonly a: {
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly sponsorableLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
    }
  }
}

export interface OrganizationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: OrganizationEdge
    }
    readonly nodes: {
      readonly ad: Organization
    }
  }
}

export interface OrganizationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Organization
    }
  }
}

export interface OrganizationEnterpriseOwnerConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: OrganizationEnterpriseOwnerEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface OrganizationEnterpriseOwnerEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface OrganizationIdentityProvider extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly externalIdentities: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly membersOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly userName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ExternalIdentityConnection
    }
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface OrganizationInvitation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitee: {
      readonly ad: User
    }
    readonly inviter: {
      readonly ad: User
    }
    readonly inviterActor: {
      readonly ad: User
    }
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface OrganizationInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: OrganizationInvitationEdge
    }
    readonly nodes: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface OrganizationInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: OrganizationInvitation
    }
  }
}

export interface OrganizationMemberConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: OrganizationMemberEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface OrganizationMemberEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface OrganizationTeamsHovercardContext extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly relevantTeams: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: TeamConnection
    }
  }
}

export interface OrganizationsHovercardContext extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly relevantOrganizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
      }
      readonly ad: OrganizationConnection
    }
  }
}

export interface Package extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly latestVersion: {
      readonly ad: PackageVersion
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly version: {
      readonly a: {
        readonly version: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: PackageVersion
    }
    readonly versions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageVersionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageVersionOrder | undefined
        }
      }
      readonly ad: PackageVersionConnection
    }
  }
}

export interface PackageConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PackageEdge
    }
    readonly nodes: {
      readonly ad: Package
    }
  }
}

export interface PackageEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Package
    }
  }
}

export interface PackageFile extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly packageVersion: {
      readonly ad: PackageVersion
    }
  }
}

export interface PackageFileConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PackageFileEdge
    }
    readonly nodes: {
      readonly ad: PackageFile
    }
  }
}

export interface PackageFileEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PackageFile
    }
  }
}

export interface PackageTag extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly version: {
      readonly ad: PackageVersion
    }
  }
}

export interface PackageVersion extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly files: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageFileOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageFileOrder | undefined
        }
      }
      readonly ad: PackageFileConnection
    }
    readonly package: {
      readonly ad: Package
    }
    readonly release: {
      readonly ad: Release
    }
  }
}

export interface PackageVersionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PackageVersionEdge
    }
    readonly nodes: {
      readonly ad: PackageVersion
    }
  }
}

export interface PackageVersionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PackageVersion
    }
  }
}

export interface ParentIssueAddedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly parent: {
      readonly ad: Issue
    }
  }
}

export interface ParentIssueRemovedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly parent: {
      readonly ad: Issue
    }
  }
}

export interface PermissionSource extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface PinEnvironmentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
    readonly pinnedEnvironment: {
      readonly ad: PinnedEnvironment
    }
  }
}

export interface PinIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface PinnedDiscussion extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
    readonly pinnedBy: {
      readonly ad: Actor
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PinnedDiscussionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PinnedDiscussionEdge
    }
    readonly nodes: {
      readonly ad: PinnedDiscussion
    }
  }
}

export interface PinnedDiscussionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PinnedDiscussion
    }
  }
}

export interface PinnedEnvironment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PinnedEnvironmentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PinnedEnvironmentEdge
    }
    readonly nodes: {
      readonly ad: PinnedEnvironment
    }
  }
}

export interface PinnedEnvironmentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PinnedEnvironment
    }
  }
}

export interface PinnedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface PinnedIssue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
    readonly pinnedBy: {
      readonly ad: Actor
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PinnedIssueConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PinnedIssueEdge
    }
    readonly nodes: {
      readonly ad: PinnedIssue
    }
  }
}

export interface PinnedIssueEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PinnedIssue
    }
  }
}

export interface PrivateRepositoryForkingDisableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface PrivateRepositoryForkingEnableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface ProfileItemShowcase extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly items: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface Project extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly columns: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectColumnConnection
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly owner: {
      readonly ad: ProjectOwner
    }
    readonly pendingCards: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly archivedStates: {
          readonly nt: 'ProjectCardArchivedState'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.ProjectCardArchivedState[] | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectCardConnection
    }
  }
}

export interface ProjectCard extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly column: {
      readonly ad: ProjectColumn
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface ProjectCardConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectCardEdge
    }
    readonly nodes: {
      readonly ad: ProjectCard
    }
  }
}

export interface ProjectCardEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectCard
    }
  }
}

export interface ProjectColumn extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly cards: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly archivedStates: {
          readonly nt: 'ProjectCardArchivedState'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.ProjectCardArchivedState[] | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectCardConnection
    }
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface ProjectColumnConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectColumnEdge
    }
    readonly nodes: {
      readonly ad: ProjectColumn
    }
  }
}

export interface ProjectColumnEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectColumn
    }
  }
}

export interface ProjectConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectEdge
    }
    readonly nodes: {
      readonly ad: Project
    }
  }
}

export interface ProjectEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Project
    }
  }
}

export interface ProjectV2 extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly field: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly fields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
    }
    readonly items: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2ItemOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2ItemOrder | undefined
        }
      }
      readonly ad: ProjectV2ItemConnection
    }
    readonly owner: {
      readonly ad: ProjectV2Owner
    }
    readonly repositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly statusUpdates: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2StatusOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2StatusOrder | undefined
        }
      }
      readonly ad: ProjectV2StatusUpdateConnection
    }
    readonly teams: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamOrder | undefined
        }
      }
      readonly ad: TeamConnection
    }
    readonly view: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2View
    }
    readonly views: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2ViewOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2ViewOrder | undefined
        }
      }
      readonly ad: ProjectV2ViewConnection
    }
    readonly workflow: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2Workflow
    }
    readonly workflows: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2WorkflowOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2WorkflowOrder | undefined
        }
      }
      readonly ad: ProjectV2WorkflowConnection
    }
  }
}

export interface ProjectV2Connection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2Edge
    }
    readonly nodes: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2Edge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2Field extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2FieldConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2FieldEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2Field
    }
  }
}

export interface ProjectV2FieldEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2Field
    }
  }
}

export interface ProjectV2Item extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly fieldValueByName: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly fieldValues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2ItemFieldValueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2ItemFieldValueOrder | undefined
        }
      }
    }
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2ItemConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2ItemEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldDateValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldIterationValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldLabelValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: LabelConnection
    }
  }
}

export interface ProjectV2ItemFieldMilestoneValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly milestone: {
      readonly ad: Milestone
    }
  }
}

export interface ProjectV2ItemFieldNumberValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldPullRequestValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'PullRequestOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PullRequestOrder | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
  }
}

export interface ProjectV2ItemFieldRepositoryValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface ProjectV2ItemFieldReviewerValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reviewers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface ProjectV2ItemFieldSingleSelectValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldTextValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2ItemFieldUserValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly users: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
  }
}

export interface ProjectV2IterationField extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2SingleSelectField extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly options: {
      readonly a: {
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
      }
    }
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2SortBy extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly field: {
      readonly ad: ProjectV2Field
    }
  }
}

export interface ProjectV2SortByConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2SortByEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2SortBy
    }
  }
}

export interface ProjectV2SortByEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2SortBy
    }
  }
}

export interface ProjectV2StatusUpdate extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2StatusUpdateConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2StatusUpdateEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2StatusUpdate
    }
  }
}

export interface ProjectV2StatusUpdateEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2StatusUpdate
    }
  }
}

export interface ProjectV2View extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly fields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
    }
    readonly groupBy: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
      readonly ad: ProjectV2FieldConnection
    }
    readonly groupByFields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
    }
    readonly project: {
      readonly ad: ProjectV2
    }
    readonly sortBy: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2SortByConnection
    }
    readonly sortByFields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly verticalGroupBy: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
      readonly ad: ProjectV2FieldConnection
    }
    readonly verticalGroupByFields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
    }
    readonly visibleFields: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2FieldOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2FieldOrder | undefined
        }
      }
      readonly ad: ProjectV2FieldConnection
    }
  }
}

export interface ProjectV2ViewConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2ViewEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2View
    }
  }
}

export interface ProjectV2ViewEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2View
    }
  }
}

export interface ProjectV2Workflow extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2WorkflowConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ProjectV2WorkflowEdge
    }
    readonly nodes: {
      readonly ad: ProjectV2Workflow
    }
  }
}

export interface ProjectV2WorkflowEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ProjectV2Workflow
    }
  }
}

export interface PublishSponsorsTierPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsTier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface PullRequest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignees: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly author: {
      readonly ad: Actor
    }
    readonly autoMergeRequest: {
      readonly ad: AutoMergeRequest
    }
    readonly baseRef: {
      readonly ad: Ref
    }
    readonly baseRepository: {
      readonly ad: Repository
    }
    readonly closingIssuesReferences: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly userLinkedOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueCommentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueCommentOrder | undefined
        }
      }
      readonly ad: IssueCommentConnection
    }
    readonly commits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestCommitConnection
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly files: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly headRef: {
      readonly ad: Ref
    }
    readonly headRepository: {
      readonly ad: Repository
    }
    readonly headRepositoryOwner: {
      readonly ad: RepositoryOwner
    }
    readonly hovercard: {
      readonly a: {
        readonly includeNotificationContexts: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
      }
      readonly ad: LabelConnection
    }
    readonly latestOpinionatedReviews: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly writersOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: PullRequestReviewConnection
    }
    readonly latestReviews: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewConnection
    }
    readonly mergeCommit: {
      readonly ad: Commit
    }
    readonly mergeQueue: {
      readonly ad: MergeQueue
    }
    readonly mergeQueueEntry: {
      readonly ad: MergeQueueEntry
    }
    readonly mergedBy: {
      readonly ad: Actor
    }
    readonly milestone: {
      readonly ad: Milestone
    }
    readonly participants: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly potentialMergeCommit: {
      readonly ad: Commit
    }
    readonly projectCards: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly archivedStates: {
          readonly nt: 'ProjectCardArchivedState'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.ProjectCardArchivedState[] | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectCardConnection
    }
    readonly projectItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeArchived: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2ItemConnection
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly reviewRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ReviewRequestConnection
    }
    readonly reviewThreads: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewThreadConnection
    }
    readonly reviews: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly author: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestReviewState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestReviewState[] | undefined
        }
      }
      readonly ad: PullRequestReviewConnection
    }
    readonly statusCheckRollup: {
      readonly ad: StatusCheckRollup
    }
    readonly suggestedReviewers: {
      readonly ad: SuggestedReviewer
    }
    readonly timeline: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
    }
    readonly timelineItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly itemTypes: {
          readonly nt: 'PullRequestTimelineItemsItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestTimelineItemsItemType[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly skip: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
    readonly viewerLatestReview: {
      readonly ad: PullRequestReview
    }
    readonly viewerLatestReviewRequest: {
      readonly ad: ReviewRequest
    }
    readonly viewerMergeBodyText: {
      readonly a: {
        readonly mergeType: {
          readonly nt: 'PullRequestMergeMethod'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PullRequestMergeMethod | undefined
        }
      }
    }
    readonly viewerMergeHeadlineText: {
      readonly a: {
        readonly mergeType: {
          readonly nt: 'PullRequestMergeMethod'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PullRequestMergeMethod | undefined
        }
      }
    }
  }
}

export interface PullRequestCommit extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface PullRequestCommitCommentThread extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitCommentConnection
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PullRequestCommitConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PullRequestCommitEdge
    }
    readonly nodes: {
      readonly ad: PullRequestCommit
    }
  }
}

export interface PullRequestCommitEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PullRequestCommit
    }
  }
}

export interface PullRequestConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PullRequestEdge
    }
    readonly nodes: {
      readonly ad: PullRequest
    }
  }
}

export interface PullRequestContributionsByRepository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly contributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedPullRequestContributionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PullRequestEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PullRequest
    }
  }
}

export interface PullRequestReview extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewCommentConnection
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly onBehalfOf: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: TeamConnection
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface PullRequestReviewComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly originalCommit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly replyTo: {
      readonly ad: PullRequestReviewComment
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface PullRequestReviewCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PullRequestReviewCommentEdge
    }
    readonly nodes: {
      readonly ad: PullRequestReviewComment
    }
  }
}

export interface PullRequestReviewCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PullRequestReviewComment
    }
  }
}

export interface PullRequestReviewConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PullRequestReviewEdge
    }
    readonly nodes: {
      readonly ad: PullRequestReview
    }
  }
}

export interface PullRequestReviewContributionsByRepository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly contributions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ContributionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ContributionOrder | undefined
        }
      }
      readonly ad: CreatedPullRequestReviewContributionConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PullRequestReviewEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PullRequestReview
    }
  }
}

export interface PullRequestReviewThread extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly skip: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewCommentConnection
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly resolvedBy: {
      readonly ad: User
    }
  }
}

export interface PullRequestReviewThreadConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PullRequestReviewThreadEdge
    }
    readonly nodes: {
      readonly ad: PullRequestReviewThread
    }
  }
}

export interface PullRequestReviewThreadEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PullRequestReviewThread
    }
  }
}

export interface PullRequestRevisionMarker extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly lastSeenCommit: {
      readonly ad: Commit
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface PullRequestTemplate extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PullRequestThread extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly skip: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PullRequestReviewCommentConnection
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly resolvedBy: {
      readonly ad: User
    }
  }
}

export interface Push extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pusher: {
      readonly ad: Actor
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface PushAllowance extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface PushAllowanceConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: PushAllowanceEdge
    }
    readonly nodes: {
      readonly ad: PushAllowance
    }
  }
}

export interface PushAllowanceEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: PushAllowance
    }
  }
}

export interface ReactingUserConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReactingUserEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface ReactingUserEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface Reaction extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reactable: {
      readonly ad: Reactable
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface ReactionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReactionEdge
    }
    readonly nodes: {
      readonly ad: Reaction
    }
  }
}

export interface ReactionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Reaction
    }
  }
}

export interface ReactionGroup extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reactors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly subject: {
      readonly ad: Reactable
    }
    readonly users: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ReactingUserConnection
    }
  }
}

export interface ReadyForReviewEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface Ref extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly associatedPullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
    readonly compare: {
      readonly a: {
        readonly headRef: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Comparison
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly rules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryRuleOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryRuleOrder | undefined
        }
      }
      readonly ad: RepositoryRuleConnection
    }
    readonly target: {
      readonly ad: GitObject
    }
  }
}

export interface RefConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RefEdge
    }
    readonly nodes: {
      readonly ad: Ref
    }
  }
}

export interface RefEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Ref
    }
  }
}

export interface ReferencedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly commitRepository: {
      readonly ad: Repository
    }
  }
}

export interface RegenerateEnterpriseIdentityProviderRecoveryCodesPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly identityProvider: {
      readonly ad: EnterpriseIdentityProvider
    }
  }
}

export interface RejectDeploymentsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly deployments: {
      readonly ad: Deployment
    }
  }
}

export interface Release extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: User
    }
    readonly mentions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly releaseAssets: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ReleaseAssetConnection
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly shortDescriptionHTML: {
      readonly a: {
        readonly limit: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly tag: {
      readonly ad: Ref
    }
    readonly tagCommit: {
      readonly ad: Commit
    }
  }
}

export interface ReleaseAsset extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly release: {
      readonly ad: Release
    }
    readonly uploadedBy: {
      readonly ad: User
    }
  }
}

export interface ReleaseAssetConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReleaseAssetEdge
    }
    readonly nodes: {
      readonly ad: ReleaseAsset
    }
  }
}

export interface ReleaseAssetEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ReleaseAsset
    }
  }
}

export interface ReleaseConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReleaseEdge
    }
    readonly nodes: {
      readonly ad: Release
    }
  }
}

export interface ReleaseEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Release
    }
  }
}

export interface RemoveAssigneesFromAssignablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignable: {
      readonly ad: Assignable
    }
  }
}

export interface RemoveEnterpriseAdminPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly admin: {
      readonly ad: User
    }
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly viewer: {
      readonly ad: User
    }
  }
}

export interface RemoveEnterpriseIdentityProviderPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly identityProvider: {
      readonly ad: EnterpriseIdentityProvider
    }
  }
}

export interface RemoveEnterpriseMemberPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly user: {
      readonly ad: User
    }
    readonly viewer: {
      readonly ad: User
    }
  }
}

export interface RemoveEnterpriseOrganizationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
    readonly organization: {
      readonly ad: Organization
    }
    readonly viewer: {
      readonly ad: User
    }
  }
}

export interface RemoveLabelsFromLabelablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly labelable: {
      readonly ad: Labelable
    }
  }
}

export interface RemoveOutsideCollaboratorPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly removedUser: {
      readonly ad: User
    }
  }
}

export interface RemoveReactionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reaction: {
      readonly ad: Reaction
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly subject: {
      readonly ad: Reactable
    }
  }
}

export interface RemoveStarPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly starrable: {
      readonly ad: Starrable
    }
  }
}

export interface RemoveSubIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
    readonly subIssue: {
      readonly ad: Issue
    }
  }
}

export interface RemovedFromMergeQueueEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly beforeCommit: {
      readonly ad: Commit
    }
    readonly enqueuer: {
      readonly ad: User
    }
    readonly mergeQueue: {
      readonly ad: MergeQueue
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface RemovedFromProjectEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface RenamedTitleEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface ReopenDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface ReopenIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface ReopenPullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ReopenedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface ReorderEnvironmentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
  }
}

export interface RepoAccessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoAddMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoAddTopicAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly topic: {
      readonly ad: Topic
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoArchivedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoChangeMergeSettingAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigDisableAnonymousGitAccessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigDisableCollaboratorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigDisableContributorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigDisableSockpuppetDisallowedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigEnableAnonymousGitAccessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigEnableCollaboratorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigEnableContributorsOnlyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigEnableSockpuppetDisallowedAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigLockAnonymousGitAccessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoConfigUnlockAnonymousGitAccessAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoCreateAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoDestroyAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoRemoveMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepoRemoveTopicAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly topic: {
      readonly ad: Topic
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface Repository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignableUsers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly branchProtectionRules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: BranchProtectionRuleConnection
    }
    readonly codeowners: {
      readonly a: {
        readonly refName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
    }
    readonly collaborators: {
      readonly a: {
        readonly affiliation: {
          readonly nt: 'CollaboratorAffiliation'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.CollaboratorAffiliation | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: RepositoryCollaboratorConnection
    }
    readonly commitComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitCommentConnection
    }
    readonly defaultBranchRef: {
      readonly ad: Ref
    }
    readonly dependencyGraphManifests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly dependenciesAfter: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly dependenciesFirst: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly withDependencies: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: DependencyGraphManifestConnection
    }
    readonly deployKeys: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly deployments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly environments: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DeploymentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DeploymentOrder | undefined
        }
      }
      readonly ad: DeploymentConnection
    }
    readonly discussion: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Discussion
    }
    readonly discussionCategories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterByAssignable: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DiscussionCategoryConnection
    }
    readonly discussionCategory: {
      readonly a: {
        readonly slug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: DiscussionCategory
    }
    readonly discussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly answered: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly categoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DiscussionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DiscussionOrder | undefined
        }
        readonly states: {
          readonly nt: 'DiscussionState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.DiscussionState[] | undefined
        }
      }
      readonly ad: DiscussionConnection
    }
    readonly environment: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Environment
    }
    readonly environments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'Environments'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Environments | undefined
        }
        readonly pinnedEnvironmentFilter: {
          readonly nt: 'EnvironmentPinnedFilterField'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnvironmentPinnedFilterField | undefined
        }
      }
      readonly ad: EnvironmentConnection
    }
    readonly forks: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly issue: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Issue
    }
    readonly issueOrPullRequest: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
    }
    readonly issueTemplates: {
      readonly ad: IssueTemplate
    }
    readonly issues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'IssueFilters'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueFilters | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'IssueState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.IssueState[] | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly label: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Label
    }
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: LabelConnection
    }
    readonly languages: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LanguageOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LanguageOrder | undefined
        }
      }
    }
    readonly latestRelease: {
      readonly ad: Release
    }
    readonly mentionableUsers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: UserConnection
    }
    readonly mergeQueue: {
      readonly a: {
        readonly branch: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: MergeQueue
    }
    readonly milestone: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Milestone
    }
    readonly milestones: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'MilestoneOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.MilestoneOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly states: {
          readonly nt: 'MilestoneState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.MilestoneState[] | undefined
        }
      }
      readonly ad: MilestoneConnection
    }
    readonly object: {
      readonly a: {
        readonly expression: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly oid: {
          readonly nt: 'GitObjectID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GitObjectID | undefined
        }
      }
      readonly ad: GitObject
    }
    readonly owner: {
      readonly ad: RepositoryOwner
    }
    readonly packages: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageOrder | undefined
        }
        readonly packageType: {
          readonly nt: 'PackageType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageType | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: PackageConnection
    }
    readonly parent: {
      readonly ad: Repository
    }
    readonly pinnedDiscussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PinnedDiscussionConnection
    }
    readonly pinnedEnvironments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'PinnedEnvironmentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PinnedEnvironmentOrder | undefined
        }
      }
      readonly ad: PinnedEnvironmentConnection
    }
    readonly pinnedIssues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: PinnedIssueConnection
    }
    readonly project: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Project
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectOrder | undefined
        }
        readonly search: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly states: {
          readonly nt: 'ProjectState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.ProjectState[] | undefined
        }
      }
      readonly ad: ProjectConnection
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly pullRequest: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: PullRequest
    }
    readonly pullRequestTemplates: {
      readonly ad: PullRequestTemplate
    }
    readonly pullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly recentProjects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly ref: {
      readonly a: {
        readonly qualifiedName: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Ref
    }
    readonly refs: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly direction: {
          readonly nt: 'OrderDirection'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrderDirection | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RefOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RefOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly refPrefix: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: RefConnection
    }
    readonly release: {
      readonly a: {
        readonly tagName: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Release
    }
    readonly releases: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReleaseOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReleaseOrder | undefined
        }
      }
      readonly ad: ReleaseConnection
    }
    readonly repositoryTopics: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: RepositoryTopicConnection
    }
    readonly ruleset: {
      readonly a: {
        readonly databaseId: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
        readonly includeParents: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: RepositoryRuleset
    }
    readonly rulesets: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeParents: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly targets: {
          readonly nt: 'RepositoryRulesetTarget'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.RepositoryRulesetTarget[] | undefined
        }
      }
      readonly ad: RepositoryRulesetConnection
    }
    readonly shortDescriptionHTML: {
      readonly a: {
        readonly limit: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly stargazers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'StarOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.StarOrder | undefined
        }
      }
      readonly ad: StargazerConnection
    }
    readonly submodules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly templateRepository: {
      readonly ad: Repository
    }
    readonly vulnerabilityAlert: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: RepositoryVulnerabilityAlert
    }
    readonly vulnerabilityAlerts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly dependencyScopes: {
          readonly nt: 'RepositoryVulnerabilityAlertDependencyScope'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.RepositoryVulnerabilityAlertDependencyScope[] | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly states: {
          readonly nt: 'RepositoryVulnerabilityAlertState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.RepositoryVulnerabilityAlertState[] | undefined
        }
      }
      readonly ad: RepositoryVulnerabilityAlertConnection
    }
    readonly watchers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
  }
}

export interface RepositoryCollaboratorConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryCollaboratorEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface RepositoryCollaboratorEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
    readonly permissionSources: {
      readonly ad: PermissionSource
    }
  }
}

export interface RepositoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryEdge
    }
    readonly nodes: {
      readonly ad: Repository
    }
  }
}

export interface RepositoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Repository
    }
  }
}

export interface RepositoryInvitation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly invitee: {
      readonly ad: User
    }
    readonly inviter: {
      readonly ad: User
    }
    readonly repository: {
      readonly ad: RepositoryInfo
    }
  }
}

export interface RepositoryInvitationConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryInvitationEdge
    }
    readonly nodes: {
      readonly ad: RepositoryInvitation
    }
  }
}

export interface RepositoryInvitationEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryInvitation
    }
  }
}

export interface RepositoryRule extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repositoryRuleset: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface RepositoryRuleConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryRuleEdge
    }
    readonly nodes: {
      readonly ad: RepositoryRule
    }
  }
}

export interface RepositoryRuleEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryRule
    }
  }
}

export interface RepositoryRuleset extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly bypassActors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: RepositoryRulesetBypassActorConnection
    }
    readonly rules: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly type: {
          readonly nt: 'RepositoryRuleType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryRuleType | undefined
        }
      }
      readonly ad: RepositoryRuleConnection
    }
  }
}

export interface RepositoryRulesetBypassActor extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repositoryRuleset: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface RepositoryRulesetBypassActorConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryRulesetBypassActorEdge
    }
    readonly nodes: {
      readonly ad: RepositoryRulesetBypassActor
    }
  }
}

export interface RepositoryRulesetBypassActorEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryRulesetBypassActor
    }
  }
}

export interface RepositoryRulesetConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryRulesetEdge
    }
    readonly nodes: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface RepositoryRulesetEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface RepositoryTopic extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly topic: {
      readonly ad: Topic
    }
  }
}

export interface RepositoryTopicConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryTopicEdge
    }
    readonly nodes: {
      readonly ad: RepositoryTopic
    }
  }
}

export interface RepositoryTopicEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryTopic
    }
  }
}

export interface RepositoryVisibilityChangeDisableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepositoryVisibilityChangeEnableAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RepositoryVulnerabilityAlert extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly dependabotUpdate: {
      readonly ad: DependabotUpdate
    }
    readonly dismisser: {
      readonly ad: User
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly securityAdvisory: {
      readonly ad: SecurityAdvisory
    }
    readonly securityVulnerability: {
      readonly ad: SecurityVulnerability
    }
  }
}

export interface RepositoryVulnerabilityAlertConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: RepositoryVulnerabilityAlertEdge
    }
    readonly nodes: {
      readonly ad: RepositoryVulnerabilityAlert
    }
  }
}

export interface RepositoryVulnerabilityAlertEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: RepositoryVulnerabilityAlert
    }
  }
}

export interface ReprioritizeSubIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface RequestReviewsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly requestedReviewersEdge: {
      readonly ad: UserEdge
    }
  }
}

export interface RequiredStatusCheckDescription extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly app: {
      readonly ad: App
    }
  }
}

export interface RerequestCheckSuitePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly checkSuite: {
      readonly ad: CheckSuite
    }
  }
}

export interface ResolveReviewThreadPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly thread: {
      readonly ad: PullRequestReviewThread
    }
  }
}

export interface RestrictedContribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface RetireSponsorsTierPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsTier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface RevertPullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly revertPullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ReviewDismissalAllowance extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface ReviewDismissalAllowanceConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReviewDismissalAllowanceEdge
    }
    readonly nodes: {
      readonly ad: ReviewDismissalAllowance
    }
  }
}

export interface ReviewDismissalAllowanceEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ReviewDismissalAllowance
    }
  }
}

export interface ReviewDismissedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
    readonly pullRequestCommit: {
      readonly ad: PullRequestCommit
    }
    readonly review: {
      readonly ad: PullRequestReview
    }
  }
}

export interface ReviewRequest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ReviewRequestConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: ReviewRequestEdge
    }
    readonly nodes: {
      readonly ad: ReviewRequest
    }
  }
}

export interface ReviewRequestEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: ReviewRequest
    }
  }
}

export interface ReviewRequestRemovedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface ReviewRequestedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface RevokeEnterpriseOrganizationsMigratorRolePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: OrganizationConnection
    }
  }
}

export interface SavedReply extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: Actor
    }
  }
}

export interface SavedReplyConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SavedReplyEdge
    }
    readonly nodes: {
      readonly ad: SavedReply
    }
  }
}

export interface SavedReplyEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SavedReply
    }
  }
}

export interface SecurityAdvisory extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly cwes: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly vulnerabilities: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly classifications: {
          readonly nt: 'SecurityAdvisoryClassification'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SecurityAdvisoryClassification[] | undefined
        }
        readonly ecosystem: {
          readonly nt: 'SecurityAdvisoryEcosystem'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityAdvisoryEcosystem | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SecurityVulnerabilityOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityVulnerabilityOrder | undefined
        }
        readonly package: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly severities: {
          readonly nt: 'SecurityAdvisorySeverity'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SecurityAdvisorySeverity[] | undefined
        }
      }
      readonly ad: SecurityVulnerabilityConnection
    }
  }
}

export interface SecurityAdvisoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SecurityAdvisoryEdge
    }
    readonly nodes: {
      readonly ad: SecurityAdvisory
    }
  }
}

export interface SecurityAdvisoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SecurityAdvisory
    }
  }
}

export interface SecurityVulnerability extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly advisory: {
      readonly ad: SecurityAdvisory
    }
  }
}

export interface SecurityVulnerabilityConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SecurityVulnerabilityEdge
    }
    readonly nodes: {
      readonly ad: SecurityVulnerability
    }
  }
}

export interface SecurityVulnerabilityEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SecurityVulnerability
    }
  }
}

export interface SetEnterpriseIdentityProviderPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly identityProvider: {
      readonly ad: EnterpriseIdentityProvider
    }
  }
}

export interface SetOrganizationInteractionLimitPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface SetRepositoryInteractionLimitPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface SetUserInteractionLimitPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface SmimeSignature extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly signer: {
      readonly ad: User
    }
  }
}

export interface SponsorAndLifetimeValue extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsor: {
      readonly ad: Sponsorable
    }
    readonly sponsorable: {
      readonly ad: Sponsorable
    }
  }
}

export interface SponsorAndLifetimeValueConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SponsorAndLifetimeValueEdge
    }
    readonly nodes: {
      readonly ad: SponsorAndLifetimeValue
    }
  }
}

export interface SponsorAndLifetimeValueEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SponsorAndLifetimeValue
    }
  }
}

export interface SponsorsActivity extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly previousSponsorsTier: {
      readonly ad: SponsorsTier
    }
    readonly sponsorable: {
      readonly ad: Sponsorable
    }
    readonly sponsorsTier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface SponsorsActivityConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SponsorsActivityEdge
    }
    readonly nodes: {
      readonly ad: SponsorsActivity
    }
  }
}

export interface SponsorsActivityEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SponsorsActivity
    }
  }
}

export interface SponsorsListing extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly featuredItems: {
      readonly a: {
        readonly featureableTypes: {
          readonly nt: 'SponsorsListingFeaturedItemFeatureableType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SponsorsListingFeaturedItemFeatureableType[] | undefined
        }
      }
      readonly ad: SponsorsListingFeaturedItem
    }
    readonly fiscalHost: {
      readonly ad: Organization
    }
    readonly sponsorable: {
      readonly ad: Sponsorable
    }
    readonly tiers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeUnpublished: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorsTierOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsTierOrder | undefined
        }
      }
      readonly ad: SponsorsTierConnection
    }
  }
}

export interface SponsorsListingFeaturedItem extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
  }
}

export interface SponsorsTier extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly adminInfo: {
      readonly ad: SponsorsTierAdminInfo
    }
    readonly closestLesserValueTier: {
      readonly ad: SponsorsTier
    }
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
  }
}

export interface SponsorsTierAdminInfo extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorships: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
  }
}

export interface SponsorsTierConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SponsorsTierEdge
    }
    readonly nodes: {
      readonly ad: SponsorsTier
    }
  }
}

export interface SponsorsTierEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SponsorsTier
    }
  }
}

export interface Sponsorship extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly maintainer: {
      readonly ad: User
    }
    readonly sponsor: {
      readonly ad: User
    }
    readonly sponsorable: {
      readonly ad: Sponsorable
    }
    readonly tier: {
      readonly ad: SponsorsTier
    }
  }
}

export interface SponsorshipConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SponsorshipEdge
    }
    readonly nodes: {
      readonly ad: Sponsorship
    }
  }
}

export interface SponsorshipEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Sponsorship
    }
  }
}

export interface SponsorshipNewsletter extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: User
    }
    readonly sponsorable: {
      readonly ad: Sponsorable
    }
  }
}

export interface SponsorshipNewsletterConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: SponsorshipNewsletterEdge
    }
    readonly nodes: {
      readonly ad: SponsorshipNewsletter
    }
  }
}

export interface SponsorshipNewsletterEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: SponsorshipNewsletter
    }
  }
}

export interface SshSignature extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly signer: {
      readonly ad: User
    }
  }
}

export interface StargazerConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: StargazerEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface StargazerEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface StarredRepositoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: StarredRepositoryEdge
    }
    readonly nodes: {
      readonly ad: Repository
    }
  }
}

export interface StarredRepositoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Repository
    }
  }
}

export interface Status extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly combinedContexts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly context: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: StatusContext
    }
    readonly contexts: {
      readonly ad: StatusContext
    }
  }
}

export interface StatusCheckRollup extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly commit: {
      readonly ad: Commit
    }
    readonly contexts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface StatusContext extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly commit: {
      readonly ad: Commit
    }
    readonly creator: {
      readonly ad: Actor
    }
    readonly isRequired: {
      readonly a: {
        readonly pullRequestId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly pullRequestNumber: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface StripeConnectAccount extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
  }
}

export interface SubIssueAddedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly subIssue: {
      readonly ad: Issue
    }
  }
}

export interface SubIssueRemovedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly subIssue: {
      readonly ad: Issue
    }
  }
}

export interface SubmitPullRequestReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
  }
}

export interface SubscribedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface SuggestedReviewer extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reviewer: {
      readonly ad: User
    }
  }
}

export interface Tag extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
    readonly tagger: {
      readonly ad: GitActor
    }
    readonly target: {
      readonly ad: GitObject
    }
  }
}

export interface Team extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ancestors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: TeamConnection
    }
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly childTeams: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly immediateOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamOrder | undefined
        }
        readonly userLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
      }
      readonly ad: TeamConnection
    }
    readonly discussion: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: TeamDiscussion
    }
    readonly discussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly isPinned: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamDiscussionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamDiscussionOrder | undefined
        }
      }
      readonly ad: TeamDiscussionConnection
    }
    readonly invitations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: OrganizationInvitationConnection
    }
    readonly memberStatuses: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'UserStatusOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.UserStatusOrder | undefined
        }
      }
      readonly ad: UserStatusConnection
    }
    readonly members: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly membership: {
          readonly nt: 'TeamMembershipType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamMembershipType | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamMemberOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamMemberOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly role: {
          readonly nt: 'TeamMemberRole'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamMemberRole | undefined
        }
      }
      readonly ad: TeamMemberConnection
    }
    readonly organization: {
      readonly ad: Organization
    }
    readonly parentTeam: {
      readonly ad: Team
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'ProjectV2Filters'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Filters | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly repositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamRepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamRepositoryOrder | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: TeamRepositoryConnection
    }
  }
}

export interface TeamAddMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly team: {
      readonly ad: Team
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface TeamAddRepositoryAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly team: {
      readonly ad: Team
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface TeamChangeParentTeamAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly parentTeam: {
      readonly ad: Team
    }
    readonly parentTeamWas: {
      readonly ad: Team
    }
    readonly team: {
      readonly ad: Team
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface TeamConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: TeamEdge
    }
    readonly nodes: {
      readonly ad: Team
    }
  }
}

export interface TeamDiscussion extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly comments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly fromComment: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'TeamDiscussionCommentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.TeamDiscussionCommentOrder | undefined
        }
      }
      readonly ad: TeamDiscussionCommentConnection
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly team: {
      readonly ad: Team
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface TeamDiscussionComment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly discussion: {
      readonly ad: TeamDiscussion
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface TeamDiscussionCommentConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: TeamDiscussionCommentEdge
    }
    readonly nodes: {
      readonly ad: TeamDiscussionComment
    }
  }
}

export interface TeamDiscussionCommentEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: TeamDiscussionComment
    }
  }
}

export interface TeamDiscussionConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: TeamDiscussionEdge
    }
    readonly nodes: {
      readonly ad: TeamDiscussion
    }
  }
}

export interface TeamDiscussionEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: TeamDiscussion
    }
  }
}

export interface TeamEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Team
    }
  }
}

export interface TeamMemberConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: TeamMemberEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface TeamMemberEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface TeamRemoveMemberAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly team: {
      readonly ad: Team
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface TeamRemoveRepositoryAuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly repository: {
      readonly ad: Repository
    }
    readonly team: {
      readonly ad: Team
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface TeamRepositoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: TeamRepositoryEdge
    }
    readonly nodes: {
      readonly ad: Repository
    }
  }
}

export interface TeamRepositoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: Repository
    }
  }
}

export interface Topic extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly relatedTopics: {
      readonly a: {
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: Topic
    }
    readonly repositories: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly sponsorableOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly stargazers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'StarOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.StarOrder | undefined
        }
      }
      readonly ad: StargazerConnection
    }
  }
}

export interface TransferEnterpriseOrganizationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface TransferIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface TransferredEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly fromRepository: {
      readonly ad: Repository
    }
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface Tree extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly entries: {
      readonly ad: TreeEntry
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface TreeEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly object: {
      readonly ad: GitObject
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UnarchiveProjectV2ItemPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface UnarchiveRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UnassignedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly assignable: {
      readonly ad: Assignable
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface UnfollowOrganizationPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface UnfollowUserPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface UnknownSignature extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly signer: {
      readonly ad: User
    }
  }
}

export interface UnlabeledEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly label: {
      readonly ad: Label
    }
    readonly labelable: {
      readonly ad: Labelable
    }
  }
}

export interface UnlinkProjectV2FromRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UnlinkProjectV2FromTeamPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly team: {
      readonly ad: Team
    }
  }
}

export interface UnlinkRepositoryFromProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UnlockLockablePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface UnlockedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface UnmarkDiscussionCommentAsAnswerPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface UnmarkFileAsViewedPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface UnmarkProjectV2AsTemplatePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface UnmarkedAsDuplicateEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface UnpinIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface UnpinnedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface UnresolveReviewThreadPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly thread: {
      readonly ad: PullRequestReviewThread
    }
  }
}

export interface UnsubscribedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
  }
}

export interface UpdateBranchProtectionRulePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly branchProtectionRule: {
      readonly ad: BranchProtectionRule
    }
  }
}

export interface UpdateCheckRunPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly checkRun: {
      readonly ad: CheckRun
    }
  }
}

export interface UpdateCheckSuitePreferencesPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UpdateDiscussionCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly comment: {
      readonly ad: DiscussionComment
    }
  }
}

export interface UpdateDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly discussion: {
      readonly ad: Discussion
    }
  }
}

export interface UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseDefaultRepositoryPermissionSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseDeployKeySettingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanDeleteIssuesSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanMakePurchasesSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseOrganizationProjectsSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseProfilePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseRepositoryProjectsSettingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseTeamDiscussionsSettingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly enterprise: {
      readonly ad: Enterprise
    }
  }
}

export interface UpdateEnvironmentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly environment: {
      readonly ad: Environment
    }
  }
}

export interface UpdateIssueCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly issueComment: {
      readonly ad: IssueComment
    }
  }
}

export interface UpdateIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly issue: {
      readonly ad: Issue
    }
  }
}

export interface UpdateLabelPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly label: {
      readonly ad: Label
    }
  }
}

export interface UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload
  extends $$Utilities.SchemaDrivenDataMap.OutputObject
{
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface UpdateOrganizationWebCommitSignoffSettingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface UpdatePatreonSponsorabilityPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
  }
}

export interface UpdateProjectCardPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectCard: {
      readonly ad: ProjectCard
    }
  }
}

export interface UpdateProjectColumnPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectColumn: {
      readonly ad: ProjectColumn
    }
  }
}

export interface UpdateProjectPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: Project
    }
  }
}

export interface UpdateProjectV2CollaboratorsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly collaborators: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface UpdateProjectV2DraftIssuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly draftIssue: {
      readonly ad: DraftIssue
    }
  }
}

export interface UpdateProjectV2ItemFieldValuePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2Item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface UpdateProjectV2ItemPositionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly items: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2ItemConnection
    }
  }
}

export interface UpdateProjectV2Payload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly ad: ProjectV2
    }
  }
}

export interface UpdateProjectV2StatusUpdatePayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly statusUpdate: {
      readonly ad: ProjectV2StatusUpdate
    }
  }
}

export interface UpdatePullRequestBranchPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface UpdatePullRequestPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly pullRequest: {
      readonly ad: PullRequest
    }
  }
}

export interface UpdatePullRequestReviewCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReviewComment: {
      readonly ad: PullRequestReviewComment
    }
  }
}

export interface UpdatePullRequestReviewPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly pullRequestReview: {
      readonly ad: PullRequestReview
    }
  }
}

export interface UpdateRefPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ref: {
      readonly ad: Ref
    }
  }
}

export interface UpdateRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UpdateRepositoryRulesetPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly ruleset: {
      readonly ad: RepositoryRuleset
    }
  }
}

export interface UpdateRepositoryWebCommitSignoffSettingPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UpdateSponsorshipPreferencesPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly sponsorship: {
      readonly ad: Sponsorship
    }
  }
}

export interface UpdateTeamDiscussionCommentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly teamDiscussionComment: {
      readonly ad: TeamDiscussionComment
    }
  }
}

export interface UpdateTeamDiscussionPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly teamDiscussion: {
      readonly ad: TeamDiscussion
    }
  }
}

export interface UpdateTeamReviewAssignmentPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly team: {
      readonly ad: Team
    }
  }
}

export interface UpdateTeamsRepositoryPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
    readonly teams: {
      readonly ad: Team
    }
  }
}

export interface UpdateTopicsPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface UpdateUserListPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly list: {
      readonly ad: UserList
    }
  }
}

export interface UpdateUserListsForItemPayload extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly lists: {
      readonly ad: UserList
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface User extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly anyPinnableItems: {
      readonly a: {
        readonly type: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PinnableItemType | undefined
        }
      }
    }
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly canReceiveOrganizationEmailsWhenNotificationsRestricted: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly commitComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: CommitCommentConnection
    }
    readonly contributionsCollection: {
      readonly a: {
        readonly from: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly organizationID: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly to: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: ContributionsCollection
    }
    readonly enterprises: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly membershipType: {
          readonly nt: 'EnterpriseMembershipType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseMembershipType | undefined
        }
        readonly orderBy: {
          readonly nt: 'EnterpriseOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.EnterpriseOrder | undefined
        }
      }
      readonly ad: EnterpriseConnection
    }
    readonly followers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: FollowerConnection
    }
    readonly following: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: FollowingConnection
    }
    readonly gist: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Gist
    }
    readonly gistComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: GistCommentConnection
    }
    readonly gists: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'GistOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GistOrder | undefined
        }
        readonly privacy: {
          readonly nt: 'GistPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.GistPrivacy | undefined
        }
      }
      readonly ad: GistConnection
    }
    readonly hovercard: {
      readonly a: {
        readonly primarySubjectId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
    }
    readonly isSponsoredBy: {
      readonly a: {
        readonly accountLogin: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly issueComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueCommentOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueCommentOrder | undefined
        }
      }
      readonly ad: IssueCommentConnection
    }
    readonly issues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly filterBy: {
          readonly nt: 'IssueFilters'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueFilters | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'IssueState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.IssueState[] | undefined
        }
      }
      readonly ad: IssueConnection
    }
    readonly itemShowcase: {
      readonly ad: ProfileItemShowcase
    }
    readonly lifetimeReceivedSponsorshipValues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorAndLifetimeValueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorAndLifetimeValueOrder | undefined
        }
      }
      readonly ad: SponsorAndLifetimeValueConnection
    }
    readonly lists: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserListConnection
    }
    readonly organization: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Organization
    }
    readonly organizationVerifiedDomainEmails: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly organizations: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'OrganizationOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.OrganizationOrder | undefined
        }
      }
      readonly ad: OrganizationConnection
    }
    readonly packages: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageOrder | undefined
        }
        readonly packageType: {
          readonly nt: 'PackageType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageType | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: PackageConnection
    }
    readonly pinnableItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
    readonly pinnedItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
    readonly project: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Project
    }
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectOrder | undefined
        }
        readonly search: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly states: {
          readonly nt: 'ProjectState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.ProjectState[] | undefined
        }
      }
      readonly ad: ProjectConnection
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly publicKeys: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly pullRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly baseRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly headRefName: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly labels: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'IssueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.IssueOrder | undefined
        }
        readonly states: {
          readonly nt: 'PullRequestState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PullRequestState[] | undefined
        }
      }
      readonly ad: PullRequestConnection
    }
    readonly recentProjects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
    readonly repositories: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isArchived: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isFork: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly repositoriesContributedTo: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly contributionTypes: {
          readonly nt: 'RepositoryContributionType'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryContributionType[] | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssues: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly includeUserRepositories: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly repository: {
      readonly a: {
        readonly followRenames: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Repository
    }
    readonly repositoryDiscussionComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly onlyAnswers: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: DiscussionCommentConnection
    }
    readonly repositoryDiscussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly answered: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DiscussionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DiscussionOrder | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly states: {
          readonly nt: 'DiscussionState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.DiscussionState[] | undefined
        }
      }
      readonly ad: DiscussionConnection
    }
    readonly savedReplies: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SavedReplyOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SavedReplyOrder | undefined
        }
      }
      readonly ad: SavedReplyConnection
    }
    readonly socialAccounts: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly sponsoring: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
      }
    }
    readonly sponsors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
        readonly tierId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
    }
    readonly sponsorsActivities: {
      readonly a: {
        readonly actions: {
          readonly nt: 'SponsorsActivityAction'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SponsorsActivityAction[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeAsSponsor: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorsActivityOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityOrder | undefined
        }
        readonly period: {
          readonly nt: 'SponsorsActivityPeriod'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityPeriod | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: SponsorsActivityConnection
    }
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
    readonly sponsorshipForViewerAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipForViewerAsSponsorable: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipNewsletters: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipNewsletterOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipNewsletterOrder | undefined
        }
      }
      readonly ad: SponsorshipNewsletterConnection
    }
    readonly sponsorshipsAsMaintainer: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly sponsorshipsAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly maintainerLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly starredRepositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'StarOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.StarOrder | undefined
        }
        readonly ownedByViewer: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: StarredRepositoryConnection
    }
    readonly status: {
      readonly ad: UserStatus
    }
    readonly topRepositories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RepositoryOrder
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly totalSponsorshipAmountAsSponsorInCents: {
      readonly a: {
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly sponsorableLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
    }
    readonly watching: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
  }
}

export interface UserBlockedEvent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly actor: {
      readonly ad: Actor
    }
    readonly subject: {
      readonly ad: User
    }
  }
}

export interface UserConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserEdge
    }
    readonly nodes: {
      readonly ad: User
    }
  }
}

export interface UserContentEdit extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly deletedBy: {
      readonly ad: Actor
    }
    readonly editor: {
      readonly ad: Actor
    }
  }
}

export interface UserContentEditConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserContentEditEdge
    }
    readonly nodes: {
      readonly ad: UserContentEdit
    }
  }
}

export interface UserContentEditEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: UserContentEdit
    }
  }
}

export interface UserEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: User
    }
  }
}

export interface UserList extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly items: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface UserListConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserListEdge
    }
    readonly nodes: {
      readonly ad: UserList
    }
  }
}

export interface UserListEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: UserList
    }
  }
}

export interface UserNamespaceRepository extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly owner: {
      readonly ad: RepositoryOwner
    }
    readonly repository: {
      readonly ad: RepositoryInfo
    }
  }
}

export interface UserNamespaceRepositoryConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserNamespaceRepositoryEdge
    }
    readonly nodes: {
      readonly ad: UserNamespaceRepository
    }
  }
}

export interface UserNamespaceRepositoryEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: UserNamespaceRepository
    }
  }
}

export interface UserStatus extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
    readonly user: {
      readonly ad: User
    }
  }
}

export interface UserStatusConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: UserStatusEdge
    }
    readonly nodes: {
      readonly ad: UserStatus
    }
  }
}

export interface UserStatusEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: UserStatus
    }
  }
}

export interface ViewerHovercardContext extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly viewer: {
      readonly ad: User
    }
  }
}

export interface Workflow extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly runs: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'WorkflowRunOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.WorkflowRunOrder | undefined
        }
      }
      readonly ad: WorkflowRunConnection
    }
  }
}

export interface WorkflowRun extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly checkSuite: {
      readonly ad: CheckSuite
    }
    readonly deploymentReviews: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DeploymentReviewConnection
    }
    readonly file: {
      readonly ad: WorkflowRunFile
    }
    readonly pendingDeploymentRequests: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: DeploymentRequestConnection
    }
    readonly workflow: {
      readonly ad: Workflow
    }
  }
}

export interface WorkflowRunConnection extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly edges: {
      readonly ad: WorkflowRunEdge
    }
    readonly nodes: {
      readonly ad: WorkflowRun
    }
  }
}

export interface WorkflowRunEdge extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly node: {
      readonly ad: WorkflowRun
    }
  }
}

export interface WorkflowRunFile extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly run: {
      readonly ad: WorkflowRun
    }
  }
}

//
//
//
//
//
//
// ==================================================================================================
//                                             Interface
// ==================================================================================================
//
//
//
//
//
//

export interface Actor extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface Assignable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly assignees: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserConnection
    }
  }
}

export interface AuditEntry extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface Comment extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly author: {
      readonly ad: Actor
    }
    readonly editor: {
      readonly ad: Actor
    }
    readonly userContentEdits: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: UserContentEditConnection
    }
  }
}

export interface Contribution extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly user: {
      readonly ad: User
    }
  }
}

export interface GitObject extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface GitSignature extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly signer: {
      readonly ad: User
    }
  }
}

export interface Labelable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly labels: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'LabelOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.LabelOrder | undefined
        }
      }
      readonly ad: LabelConnection
    }
  }
}

export interface MemberStatusable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly memberStatuses: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'UserStatusOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.UserStatusOrder | undefined
        }
      }
      readonly ad: UserStatusConnection
    }
  }
}

export interface OrganizationAuditEntryData extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly organization: {
      readonly ad: Organization
    }
  }
}

export interface PackageOwner extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly packages: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly names: {
          readonly nt: 'String'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'PackageOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageOrder | undefined
        }
        readonly packageType: {
          readonly nt: 'PackageType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PackageType | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: PackageConnection
    }
  }
}

export interface ProfileOwner extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly anyPinnableItems: {
      readonly a: {
        readonly type: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.PinnableItemType | undefined
        }
      }
    }
    readonly itemShowcase: {
      readonly ad: ProfileItemShowcase
    }
    readonly pinnableItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
    readonly pinnedItems: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly types: {
          readonly nt: 'PinnableItemType'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.PinnableItemType[] | undefined
        }
      }
    }
  }
}

export interface ProjectOwner extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: Project
    }
    readonly projects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectOrder | undefined
        }
        readonly search: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly states: {
          readonly nt: 'ProjectState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.ProjectState[] | undefined
        }
      }
      readonly ad: ProjectConnection
    }
  }
}

export interface ProjectV2FieldCommon extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly project: {
      readonly ad: ProjectV2
    }
  }
}

export interface ProjectV2ItemFieldValueCommon extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly creator: {
      readonly ad: Actor
    }
    readonly item: {
      readonly ad: ProjectV2Item
    }
  }
}

export interface ProjectV2Owner extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly projectV2: {
      readonly a: {
        readonly number: {
          readonly nt: 'Int'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.Int
        }
      }
      readonly ad: ProjectV2
    }
    readonly projectsV2: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly minPermissionLevel: {
          readonly nt: 'ProjectV2PermissionLevel'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2PermissionLevel | undefined
        }
        readonly orderBy: {
          readonly nt: 'ProjectV2Order'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ProjectV2Order | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
  }
}

export interface ProjectV2Recent extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly recentProjects: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
      readonly ad: ProjectV2Connection
    }
  }
}

export interface Reactable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly reactionGroups: {
      readonly ad: ReactionGroup
    }
    readonly reactions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly content: {
          readonly nt: 'ReactionContent'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionContent | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'ReactionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ReactionOrder | undefined
        }
      }
      readonly ad: ReactionConnection
    }
  }
}

export interface RepositoryAuditEntryData extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface RepositoryDiscussionAuthor extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repositoryDiscussions: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly answered: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'DiscussionOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DiscussionOrder | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly states: {
          readonly nt: 'DiscussionState'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.DiscussionState[] | undefined
        }
      }
      readonly ad: DiscussionConnection
    }
  }
}

export interface RepositoryDiscussionCommentAuthor extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repositoryDiscussionComments: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly onlyAnswers: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly repositoryId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
      readonly ad: DiscussionCommentConnection
    }
  }
}

export interface RepositoryInfo extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly owner: {
      readonly ad: RepositoryOwner
    }
    readonly shortDescriptionHTML: {
      readonly a: {
        readonly limit: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface RepositoryNode extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly repository: {
      readonly ad: Repository
    }
  }
}

export interface RepositoryOwner extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly avatarUrl: {
      readonly a: {
        readonly size: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
    readonly repositories: {
      readonly a: {
        readonly affiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly hasIssuesEnabled: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isArchived: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isFork: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly isLocked: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'RepositoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryOrder | undefined
        }
        readonly ownerAffiliations: {
          readonly nt: 'RepositoryAffiliation'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.RepositoryAffiliation[] | undefined
        }
        readonly privacy: {
          readonly nt: 'RepositoryPrivacy'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryPrivacy | undefined
        }
        readonly visibility: {
          readonly nt: 'RepositoryVisibility'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.RepositoryVisibility | undefined
        }
      }
      readonly ad: RepositoryConnection
    }
    readonly repository: {
      readonly a: {
        readonly followRenames: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Repository
    }
  }
}

export interface RequirableByPullRequest extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly isRequired: {
      readonly a: {
        readonly pullRequestId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly pullRequestNumber: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
      }
    }
  }
}

export interface Sponsorable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly isSponsoredBy: {
      readonly a: {
        readonly accountLogin: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly lifetimeReceivedSponsorshipValues: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorAndLifetimeValueOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorAndLifetimeValueOrder | undefined
        }
      }
      readonly ad: SponsorAndLifetimeValueConnection
    }
    readonly sponsoring: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
      }
    }
    readonly sponsors: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorOrder | undefined
        }
        readonly tierId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
      }
    }
    readonly sponsorsActivities: {
      readonly a: {
        readonly actions: {
          readonly nt: 'SponsorsActivityAction'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SponsorsActivityAction[] | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includeAsSponsor: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorsActivityOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityOrder | undefined
        }
        readonly period: {
          readonly nt: 'SponsorsActivityPeriod'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorsActivityPeriod | undefined
        }
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: SponsorsActivityConnection
    }
    readonly sponsorsListing: {
      readonly ad: SponsorsListing
    }
    readonly sponsorshipForViewerAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipForViewerAsSponsorable: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: Sponsorship
    }
    readonly sponsorshipNewsletters: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipNewsletterOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipNewsletterOrder | undefined
        }
      }
      readonly ad: SponsorshipNewsletterConnection
    }
    readonly sponsorshipsAsMaintainer: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly includePrivate: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly sponsorshipsAsSponsor: {
      readonly a: {
        readonly activeOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly maintainerLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorshipOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorshipOrder | undefined
        }
      }
      readonly ad: SponsorshipConnection
    }
    readonly totalSponsorshipAmountAsSponsorInCents: {
      readonly a: {
        readonly since: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly sponsorableLogins: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly until: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
    }
  }
}

export interface Starrable extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly stargazers: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'StarOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.StarOrder | undefined
        }
      }
      readonly ad: StargazerConnection
    }
  }
}

export interface TeamAuditEntryData extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly team: {
      readonly ad: Team
    }
  }
}

export interface TopicAuditEntryData extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly topic: {
      readonly ad: Topic
    }
  }
}

//
//
//
//
//
//
// ==================================================================================================
//                                               Union
// ==================================================================================================
//
//
//
//
//
//

// No Union types with arguments in your schema.

//
//
//
//
//
//
// ==================================================================================================
//                                                Root
// ==================================================================================================
//
//
//
//
//
//

export interface Mutation extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly abortQueuedMigrations: {
      readonly a: {
        readonly input: {
          readonly nt: 'AbortQueuedMigrationsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AbortQueuedMigrationsInput
        }
      }
    }
    readonly abortRepositoryMigration: {
      readonly a: {
        readonly input: {
          readonly nt: 'AbortRepositoryMigrationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AbortRepositoryMigrationInput
        }
      }
    }
    readonly acceptEnterpriseAdministratorInvitation: {
      readonly a: {
        readonly input: {
          readonly nt: 'AcceptEnterpriseAdministratorInvitationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AcceptEnterpriseAdministratorInvitationInput
        }
      }
      readonly ad: AcceptEnterpriseAdministratorInvitationPayload
    }
    readonly acceptEnterpriseMemberInvitation: {
      readonly a: {
        readonly input: {
          readonly nt: 'AcceptEnterpriseMemberInvitationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AcceptEnterpriseMemberInvitationInput
        }
      }
      readonly ad: AcceptEnterpriseMemberInvitationPayload
    }
    readonly acceptTopicSuggestion: {
      readonly a: {
        readonly input: {
          readonly nt: 'AcceptTopicSuggestionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AcceptTopicSuggestionInput
        }
      }
      readonly ad: AcceptTopicSuggestionPayload
    }
    readonly accessUserNamespaceRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'AccessUserNamespaceRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AccessUserNamespaceRepositoryInput
        }
      }
      readonly ad: AccessUserNamespaceRepositoryPayload
    }
    readonly addAssigneesToAssignable: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddAssigneesToAssignableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddAssigneesToAssignableInput
        }
      }
      readonly ad: AddAssigneesToAssignablePayload
    }
    readonly addComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddCommentInput
        }
      }
      readonly ad: AddCommentPayload
    }
    readonly addDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddDiscussionCommentInput
        }
      }
      readonly ad: AddDiscussionCommentPayload
    }
    readonly addDiscussionPollVote: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddDiscussionPollVoteInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddDiscussionPollVoteInput
        }
      }
      readonly ad: AddDiscussionPollVotePayload
    }
    readonly addEnterpriseOrganizationMember: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddEnterpriseOrganizationMemberInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddEnterpriseOrganizationMemberInput
        }
      }
      readonly ad: AddEnterpriseOrganizationMemberPayload
    }
    readonly addEnterpriseSupportEntitlement: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddEnterpriseSupportEntitlementInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddEnterpriseSupportEntitlementInput
        }
      }
    }
    readonly addLabelsToLabelable: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddLabelsToLabelableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddLabelsToLabelableInput
        }
      }
      readonly ad: AddLabelsToLabelablePayload
    }
    readonly addProjectCard: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddProjectCardInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddProjectCardInput
        }
      }
      readonly ad: AddProjectCardPayload
    }
    readonly addProjectColumn: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddProjectColumnInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddProjectColumnInput
        }
      }
      readonly ad: AddProjectColumnPayload
    }
    readonly addProjectV2DraftIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddProjectV2DraftIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddProjectV2DraftIssueInput
        }
      }
      readonly ad: AddProjectV2DraftIssuePayload
    }
    readonly addProjectV2ItemById: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddProjectV2ItemByIdInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddProjectV2ItemByIdInput
        }
      }
      readonly ad: AddProjectV2ItemByIdPayload
    }
    readonly addPullRequestReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddPullRequestReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddPullRequestReviewInput
        }
      }
      readonly ad: AddPullRequestReviewPayload
    }
    readonly addPullRequestReviewComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddPullRequestReviewCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddPullRequestReviewCommentInput
        }
      }
      readonly ad: AddPullRequestReviewCommentPayload
    }
    readonly addPullRequestReviewThread: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddPullRequestReviewThreadInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddPullRequestReviewThreadInput
        }
      }
      readonly ad: AddPullRequestReviewThreadPayload
    }
    readonly addPullRequestReviewThreadReply: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddPullRequestReviewThreadReplyInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddPullRequestReviewThreadReplyInput
        }
      }
      readonly ad: AddPullRequestReviewThreadReplyPayload
    }
    readonly addReaction: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddReactionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddReactionInput
        }
      }
      readonly ad: AddReactionPayload
    }
    readonly addStar: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddStarInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddStarInput
        }
      }
      readonly ad: AddStarPayload
    }
    readonly addSubIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddSubIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddSubIssueInput
        }
      }
      readonly ad: AddSubIssuePayload
    }
    readonly addUpvote: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddUpvoteInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddUpvoteInput
        }
      }
    }
    readonly addVerifiableDomain: {
      readonly a: {
        readonly input: {
          readonly nt: 'AddVerifiableDomainInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.AddVerifiableDomainInput
        }
      }
    }
    readonly approveDeployments: {
      readonly a: {
        readonly input: {
          readonly nt: 'ApproveDeploymentsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ApproveDeploymentsInput
        }
      }
      readonly ad: ApproveDeploymentsPayload
    }
    readonly approveVerifiableDomain: {
      readonly a: {
        readonly input: {
          readonly nt: 'ApproveVerifiableDomainInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ApproveVerifiableDomainInput
        }
      }
    }
    readonly archiveProjectV2Item: {
      readonly a: {
        readonly input: {
          readonly nt: 'ArchiveProjectV2ItemInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ArchiveProjectV2ItemInput
        }
      }
      readonly ad: ArchiveProjectV2ItemPayload
    }
    readonly archiveRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'ArchiveRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ArchiveRepositoryInput
        }
      }
      readonly ad: ArchiveRepositoryPayload
    }
    readonly cancelEnterpriseAdminInvitation: {
      readonly a: {
        readonly input: {
          readonly nt: 'CancelEnterpriseAdminInvitationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CancelEnterpriseAdminInvitationInput
        }
      }
      readonly ad: CancelEnterpriseAdminInvitationPayload
    }
    readonly cancelEnterpriseMemberInvitation: {
      readonly a: {
        readonly input: {
          readonly nt: 'CancelEnterpriseMemberInvitationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CancelEnterpriseMemberInvitationInput
        }
      }
      readonly ad: CancelEnterpriseMemberInvitationPayload
    }
    readonly cancelSponsorship: {
      readonly a: {
        readonly input: {
          readonly nt: 'CancelSponsorshipInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CancelSponsorshipInput
        }
      }
      readonly ad: CancelSponsorshipPayload
    }
    readonly changeUserStatus: {
      readonly a: {
        readonly input: {
          readonly nt: 'ChangeUserStatusInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ChangeUserStatusInput
        }
      }
      readonly ad: ChangeUserStatusPayload
    }
    readonly clearLabelsFromLabelable: {
      readonly a: {
        readonly input: {
          readonly nt: 'ClearLabelsFromLabelableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ClearLabelsFromLabelableInput
        }
      }
      readonly ad: ClearLabelsFromLabelablePayload
    }
    readonly clearProjectV2ItemFieldValue: {
      readonly a: {
        readonly input: {
          readonly nt: 'ClearProjectV2ItemFieldValueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ClearProjectV2ItemFieldValueInput
        }
      }
      readonly ad: ClearProjectV2ItemFieldValuePayload
    }
    readonly cloneProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'CloneProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CloneProjectInput
        }
      }
      readonly ad: CloneProjectPayload
    }
    readonly cloneTemplateRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'CloneTemplateRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CloneTemplateRepositoryInput
        }
      }
      readonly ad: CloneTemplateRepositoryPayload
    }
    readonly closeDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'CloseDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CloseDiscussionInput
        }
      }
      readonly ad: CloseDiscussionPayload
    }
    readonly closeIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'CloseIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CloseIssueInput
        }
      }
      readonly ad: CloseIssuePayload
    }
    readonly closePullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'ClosePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ClosePullRequestInput
        }
      }
      readonly ad: ClosePullRequestPayload
    }
    readonly convertProjectCardNoteToIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'ConvertProjectCardNoteToIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ConvertProjectCardNoteToIssueInput
        }
      }
      readonly ad: ConvertProjectCardNoteToIssuePayload
    }
    readonly convertProjectV2DraftIssueItemToIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'ConvertProjectV2DraftIssueItemToIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ConvertProjectV2DraftIssueItemToIssueInput
        }
      }
      readonly ad: ConvertProjectV2DraftIssueItemToIssuePayload
    }
    readonly convertPullRequestToDraft: {
      readonly a: {
        readonly input: {
          readonly nt: 'ConvertPullRequestToDraftInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ConvertPullRequestToDraftInput
        }
      }
      readonly ad: ConvertPullRequestToDraftPayload
    }
    readonly copyProjectV2: {
      readonly a: {
        readonly input: {
          readonly nt: 'CopyProjectV2Input'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CopyProjectV2Input
        }
      }
      readonly ad: CopyProjectV2Payload
    }
    readonly createAttributionInvitation: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateAttributionInvitationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateAttributionInvitationInput
        }
      }
      readonly ad: CreateAttributionInvitationPayload
    }
    readonly createBranchProtectionRule: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateBranchProtectionRuleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateBranchProtectionRuleInput
        }
      }
      readonly ad: CreateBranchProtectionRulePayload
    }
    readonly createCheckRun: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateCheckRunInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateCheckRunInput
        }
      }
      readonly ad: CreateCheckRunPayload
    }
    readonly createCheckSuite: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateCheckSuiteInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateCheckSuiteInput
        }
      }
      readonly ad: CreateCheckSuitePayload
    }
    readonly createCommitOnBranch: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateCommitOnBranchInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateCommitOnBranchInput
        }
      }
      readonly ad: CreateCommitOnBranchPayload
    }
    readonly createDeployment: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateDeploymentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateDeploymentInput
        }
      }
      readonly ad: CreateDeploymentPayload
    }
    readonly createDeploymentStatus: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateDeploymentStatusInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateDeploymentStatusInput
        }
      }
      readonly ad: CreateDeploymentStatusPayload
    }
    readonly createDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateDiscussionInput
        }
      }
      readonly ad: CreateDiscussionPayload
    }
    readonly createEnterpriseOrganization: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateEnterpriseOrganizationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateEnterpriseOrganizationInput
        }
      }
      readonly ad: CreateEnterpriseOrganizationPayload
    }
    readonly createEnvironment: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateEnvironmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateEnvironmentInput
        }
      }
      readonly ad: CreateEnvironmentPayload
    }
    readonly createIpAllowListEntry: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateIpAllowListEntryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateIpAllowListEntryInput
        }
      }
    }
    readonly createIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateIssueInput
        }
      }
      readonly ad: CreateIssuePayload
    }
    readonly createLabel: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateLabelInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateLabelInput
        }
      }
      readonly ad: CreateLabelPayload
    }
    readonly createLinkedBranch: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateLinkedBranchInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateLinkedBranchInput
        }
      }
      readonly ad: CreateLinkedBranchPayload
    }
    readonly createMigrationSource: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateMigrationSourceInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateMigrationSourceInput
        }
      }
    }
    readonly createProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateProjectInput
        }
      }
      readonly ad: CreateProjectPayload
    }
    readonly createProjectV2: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateProjectV2Input'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateProjectV2Input
        }
      }
      readonly ad: CreateProjectV2Payload
    }
    readonly createProjectV2Field: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateProjectV2FieldInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateProjectV2FieldInput
        }
      }
    }
    readonly createProjectV2StatusUpdate: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateProjectV2StatusUpdateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateProjectV2StatusUpdateInput
        }
      }
      readonly ad: CreateProjectV2StatusUpdatePayload
    }
    readonly createPullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreatePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreatePullRequestInput
        }
      }
      readonly ad: CreatePullRequestPayload
    }
    readonly createRef: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateRefInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateRefInput
        }
      }
      readonly ad: CreateRefPayload
    }
    readonly createRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateRepositoryInput
        }
      }
      readonly ad: CreateRepositoryPayload
    }
    readonly createRepositoryRuleset: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateRepositoryRulesetInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateRepositoryRulesetInput
        }
      }
      readonly ad: CreateRepositoryRulesetPayload
    }
    readonly createSponsorsListing: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateSponsorsListingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateSponsorsListingInput
        }
      }
      readonly ad: CreateSponsorsListingPayload
    }
    readonly createSponsorsTier: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateSponsorsTierInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateSponsorsTierInput
        }
      }
      readonly ad: CreateSponsorsTierPayload
    }
    readonly createSponsorship: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateSponsorshipInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateSponsorshipInput
        }
      }
      readonly ad: CreateSponsorshipPayload
    }
    readonly createSponsorships: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateSponsorshipsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateSponsorshipsInput
        }
      }
      readonly ad: CreateSponsorshipsPayload
    }
    readonly createTeamDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateTeamDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateTeamDiscussionInput
        }
      }
      readonly ad: CreateTeamDiscussionPayload
    }
    readonly createTeamDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateTeamDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateTeamDiscussionCommentInput
        }
      }
      readonly ad: CreateTeamDiscussionCommentPayload
    }
    readonly createUserList: {
      readonly a: {
        readonly input: {
          readonly nt: 'CreateUserListInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.CreateUserListInput
        }
      }
      readonly ad: CreateUserListPayload
    }
    readonly declineTopicSuggestion: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeclineTopicSuggestionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeclineTopicSuggestionInput
        }
      }
      readonly ad: DeclineTopicSuggestionPayload
    }
    readonly deleteBranchProtectionRule: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteBranchProtectionRuleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteBranchProtectionRuleInput
        }
      }
    }
    readonly deleteDeployment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteDeploymentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteDeploymentInput
        }
      }
    }
    readonly deleteDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteDiscussionInput
        }
      }
      readonly ad: DeleteDiscussionPayload
    }
    readonly deleteDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteDiscussionCommentInput
        }
      }
      readonly ad: DeleteDiscussionCommentPayload
    }
    readonly deleteEnvironment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteEnvironmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteEnvironmentInput
        }
      }
    }
    readonly deleteIpAllowListEntry: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteIpAllowListEntryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteIpAllowListEntryInput
        }
      }
    }
    readonly deleteIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteIssueInput
        }
      }
      readonly ad: DeleteIssuePayload
    }
    readonly deleteIssueComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteIssueCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteIssueCommentInput
        }
      }
    }
    readonly deleteLabel: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteLabelInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteLabelInput
        }
      }
    }
    readonly deleteLinkedBranch: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteLinkedBranchInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteLinkedBranchInput
        }
      }
      readonly ad: DeleteLinkedBranchPayload
    }
    readonly deletePackageVersion: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeletePackageVersionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeletePackageVersionInput
        }
      }
    }
    readonly deleteProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectInput
        }
      }
      readonly ad: DeleteProjectPayload
    }
    readonly deleteProjectCard: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectCardInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectCardInput
        }
      }
      readonly ad: DeleteProjectCardPayload
    }
    readonly deleteProjectColumn: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectColumnInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectColumnInput
        }
      }
      readonly ad: DeleteProjectColumnPayload
    }
    readonly deleteProjectV2: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectV2Input'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectV2Input
        }
      }
      readonly ad: DeleteProjectV2Payload
    }
    readonly deleteProjectV2Field: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectV2FieldInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectV2FieldInput
        }
      }
    }
    readonly deleteProjectV2Item: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectV2ItemInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectV2ItemInput
        }
      }
    }
    readonly deleteProjectV2StatusUpdate: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectV2StatusUpdateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectV2StatusUpdateInput
        }
      }
      readonly ad: DeleteProjectV2StatusUpdatePayload
    }
    readonly deleteProjectV2Workflow: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteProjectV2WorkflowInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteProjectV2WorkflowInput
        }
      }
      readonly ad: DeleteProjectV2WorkflowPayload
    }
    readonly deletePullRequestReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeletePullRequestReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeletePullRequestReviewInput
        }
      }
      readonly ad: DeletePullRequestReviewPayload
    }
    readonly deletePullRequestReviewComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeletePullRequestReviewCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeletePullRequestReviewCommentInput
        }
      }
      readonly ad: DeletePullRequestReviewCommentPayload
    }
    readonly deleteRef: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteRefInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteRefInput
        }
      }
    }
    readonly deleteRepositoryRuleset: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteRepositoryRulesetInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteRepositoryRulesetInput
        }
      }
    }
    readonly deleteTeamDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteTeamDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteTeamDiscussionInput
        }
      }
    }
    readonly deleteTeamDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteTeamDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteTeamDiscussionCommentInput
        }
      }
    }
    readonly deleteUserList: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteUserListInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteUserListInput
        }
      }
      readonly ad: DeleteUserListPayload
    }
    readonly deleteVerifiableDomain: {
      readonly a: {
        readonly input: {
          readonly nt: 'DeleteVerifiableDomainInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DeleteVerifiableDomainInput
        }
      }
    }
    readonly dequeuePullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'DequeuePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DequeuePullRequestInput
        }
      }
      readonly ad: DequeuePullRequestPayload
    }
    readonly disablePullRequestAutoMerge: {
      readonly a: {
        readonly input: {
          readonly nt: 'DisablePullRequestAutoMergeInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DisablePullRequestAutoMergeInput
        }
      }
      readonly ad: DisablePullRequestAutoMergePayload
    }
    readonly dismissPullRequestReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'DismissPullRequestReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DismissPullRequestReviewInput
        }
      }
      readonly ad: DismissPullRequestReviewPayload
    }
    readonly dismissRepositoryVulnerabilityAlert: {
      readonly a: {
        readonly input: {
          readonly nt: 'DismissRepositoryVulnerabilityAlertInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.DismissRepositoryVulnerabilityAlertInput
        }
      }
      readonly ad: DismissRepositoryVulnerabilityAlertPayload
    }
    readonly enablePullRequestAutoMerge: {
      readonly a: {
        readonly input: {
          readonly nt: 'EnablePullRequestAutoMergeInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.EnablePullRequestAutoMergeInput
        }
      }
      readonly ad: EnablePullRequestAutoMergePayload
    }
    readonly enqueuePullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'EnqueuePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.EnqueuePullRequestInput
        }
      }
      readonly ad: EnqueuePullRequestPayload
    }
    readonly followOrganization: {
      readonly a: {
        readonly input: {
          readonly nt: 'FollowOrganizationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.FollowOrganizationInput
        }
      }
      readonly ad: FollowOrganizationPayload
    }
    readonly followUser: {
      readonly a: {
        readonly input: {
          readonly nt: 'FollowUserInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.FollowUserInput
        }
      }
      readonly ad: FollowUserPayload
    }
    readonly grantEnterpriseOrganizationsMigratorRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'GrantEnterpriseOrganizationsMigratorRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.GrantEnterpriseOrganizationsMigratorRoleInput
        }
      }
      readonly ad: GrantEnterpriseOrganizationsMigratorRolePayload
    }
    readonly grantMigratorRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'GrantMigratorRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.GrantMigratorRoleInput
        }
      }
    }
    readonly importProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'ImportProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ImportProjectInput
        }
      }
      readonly ad: ImportProjectPayload
    }
    readonly inviteEnterpriseAdmin: {
      readonly a: {
        readonly input: {
          readonly nt: 'InviteEnterpriseAdminInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.InviteEnterpriseAdminInput
        }
      }
      readonly ad: InviteEnterpriseAdminPayload
    }
    readonly inviteEnterpriseMember: {
      readonly a: {
        readonly input: {
          readonly nt: 'InviteEnterpriseMemberInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.InviteEnterpriseMemberInput
        }
      }
      readonly ad: InviteEnterpriseMemberPayload
    }
    readonly linkProjectV2ToRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'LinkProjectV2ToRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.LinkProjectV2ToRepositoryInput
        }
      }
      readonly ad: LinkProjectV2ToRepositoryPayload
    }
    readonly linkProjectV2ToTeam: {
      readonly a: {
        readonly input: {
          readonly nt: 'LinkProjectV2ToTeamInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.LinkProjectV2ToTeamInput
        }
      }
      readonly ad: LinkProjectV2ToTeamPayload
    }
    readonly linkRepositoryToProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'LinkRepositoryToProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.LinkRepositoryToProjectInput
        }
      }
      readonly ad: LinkRepositoryToProjectPayload
    }
    readonly lockLockable: {
      readonly a: {
        readonly input: {
          readonly nt: 'LockLockableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.LockLockableInput
        }
      }
      readonly ad: LockLockablePayload
    }
    readonly markDiscussionCommentAsAnswer: {
      readonly a: {
        readonly input: {
          readonly nt: 'MarkDiscussionCommentAsAnswerInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MarkDiscussionCommentAsAnswerInput
        }
      }
      readonly ad: MarkDiscussionCommentAsAnswerPayload
    }
    readonly markFileAsViewed: {
      readonly a: {
        readonly input: {
          readonly nt: 'MarkFileAsViewedInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MarkFileAsViewedInput
        }
      }
      readonly ad: MarkFileAsViewedPayload
    }
    readonly markProjectV2AsTemplate: {
      readonly a: {
        readonly input: {
          readonly nt: 'MarkProjectV2AsTemplateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MarkProjectV2AsTemplateInput
        }
      }
      readonly ad: MarkProjectV2AsTemplatePayload
    }
    readonly markPullRequestReadyForReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'MarkPullRequestReadyForReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MarkPullRequestReadyForReviewInput
        }
      }
      readonly ad: MarkPullRequestReadyForReviewPayload
    }
    readonly mergeBranch: {
      readonly a: {
        readonly input: {
          readonly nt: 'MergeBranchInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MergeBranchInput
        }
      }
      readonly ad: MergeBranchPayload
    }
    readonly mergePullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'MergePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MergePullRequestInput
        }
      }
      readonly ad: MergePullRequestPayload
    }
    readonly minimizeComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'MinimizeCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MinimizeCommentInput
        }
      }
    }
    readonly moveProjectCard: {
      readonly a: {
        readonly input: {
          readonly nt: 'MoveProjectCardInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MoveProjectCardInput
        }
      }
      readonly ad: MoveProjectCardPayload
    }
    readonly moveProjectColumn: {
      readonly a: {
        readonly input: {
          readonly nt: 'MoveProjectColumnInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.MoveProjectColumnInput
        }
      }
      readonly ad: MoveProjectColumnPayload
    }
    readonly pinEnvironment: {
      readonly a: {
        readonly input: {
          readonly nt: 'PinEnvironmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.PinEnvironmentInput
        }
      }
      readonly ad: PinEnvironmentPayload
    }
    readonly pinIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'PinIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.PinIssueInput
        }
      }
      readonly ad: PinIssuePayload
    }
    readonly publishSponsorsTier: {
      readonly a: {
        readonly input: {
          readonly nt: 'PublishSponsorsTierInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.PublishSponsorsTierInput
        }
      }
      readonly ad: PublishSponsorsTierPayload
    }
    readonly regenerateEnterpriseIdentityProviderRecoveryCodes: {
      readonly a: {
        readonly input: {
          readonly nt: 'RegenerateEnterpriseIdentityProviderRecoveryCodesInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RegenerateEnterpriseIdentityProviderRecoveryCodesInput
        }
      }
      readonly ad: RegenerateEnterpriseIdentityProviderRecoveryCodesPayload
    }
    readonly regenerateVerifiableDomainToken: {
      readonly a: {
        readonly input: {
          readonly nt: 'RegenerateVerifiableDomainTokenInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RegenerateVerifiableDomainTokenInput
        }
      }
    }
    readonly rejectDeployments: {
      readonly a: {
        readonly input: {
          readonly nt: 'RejectDeploymentsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RejectDeploymentsInput
        }
      }
      readonly ad: RejectDeploymentsPayload
    }
    readonly removeAssigneesFromAssignable: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveAssigneesFromAssignableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveAssigneesFromAssignableInput
        }
      }
      readonly ad: RemoveAssigneesFromAssignablePayload
    }
    readonly removeEnterpriseAdmin: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveEnterpriseAdminInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveEnterpriseAdminInput
        }
      }
      readonly ad: RemoveEnterpriseAdminPayload
    }
    readonly removeEnterpriseIdentityProvider: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveEnterpriseIdentityProviderInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveEnterpriseIdentityProviderInput
        }
      }
      readonly ad: RemoveEnterpriseIdentityProviderPayload
    }
    readonly removeEnterpriseMember: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveEnterpriseMemberInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveEnterpriseMemberInput
        }
      }
      readonly ad: RemoveEnterpriseMemberPayload
    }
    readonly removeEnterpriseOrganization: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveEnterpriseOrganizationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveEnterpriseOrganizationInput
        }
      }
      readonly ad: RemoveEnterpriseOrganizationPayload
    }
    readonly removeEnterpriseSupportEntitlement: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveEnterpriseSupportEntitlementInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveEnterpriseSupportEntitlementInput
        }
      }
    }
    readonly removeLabelsFromLabelable: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveLabelsFromLabelableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveLabelsFromLabelableInput
        }
      }
      readonly ad: RemoveLabelsFromLabelablePayload
    }
    readonly removeOutsideCollaborator: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveOutsideCollaboratorInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveOutsideCollaboratorInput
        }
      }
      readonly ad: RemoveOutsideCollaboratorPayload
    }
    readonly removeReaction: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveReactionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveReactionInput
        }
      }
      readonly ad: RemoveReactionPayload
    }
    readonly removeStar: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveStarInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveStarInput
        }
      }
      readonly ad: RemoveStarPayload
    }
    readonly removeSubIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveSubIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveSubIssueInput
        }
      }
      readonly ad: RemoveSubIssuePayload
    }
    readonly removeUpvote: {
      readonly a: {
        readonly input: {
          readonly nt: 'RemoveUpvoteInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RemoveUpvoteInput
        }
      }
    }
    readonly reopenDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'ReopenDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ReopenDiscussionInput
        }
      }
      readonly ad: ReopenDiscussionPayload
    }
    readonly reopenIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'ReopenIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ReopenIssueInput
        }
      }
      readonly ad: ReopenIssuePayload
    }
    readonly reopenPullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'ReopenPullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ReopenPullRequestInput
        }
      }
      readonly ad: ReopenPullRequestPayload
    }
    readonly reorderEnvironment: {
      readonly a: {
        readonly input: {
          readonly nt: 'ReorderEnvironmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ReorderEnvironmentInput
        }
      }
      readonly ad: ReorderEnvironmentPayload
    }
    readonly reprioritizeSubIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'ReprioritizeSubIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ReprioritizeSubIssueInput
        }
      }
      readonly ad: ReprioritizeSubIssuePayload
    }
    readonly requestReviews: {
      readonly a: {
        readonly input: {
          readonly nt: 'RequestReviewsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RequestReviewsInput
        }
      }
      readonly ad: RequestReviewsPayload
    }
    readonly rerequestCheckSuite: {
      readonly a: {
        readonly input: {
          readonly nt: 'RerequestCheckSuiteInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RerequestCheckSuiteInput
        }
      }
      readonly ad: RerequestCheckSuitePayload
    }
    readonly resolveReviewThread: {
      readonly a: {
        readonly input: {
          readonly nt: 'ResolveReviewThreadInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ResolveReviewThreadInput
        }
      }
      readonly ad: ResolveReviewThreadPayload
    }
    readonly retireSponsorsTier: {
      readonly a: {
        readonly input: {
          readonly nt: 'RetireSponsorsTierInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RetireSponsorsTierInput
        }
      }
      readonly ad: RetireSponsorsTierPayload
    }
    readonly revertPullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'RevertPullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RevertPullRequestInput
        }
      }
      readonly ad: RevertPullRequestPayload
    }
    readonly revokeEnterpriseOrganizationsMigratorRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'RevokeEnterpriseOrganizationsMigratorRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RevokeEnterpriseOrganizationsMigratorRoleInput
        }
      }
      readonly ad: RevokeEnterpriseOrganizationsMigratorRolePayload
    }
    readonly revokeMigratorRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'RevokeMigratorRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.RevokeMigratorRoleInput
        }
      }
    }
    readonly setEnterpriseIdentityProvider: {
      readonly a: {
        readonly input: {
          readonly nt: 'SetEnterpriseIdentityProviderInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SetEnterpriseIdentityProviderInput
        }
      }
      readonly ad: SetEnterpriseIdentityProviderPayload
    }
    readonly setOrganizationInteractionLimit: {
      readonly a: {
        readonly input: {
          readonly nt: 'SetOrganizationInteractionLimitInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SetOrganizationInteractionLimitInput
        }
      }
      readonly ad: SetOrganizationInteractionLimitPayload
    }
    readonly setRepositoryInteractionLimit: {
      readonly a: {
        readonly input: {
          readonly nt: 'SetRepositoryInteractionLimitInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SetRepositoryInteractionLimitInput
        }
      }
      readonly ad: SetRepositoryInteractionLimitPayload
    }
    readonly setUserInteractionLimit: {
      readonly a: {
        readonly input: {
          readonly nt: 'SetUserInteractionLimitInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SetUserInteractionLimitInput
        }
      }
      readonly ad: SetUserInteractionLimitPayload
    }
    readonly startOrganizationMigration: {
      readonly a: {
        readonly input: {
          readonly nt: 'StartOrganizationMigrationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.StartOrganizationMigrationInput
        }
      }
    }
    readonly startRepositoryMigration: {
      readonly a: {
        readonly input: {
          readonly nt: 'StartRepositoryMigrationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.StartRepositoryMigrationInput
        }
      }
    }
    readonly submitPullRequestReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'SubmitPullRequestReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SubmitPullRequestReviewInput
        }
      }
      readonly ad: SubmitPullRequestReviewPayload
    }
    readonly transferEnterpriseOrganization: {
      readonly a: {
        readonly input: {
          readonly nt: 'TransferEnterpriseOrganizationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.TransferEnterpriseOrganizationInput
        }
      }
      readonly ad: TransferEnterpriseOrganizationPayload
    }
    readonly transferIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'TransferIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.TransferIssueInput
        }
      }
      readonly ad: TransferIssuePayload
    }
    readonly unarchiveProjectV2Item: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnarchiveProjectV2ItemInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnarchiveProjectV2ItemInput
        }
      }
      readonly ad: UnarchiveProjectV2ItemPayload
    }
    readonly unarchiveRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnarchiveRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnarchiveRepositoryInput
        }
      }
      readonly ad: UnarchiveRepositoryPayload
    }
    readonly unfollowOrganization: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnfollowOrganizationInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnfollowOrganizationInput
        }
      }
      readonly ad: UnfollowOrganizationPayload
    }
    readonly unfollowUser: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnfollowUserInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnfollowUserInput
        }
      }
      readonly ad: UnfollowUserPayload
    }
    readonly unlinkProjectV2FromRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnlinkProjectV2FromRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnlinkProjectV2FromRepositoryInput
        }
      }
      readonly ad: UnlinkProjectV2FromRepositoryPayload
    }
    readonly unlinkProjectV2FromTeam: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnlinkProjectV2FromTeamInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnlinkProjectV2FromTeamInput
        }
      }
      readonly ad: UnlinkProjectV2FromTeamPayload
    }
    readonly unlinkRepositoryFromProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnlinkRepositoryFromProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnlinkRepositoryFromProjectInput
        }
      }
      readonly ad: UnlinkRepositoryFromProjectPayload
    }
    readonly unlockLockable: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnlockLockableInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnlockLockableInput
        }
      }
      readonly ad: UnlockLockablePayload
    }
    readonly unmarkDiscussionCommentAsAnswer: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnmarkDiscussionCommentAsAnswerInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnmarkDiscussionCommentAsAnswerInput
        }
      }
      readonly ad: UnmarkDiscussionCommentAsAnswerPayload
    }
    readonly unmarkFileAsViewed: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnmarkFileAsViewedInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnmarkFileAsViewedInput
        }
      }
      readonly ad: UnmarkFileAsViewedPayload
    }
    readonly unmarkIssueAsDuplicate: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnmarkIssueAsDuplicateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnmarkIssueAsDuplicateInput
        }
      }
    }
    readonly unmarkProjectV2AsTemplate: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnmarkProjectV2AsTemplateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnmarkProjectV2AsTemplateInput
        }
      }
      readonly ad: UnmarkProjectV2AsTemplatePayload
    }
    readonly unminimizeComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnminimizeCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnminimizeCommentInput
        }
      }
    }
    readonly unpinIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnpinIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnpinIssueInput
        }
      }
      readonly ad: UnpinIssuePayload
    }
    readonly unresolveReviewThread: {
      readonly a: {
        readonly input: {
          readonly nt: 'UnresolveReviewThreadInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UnresolveReviewThreadInput
        }
      }
      readonly ad: UnresolveReviewThreadPayload
    }
    readonly updateBranchProtectionRule: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateBranchProtectionRuleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateBranchProtectionRuleInput
        }
      }
      readonly ad: UpdateBranchProtectionRulePayload
    }
    readonly updateCheckRun: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateCheckRunInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateCheckRunInput
        }
      }
      readonly ad: UpdateCheckRunPayload
    }
    readonly updateCheckSuitePreferences: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateCheckSuitePreferencesInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateCheckSuitePreferencesInput
        }
      }
      readonly ad: UpdateCheckSuitePreferencesPayload
    }
    readonly updateDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateDiscussionInput
        }
      }
      readonly ad: UpdateDiscussionPayload
    }
    readonly updateDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateDiscussionCommentInput
        }
      }
      readonly ad: UpdateDiscussionCommentPayload
    }
    readonly updateEnterpriseAdministratorRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseAdministratorRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseAdministratorRoleInput
        }
      }
    }
    readonly updateEnterpriseAllowPrivateRepositoryForkingSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput
        }
      }
      readonly ad: UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload
    }
    readonly updateEnterpriseDefaultRepositoryPermissionSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseDefaultRepositoryPermissionSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseDefaultRepositoryPermissionSettingInput
        }
      }
      readonly ad: UpdateEnterpriseDefaultRepositoryPermissionSettingPayload
    }
    readonly updateEnterpriseDeployKeySetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseDeployKeySettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseDeployKeySettingInput
        }
      }
      readonly ad: UpdateEnterpriseDeployKeySettingPayload
    }
    readonly updateEnterpriseMembersCanChangeRepositoryVisibilitySetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload
    }
    readonly updateEnterpriseMembersCanCreateRepositoriesSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanCreateRepositoriesSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload
    }
    readonly updateEnterpriseMembersCanDeleteIssuesSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanDeleteIssuesSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanDeleteIssuesSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanDeleteIssuesSettingPayload
    }
    readonly updateEnterpriseMembersCanDeleteRepositoriesSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload
    }
    readonly updateEnterpriseMembersCanInviteCollaboratorsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload
    }
    readonly updateEnterpriseMembersCanMakePurchasesSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanMakePurchasesSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanMakePurchasesSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanMakePurchasesSettingPayload
    }
    readonly updateEnterpriseMembersCanUpdateProtectedBranchesSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload
    }
    readonly updateEnterpriseMembersCanViewDependencyInsightsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload
    }
    readonly updateEnterpriseOrganizationProjectsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseOrganizationProjectsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseOrganizationProjectsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseOrganizationProjectsSettingPayload
    }
    readonly updateEnterpriseOwnerOrganizationRole: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseOwnerOrganizationRoleInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseOwnerOrganizationRoleInput
        }
      }
    }
    readonly updateEnterpriseProfile: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseProfileInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseProfileInput
        }
      }
      readonly ad: UpdateEnterpriseProfilePayload
    }
    readonly updateEnterpriseRepositoryProjectsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseRepositoryProjectsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseRepositoryProjectsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseRepositoryProjectsSettingPayload
    }
    readonly updateEnterpriseTeamDiscussionsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseTeamDiscussionsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseTeamDiscussionsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseTeamDiscussionsSettingPayload
    }
    readonly updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput
        }
      }
      readonly ad: UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload
    }
    readonly updateEnterpriseTwoFactorAuthenticationRequiredSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput
        }
      }
      readonly ad: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload
    }
    readonly updateEnvironment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateEnvironmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateEnvironmentInput
        }
      }
      readonly ad: UpdateEnvironmentPayload
    }
    readonly updateIpAllowListEnabledSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateIpAllowListEnabledSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateIpAllowListEnabledSettingInput
        }
      }
    }
    readonly updateIpAllowListEntry: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateIpAllowListEntryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateIpAllowListEntryInput
        }
      }
    }
    readonly updateIpAllowListForInstalledAppsEnabledSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateIpAllowListForInstalledAppsEnabledSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateIpAllowListForInstalledAppsEnabledSettingInput
        }
      }
    }
    readonly updateIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateIssueInput
        }
      }
      readonly ad: UpdateIssuePayload
    }
    readonly updateIssueComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateIssueCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateIssueCommentInput
        }
      }
      readonly ad: UpdateIssueCommentPayload
    }
    readonly updateLabel: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateLabelInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateLabelInput
        }
      }
      readonly ad: UpdateLabelPayload
    }
    readonly updateNotificationRestrictionSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateNotificationRestrictionSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateNotificationRestrictionSettingInput
        }
      }
    }
    readonly updateOrganizationAllowPrivateRepositoryForkingSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateOrganizationAllowPrivateRepositoryForkingSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateOrganizationAllowPrivateRepositoryForkingSettingInput
        }
      }
      readonly ad: UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload
    }
    readonly updateOrganizationWebCommitSignoffSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateOrganizationWebCommitSignoffSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateOrganizationWebCommitSignoffSettingInput
        }
      }
      readonly ad: UpdateOrganizationWebCommitSignoffSettingPayload
    }
    readonly updatePatreonSponsorability: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdatePatreonSponsorabilityInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdatePatreonSponsorabilityInput
        }
      }
      readonly ad: UpdatePatreonSponsorabilityPayload
    }
    readonly updateProject: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectInput
        }
      }
      readonly ad: UpdateProjectPayload
    }
    readonly updateProjectCard: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectCardInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectCardInput
        }
      }
      readonly ad: UpdateProjectCardPayload
    }
    readonly updateProjectColumn: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectColumnInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectColumnInput
        }
      }
      readonly ad: UpdateProjectColumnPayload
    }
    readonly updateProjectV2: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2Input'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2Input
        }
      }
      readonly ad: UpdateProjectV2Payload
    }
    readonly updateProjectV2Collaborators: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2CollaboratorsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2CollaboratorsInput
        }
      }
      readonly ad: UpdateProjectV2CollaboratorsPayload
    }
    readonly updateProjectV2DraftIssue: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2DraftIssueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2DraftIssueInput
        }
      }
      readonly ad: UpdateProjectV2DraftIssuePayload
    }
    readonly updateProjectV2Field: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2FieldInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2FieldInput
        }
      }
    }
    readonly updateProjectV2ItemFieldValue: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2ItemFieldValueInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2ItemFieldValueInput
        }
      }
      readonly ad: UpdateProjectV2ItemFieldValuePayload
    }
    readonly updateProjectV2ItemPosition: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2ItemPositionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2ItemPositionInput
        }
      }
      readonly ad: UpdateProjectV2ItemPositionPayload
    }
    readonly updateProjectV2StatusUpdate: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateProjectV2StatusUpdateInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateProjectV2StatusUpdateInput
        }
      }
      readonly ad: UpdateProjectV2StatusUpdatePayload
    }
    readonly updatePullRequest: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdatePullRequestInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdatePullRequestInput
        }
      }
      readonly ad: UpdatePullRequestPayload
    }
    readonly updatePullRequestBranch: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdatePullRequestBranchInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdatePullRequestBranchInput
        }
      }
      readonly ad: UpdatePullRequestBranchPayload
    }
    readonly updatePullRequestReview: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdatePullRequestReviewInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdatePullRequestReviewInput
        }
      }
      readonly ad: UpdatePullRequestReviewPayload
    }
    readonly updatePullRequestReviewComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdatePullRequestReviewCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdatePullRequestReviewCommentInput
        }
      }
      readonly ad: UpdatePullRequestReviewCommentPayload
    }
    readonly updateRef: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateRefInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateRefInput
        }
      }
      readonly ad: UpdateRefPayload
    }
    readonly updateRefs: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateRefsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateRefsInput
        }
      }
    }
    readonly updateRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateRepositoryInput
        }
      }
      readonly ad: UpdateRepositoryPayload
    }
    readonly updateRepositoryRuleset: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateRepositoryRulesetInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateRepositoryRulesetInput
        }
      }
      readonly ad: UpdateRepositoryRulesetPayload
    }
    readonly updateRepositoryWebCommitSignoffSetting: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateRepositoryWebCommitSignoffSettingInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateRepositoryWebCommitSignoffSettingInput
        }
      }
      readonly ad: UpdateRepositoryWebCommitSignoffSettingPayload
    }
    readonly updateSponsorshipPreferences: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateSponsorshipPreferencesInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateSponsorshipPreferencesInput
        }
      }
      readonly ad: UpdateSponsorshipPreferencesPayload
    }
    readonly updateSubscription: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateSubscriptionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateSubscriptionInput
        }
      }
    }
    readonly updateTeamDiscussion: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateTeamDiscussionInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateTeamDiscussionInput
        }
      }
      readonly ad: UpdateTeamDiscussionPayload
    }
    readonly updateTeamDiscussionComment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateTeamDiscussionCommentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateTeamDiscussionCommentInput
        }
      }
      readonly ad: UpdateTeamDiscussionCommentPayload
    }
    readonly updateTeamReviewAssignment: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateTeamReviewAssignmentInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateTeamReviewAssignmentInput
        }
      }
      readonly ad: UpdateTeamReviewAssignmentPayload
    }
    readonly updateTeamsRepository: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateTeamsRepositoryInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateTeamsRepositoryInput
        }
      }
      readonly ad: UpdateTeamsRepositoryPayload
    }
    readonly updateTopics: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateTopicsInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateTopicsInput
        }
      }
      readonly ad: UpdateTopicsPayload
    }
    readonly updateUserList: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateUserListInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateUserListInput
        }
      }
      readonly ad: UpdateUserListPayload
    }
    readonly updateUserListsForItem: {
      readonly a: {
        readonly input: {
          readonly nt: 'UpdateUserListsForItemInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.UpdateUserListsForItemInput
        }
      }
      readonly ad: UpdateUserListsForItemPayload
    }
    readonly verifyVerifiableDomain: {
      readonly a: {
        readonly input: {
          readonly nt: 'VerifyVerifiableDomainInput'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.VerifyVerifiableDomainInput
        }
      }
    }
  }
}

export interface Query extends $$Utilities.SchemaDrivenDataMap.OutputObject {
  readonly f: {
    readonly codeOfConduct: {
      readonly a: {
        readonly key: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly enterprise: {
      readonly a: {
        readonly invitationToken: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly slug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Enterprise
    }
    readonly enterpriseAdministratorInvitation: {
      readonly a: {
        readonly enterpriseSlug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
        readonly role: {
          readonly nt: 'EnterpriseAdministratorRole'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.EnterpriseAdministratorRole
        }
        readonly userLogin: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: EnterpriseAdministratorInvitation
    }
    readonly enterpriseAdministratorInvitationByToken: {
      readonly a: {
        readonly invitationToken: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: EnterpriseAdministratorInvitation
    }
    readonly enterpriseMemberInvitation: {
      readonly a: {
        readonly enterpriseSlug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
        readonly userLogin: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: EnterpriseMemberInvitation
    }
    readonly enterpriseMemberInvitationByToken: {
      readonly a: {
        readonly invitationToken: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: EnterpriseMemberInvitation
    }
    readonly license: {
      readonly a: {
        readonly key: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
    }
    readonly marketplaceCategories: {
      readonly a: {
        readonly excludeEmpty: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly excludeSubcategories: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly includeCategories: {
          readonly nt: 'String'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
      }
    }
    readonly marketplaceCategory: {
      readonly a: {
        readonly slug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
        readonly useTopicAliases: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly marketplaceListing: {
      readonly a: {
        readonly slug: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: MarketplaceListing
    }
    readonly marketplaceListings: {
      readonly a: {
        readonly adminId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly allStates: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly categorySlug: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly organizationId: {
          readonly nt: 'ID'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.ID | undefined
        }
        readonly primaryCategoryOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly slugs: {
          readonly nt: 'String'
          readonly it: readonly [0, [0]]
          readonly $t: readonly TypeInputsIndex.String[] | undefined
        }
        readonly useTopicAliases: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly viewerCanAdmin: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly withFreeTrialsOnly: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
      readonly ad: MarketplaceListingConnection
    }
    readonly node: {
      readonly a: {
        readonly id: {
          readonly nt: 'ID'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.ID
        }
      }
    }
    readonly nodes: {
      readonly a: {
        readonly ids: {
          readonly nt: 'ID'
          readonly it: readonly [1, [1]]
          readonly $t: readonly TypeInputsIndex.ID[]
        }
      }
    }
    readonly organization: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Organization
    }
    readonly rateLimit: {
      readonly a: {
        readonly dryRun: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
      }
    }
    readonly relay: {
      readonly ad: Query
    }
    readonly repository: {
      readonly a: {
        readonly followRenames: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
        readonly owner: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Repository
    }
    readonly repositoryOwner: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: RepositoryOwner
    }
    readonly resource: {
      readonly a: {
        readonly url: {
          readonly nt: 'URI'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.URI
        }
      }
    }
    readonly search: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly query: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
        readonly type: {
          readonly nt: 'SearchType'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.SearchType
        }
      }
    }
    readonly securityAdvisories: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly classifications: {
          readonly nt: 'SecurityAdvisoryClassification'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SecurityAdvisoryClassification[] | undefined
        }
        readonly epssPercentage: {
          readonly nt: 'Float'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Float | undefined
        }
        readonly epssPercentile: {
          readonly nt: 'Float'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Float | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly identifier: {
          readonly nt: 'SecurityAdvisoryIdentifierFilter'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityAdvisoryIdentifierFilter | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SecurityAdvisoryOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityAdvisoryOrder | undefined
        }
        readonly publishedSince: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
        readonly updatedSince: {
          readonly nt: 'DateTime'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DateTime | undefined
        }
      }
      readonly ad: SecurityAdvisoryConnection
    }
    readonly securityAdvisory: {
      readonly a: {
        readonly ghsaId: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: SecurityAdvisory
    }
    readonly securityVulnerabilities: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly classifications: {
          readonly nt: 'SecurityAdvisoryClassification'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SecurityAdvisoryClassification[] | undefined
        }
        readonly ecosystem: {
          readonly nt: 'SecurityAdvisoryEcosystem'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityAdvisoryEcosystem | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly orderBy: {
          readonly nt: 'SecurityVulnerabilityOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityVulnerabilityOrder | undefined
        }
        readonly package: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly severities: {
          readonly nt: 'SecurityAdvisorySeverity'
          readonly it: readonly [0, [1]]
          readonly $t: readonly TypeInputsIndex.SecurityAdvisorySeverity[] | undefined
        }
      }
      readonly ad: SecurityVulnerabilityConnection
    }
    readonly sponsorables: {
      readonly a: {
        readonly after: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly before: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
        readonly dependencyEcosystem: {
          readonly nt: 'SecurityAdvisoryEcosystem'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SecurityAdvisoryEcosystem | undefined
        }
        readonly ecosystem: {
          readonly nt: 'DependencyGraphEcosystem'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.DependencyGraphEcosystem | undefined
        }
        readonly first: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly last: {
          readonly nt: 'Int'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Int | undefined
        }
        readonly onlyDependencies: {
          readonly nt: 'Boolean'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.Boolean | undefined
        }
        readonly orderBy: {
          readonly nt: 'SponsorableOrder'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.SponsorableOrder | undefined
        }
        readonly orgLoginForDependencies: {
          readonly nt: 'String'
          readonly it: readonly [0]
          readonly $t: TypeInputsIndex.String | undefined
        }
      }
    }
    readonly topic: {
      readonly a: {
        readonly name: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: Topic
    }
    readonly user: {
      readonly a: {
        readonly login: {
          readonly nt: 'String'
          readonly it: readonly [1]
          readonly $t: TypeInputsIndex.String
        }
      }
      readonly ad: User
    }
    readonly viewer: {
      readonly ad: User
    }
  }
}

//
//
//
//
//
//
// ==================================================================================================
//                                               Index
// ==================================================================================================
//
//
//
//
//
//

export interface ArgumentsMap {
  operations: {
    query: Query
    mutation: Mutation
  }
  directives: {}
  types: {
    AcceptEnterpriseAdministratorInvitationPayload: AcceptEnterpriseAdministratorInvitationPayload
    AcceptEnterpriseMemberInvitationPayload: AcceptEnterpriseMemberInvitationPayload
    AcceptTopicSuggestionPayload: AcceptTopicSuggestionPayload
    AccessUserNamespaceRepositoryPayload: AccessUserNamespaceRepositoryPayload
    Actor: Actor
    AddAssigneesToAssignablePayload: AddAssigneesToAssignablePayload
    AddCommentPayload: AddCommentPayload
    AddDiscussionCommentPayload: AddDiscussionCommentPayload
    AddDiscussionPollVotePayload: AddDiscussionPollVotePayload
    AddEnterpriseOrganizationMemberPayload: AddEnterpriseOrganizationMemberPayload
    AddLabelsToLabelablePayload: AddLabelsToLabelablePayload
    AddProjectCardPayload: AddProjectCardPayload
    AddProjectColumnPayload: AddProjectColumnPayload
    AddProjectV2DraftIssuePayload: AddProjectV2DraftIssuePayload
    AddProjectV2ItemByIdPayload: AddProjectV2ItemByIdPayload
    AddPullRequestReviewCommentPayload: AddPullRequestReviewCommentPayload
    AddPullRequestReviewPayload: AddPullRequestReviewPayload
    AddPullRequestReviewThreadPayload: AddPullRequestReviewThreadPayload
    AddPullRequestReviewThreadReplyPayload: AddPullRequestReviewThreadReplyPayload
    AddReactionPayload: AddReactionPayload
    AddStarPayload: AddStarPayload
    AddSubIssuePayload: AddSubIssuePayload
    AddedToMergeQueueEvent: AddedToMergeQueueEvent
    AddedToProjectEvent: AddedToProjectEvent
    App: App
    ApproveDeploymentsPayload: ApproveDeploymentsPayload
    ArchiveProjectV2ItemPayload: ArchiveProjectV2ItemPayload
    ArchiveRepositoryPayload: ArchiveRepositoryPayload
    Assignable: Assignable
    AssignedEvent: AssignedEvent
    AuditEntry: AuditEntry
    AutoMergeDisabledEvent: AutoMergeDisabledEvent
    AutoMergeEnabledEvent: AutoMergeEnabledEvent
    AutoMergeRequest: AutoMergeRequest
    AutoRebaseEnabledEvent: AutoRebaseEnabledEvent
    AutoSquashEnabledEvent: AutoSquashEnabledEvent
    AutomaticBaseChangeFailedEvent: AutomaticBaseChangeFailedEvent
    AutomaticBaseChangeSucceededEvent: AutomaticBaseChangeSucceededEvent
    BaseRefChangedEvent: BaseRefChangedEvent
    BaseRefDeletedEvent: BaseRefDeletedEvent
    BaseRefForcePushedEvent: BaseRefForcePushedEvent
    Blame: Blame
    BlameRange: BlameRange
    Blob: Blob
    Bot: Bot
    BranchProtectionRule: BranchProtectionRule
    BranchProtectionRuleConflict: BranchProtectionRuleConflict
    BranchProtectionRuleConflictConnection: BranchProtectionRuleConflictConnection
    BranchProtectionRuleConflictEdge: BranchProtectionRuleConflictEdge
    BranchProtectionRuleConnection: BranchProtectionRuleConnection
    BranchProtectionRuleEdge: BranchProtectionRuleEdge
    BypassForcePushAllowance: BypassForcePushAllowance
    BypassForcePushAllowanceConnection: BypassForcePushAllowanceConnection
    BypassForcePushAllowanceEdge: BypassForcePushAllowanceEdge
    BypassPullRequestAllowance: BypassPullRequestAllowance
    BypassPullRequestAllowanceConnection: BypassPullRequestAllowanceConnection
    BypassPullRequestAllowanceEdge: BypassPullRequestAllowanceEdge
    CancelEnterpriseAdminInvitationPayload: CancelEnterpriseAdminInvitationPayload
    CancelEnterpriseMemberInvitationPayload: CancelEnterpriseMemberInvitationPayload
    CancelSponsorshipPayload: CancelSponsorshipPayload
    ChangeUserStatusPayload: ChangeUserStatusPayload
    CheckRun: CheckRun
    CheckRunConnection: CheckRunConnection
    CheckRunEdge: CheckRunEdge
    CheckSuite: CheckSuite
    CheckSuiteConnection: CheckSuiteConnection
    CheckSuiteEdge: CheckSuiteEdge
    ClearLabelsFromLabelablePayload: ClearLabelsFromLabelablePayload
    ClearProjectV2ItemFieldValuePayload: ClearProjectV2ItemFieldValuePayload
    CloneProjectPayload: CloneProjectPayload
    CloneTemplateRepositoryPayload: CloneTemplateRepositoryPayload
    CloseDiscussionPayload: CloseDiscussionPayload
    CloseIssuePayload: CloseIssuePayload
    ClosePullRequestPayload: ClosePullRequestPayload
    ClosedEvent: ClosedEvent
    Comment: Comment
    CommentDeletedEvent: CommentDeletedEvent
    Commit: Commit
    CommitComment: CommitComment
    CommitCommentConnection: CommitCommentConnection
    CommitCommentEdge: CommitCommentEdge
    CommitCommentThread: CommitCommentThread
    CommitConnection: CommitConnection
    CommitContributionsByRepository: CommitContributionsByRepository
    CommitEdge: CommitEdge
    CommitHistoryConnection: CommitHistoryConnection
    Comparison: Comparison
    ComparisonCommitConnection: ComparisonCommitConnection
    ConnectedEvent: ConnectedEvent
    Contribution: Contribution
    ContributionsCollection: ContributionsCollection
    ConvertProjectCardNoteToIssuePayload: ConvertProjectCardNoteToIssuePayload
    ConvertProjectV2DraftIssueItemToIssuePayload: ConvertProjectV2DraftIssueItemToIssuePayload
    ConvertPullRequestToDraftPayload: ConvertPullRequestToDraftPayload
    ConvertToDraftEvent: ConvertToDraftEvent
    ConvertedNoteToIssueEvent: ConvertedNoteToIssueEvent
    ConvertedToDiscussionEvent: ConvertedToDiscussionEvent
    CopyProjectV2Payload: CopyProjectV2Payload
    CreateAttributionInvitationPayload: CreateAttributionInvitationPayload
    CreateBranchProtectionRulePayload: CreateBranchProtectionRulePayload
    CreateCheckRunPayload: CreateCheckRunPayload
    CreateCheckSuitePayload: CreateCheckSuitePayload
    CreateCommitOnBranchPayload: CreateCommitOnBranchPayload
    CreateDeploymentPayload: CreateDeploymentPayload
    CreateDeploymentStatusPayload: CreateDeploymentStatusPayload
    CreateDiscussionPayload: CreateDiscussionPayload
    CreateEnterpriseOrganizationPayload: CreateEnterpriseOrganizationPayload
    CreateEnvironmentPayload: CreateEnvironmentPayload
    CreateIssuePayload: CreateIssuePayload
    CreateLabelPayload: CreateLabelPayload
    CreateLinkedBranchPayload: CreateLinkedBranchPayload
    CreateProjectPayload: CreateProjectPayload
    CreateProjectV2Payload: CreateProjectV2Payload
    CreateProjectV2StatusUpdatePayload: CreateProjectV2StatusUpdatePayload
    CreatePullRequestPayload: CreatePullRequestPayload
    CreateRefPayload: CreateRefPayload
    CreateRepositoryPayload: CreateRepositoryPayload
    CreateRepositoryRulesetPayload: CreateRepositoryRulesetPayload
    CreateSponsorsListingPayload: CreateSponsorsListingPayload
    CreateSponsorsTierPayload: CreateSponsorsTierPayload
    CreateSponsorshipPayload: CreateSponsorshipPayload
    CreateSponsorshipsPayload: CreateSponsorshipsPayload
    CreateTeamDiscussionCommentPayload: CreateTeamDiscussionCommentPayload
    CreateTeamDiscussionPayload: CreateTeamDiscussionPayload
    CreateUserListPayload: CreateUserListPayload
    CreatedCommitContribution: CreatedCommitContribution
    CreatedCommitContributionConnection: CreatedCommitContributionConnection
    CreatedCommitContributionEdge: CreatedCommitContributionEdge
    CreatedIssueContribution: CreatedIssueContribution
    CreatedIssueContributionConnection: CreatedIssueContributionConnection
    CreatedIssueContributionEdge: CreatedIssueContributionEdge
    CreatedPullRequestContribution: CreatedPullRequestContribution
    CreatedPullRequestContributionConnection: CreatedPullRequestContributionConnection
    CreatedPullRequestContributionEdge: CreatedPullRequestContributionEdge
    CreatedPullRequestReviewContribution: CreatedPullRequestReviewContribution
    CreatedPullRequestReviewContributionConnection: CreatedPullRequestReviewContributionConnection
    CreatedPullRequestReviewContributionEdge: CreatedPullRequestReviewContributionEdge
    CreatedRepositoryContribution: CreatedRepositoryContribution
    CreatedRepositoryContributionConnection: CreatedRepositoryContributionConnection
    CreatedRepositoryContributionEdge: CreatedRepositoryContributionEdge
    CrossReferencedEvent: CrossReferencedEvent
    DeclineTopicSuggestionPayload: DeclineTopicSuggestionPayload
    DeleteDiscussionCommentPayload: DeleteDiscussionCommentPayload
    DeleteDiscussionPayload: DeleteDiscussionPayload
    DeleteIssuePayload: DeleteIssuePayload
    DeleteLinkedBranchPayload: DeleteLinkedBranchPayload
    DeleteProjectCardPayload: DeleteProjectCardPayload
    DeleteProjectColumnPayload: DeleteProjectColumnPayload
    DeleteProjectPayload: DeleteProjectPayload
    DeleteProjectV2Payload: DeleteProjectV2Payload
    DeleteProjectV2StatusUpdatePayload: DeleteProjectV2StatusUpdatePayload
    DeleteProjectV2WorkflowPayload: DeleteProjectV2WorkflowPayload
    DeletePullRequestReviewCommentPayload: DeletePullRequestReviewCommentPayload
    DeletePullRequestReviewPayload: DeletePullRequestReviewPayload
    DeleteUserListPayload: DeleteUserListPayload
    DemilestonedEvent: DemilestonedEvent
    DependabotUpdate: DependabotUpdate
    DependencyGraphDependency: DependencyGraphDependency
    DependencyGraphDependencyConnection: DependencyGraphDependencyConnection
    DependencyGraphDependencyEdge: DependencyGraphDependencyEdge
    DependencyGraphManifest: DependencyGraphManifest
    DependencyGraphManifestConnection: DependencyGraphManifestConnection
    DependencyGraphManifestEdge: DependencyGraphManifestEdge
    DeployedEvent: DeployedEvent
    Deployment: Deployment
    DeploymentConnection: DeploymentConnection
    DeploymentEdge: DeploymentEdge
    DeploymentEnvironmentChangedEvent: DeploymentEnvironmentChangedEvent
    DeploymentProtectionRule: DeploymentProtectionRule
    DeploymentProtectionRuleConnection: DeploymentProtectionRuleConnection
    DeploymentProtectionRuleEdge: DeploymentProtectionRuleEdge
    DeploymentRequest: DeploymentRequest
    DeploymentRequestConnection: DeploymentRequestConnection
    DeploymentRequestEdge: DeploymentRequestEdge
    DeploymentReview: DeploymentReview
    DeploymentReviewConnection: DeploymentReviewConnection
    DeploymentReviewEdge: DeploymentReviewEdge
    DeploymentStatus: DeploymentStatus
    DeploymentStatusConnection: DeploymentStatusConnection
    DeploymentStatusEdge: DeploymentStatusEdge
    DequeuePullRequestPayload: DequeuePullRequestPayload
    DisablePullRequestAutoMergePayload: DisablePullRequestAutoMergePayload
    DisconnectedEvent: DisconnectedEvent
    Discussion: Discussion
    DiscussionCategory: DiscussionCategory
    DiscussionCategoryConnection: DiscussionCategoryConnection
    DiscussionCategoryEdge: DiscussionCategoryEdge
    DiscussionComment: DiscussionComment
    DiscussionCommentConnection: DiscussionCommentConnection
    DiscussionCommentEdge: DiscussionCommentEdge
    DiscussionConnection: DiscussionConnection
    DiscussionEdge: DiscussionEdge
    DiscussionPoll: DiscussionPoll
    DiscussionPollOption: DiscussionPollOption
    DiscussionPollOptionConnection: DiscussionPollOptionConnection
    DiscussionPollOptionEdge: DiscussionPollOptionEdge
    DismissPullRequestReviewPayload: DismissPullRequestReviewPayload
    DismissRepositoryVulnerabilityAlertPayload: DismissRepositoryVulnerabilityAlertPayload
    DraftIssue: DraftIssue
    EnablePullRequestAutoMergePayload: EnablePullRequestAutoMergePayload
    EnqueuePullRequestPayload: EnqueuePullRequestPayload
    Enterprise: Enterprise
    EnterpriseAdministratorConnection: EnterpriseAdministratorConnection
    EnterpriseAdministratorEdge: EnterpriseAdministratorEdge
    EnterpriseAdministratorInvitation: EnterpriseAdministratorInvitation
    EnterpriseAdministratorInvitationConnection: EnterpriseAdministratorInvitationConnection
    EnterpriseAdministratorInvitationEdge: EnterpriseAdministratorInvitationEdge
    EnterpriseConnection: EnterpriseConnection
    EnterpriseEdge: EnterpriseEdge
    EnterpriseFailedInvitationConnection: EnterpriseFailedInvitationConnection
    EnterpriseFailedInvitationEdge: EnterpriseFailedInvitationEdge
    EnterpriseIdentityProvider: EnterpriseIdentityProvider
    EnterpriseMemberInvitation: EnterpriseMemberInvitation
    EnterpriseMemberInvitationConnection: EnterpriseMemberInvitationConnection
    EnterpriseMemberInvitationEdge: EnterpriseMemberInvitationEdge
    EnterpriseOrganizationMembershipConnection: EnterpriseOrganizationMembershipConnection
    EnterpriseOrganizationMembershipEdge: EnterpriseOrganizationMembershipEdge
    EnterpriseOutsideCollaboratorConnection: EnterpriseOutsideCollaboratorConnection
    EnterpriseOutsideCollaboratorEdge: EnterpriseOutsideCollaboratorEdge
    EnterpriseOwnerInfo: EnterpriseOwnerInfo
    EnterprisePendingMemberInvitationConnection: EnterprisePendingMemberInvitationConnection
    EnterprisePendingMemberInvitationEdge: EnterprisePendingMemberInvitationEdge
    EnterpriseServerInstallation: EnterpriseServerInstallation
    EnterpriseServerInstallationConnection: EnterpriseServerInstallationConnection
    EnterpriseServerInstallationEdge: EnterpriseServerInstallationEdge
    EnterpriseServerInstallationMembershipConnection: EnterpriseServerInstallationMembershipConnection
    EnterpriseServerInstallationMembershipEdge: EnterpriseServerInstallationMembershipEdge
    EnterpriseServerUserAccount: EnterpriseServerUserAccount
    EnterpriseServerUserAccountConnection: EnterpriseServerUserAccountConnection
    EnterpriseServerUserAccountEdge: EnterpriseServerUserAccountEdge
    EnterpriseServerUserAccountEmail: EnterpriseServerUserAccountEmail
    EnterpriseServerUserAccountEmailConnection: EnterpriseServerUserAccountEmailConnection
    EnterpriseServerUserAccountEmailEdge: EnterpriseServerUserAccountEmailEdge
    EnterpriseServerUserAccountsUpload: EnterpriseServerUserAccountsUpload
    EnterpriseServerUserAccountsUploadConnection: EnterpriseServerUserAccountsUploadConnection
    EnterpriseServerUserAccountsUploadEdge: EnterpriseServerUserAccountsUploadEdge
    EnterpriseUserAccount: EnterpriseUserAccount
    Environment: Environment
    EnvironmentConnection: EnvironmentConnection
    EnvironmentEdge: EnvironmentEdge
    ExternalIdentity: ExternalIdentity
    ExternalIdentityConnection: ExternalIdentityConnection
    ExternalIdentityEdge: ExternalIdentityEdge
    FollowOrganizationPayload: FollowOrganizationPayload
    FollowUserPayload: FollowUserPayload
    FollowerConnection: FollowerConnection
    FollowingConnection: FollowingConnection
    Gist: Gist
    GistComment: GistComment
    GistCommentConnection: GistCommentConnection
    GistCommentEdge: GistCommentEdge
    GistConnection: GistConnection
    GistEdge: GistEdge
    GistFile: GistFile
    GitActor: GitActor
    GitActorConnection: GitActorConnection
    GitActorEdge: GitActorEdge
    GitObject: GitObject
    GitSignature: GitSignature
    GpgSignature: GpgSignature
    GrantEnterpriseOrganizationsMigratorRolePayload: GrantEnterpriseOrganizationsMigratorRolePayload
    HeadRefDeletedEvent: HeadRefDeletedEvent
    HeadRefForcePushedEvent: HeadRefForcePushedEvent
    HeadRefRestoredEvent: HeadRefRestoredEvent
    ImportProjectPayload: ImportProjectPayload
    InviteEnterpriseAdminPayload: InviteEnterpriseAdminPayload
    InviteEnterpriseMemberPayload: InviteEnterpriseMemberPayload
    Issue: Issue
    IssueComment: IssueComment
    IssueCommentConnection: IssueCommentConnection
    IssueCommentEdge: IssueCommentEdge
    IssueConnection: IssueConnection
    IssueContributionsByRepository: IssueContributionsByRepository
    IssueEdge: IssueEdge
    IssueTemplate: IssueTemplate
    JoinedGitHubContribution: JoinedGitHubContribution
    Label: Label
    LabelConnection: LabelConnection
    LabelEdge: LabelEdge
    Labelable: Labelable
    LabeledEvent: LabeledEvent
    LinkProjectV2ToRepositoryPayload: LinkProjectV2ToRepositoryPayload
    LinkProjectV2ToTeamPayload: LinkProjectV2ToTeamPayload
    LinkRepositoryToProjectPayload: LinkRepositoryToProjectPayload
    LinkedBranch: LinkedBranch
    LinkedBranchConnection: LinkedBranchConnection
    LinkedBranchEdge: LinkedBranchEdge
    LockLockablePayload: LockLockablePayload
    LockedEvent: LockedEvent
    Mannequin: Mannequin
    MannequinConnection: MannequinConnection
    MannequinEdge: MannequinEdge
    MarkDiscussionCommentAsAnswerPayload: MarkDiscussionCommentAsAnswerPayload
    MarkFileAsViewedPayload: MarkFileAsViewedPayload
    MarkProjectV2AsTemplatePayload: MarkProjectV2AsTemplatePayload
    MarkPullRequestReadyForReviewPayload: MarkPullRequestReadyForReviewPayload
    MarkedAsDuplicateEvent: MarkedAsDuplicateEvent
    MarketplaceListing: MarketplaceListing
    MarketplaceListingConnection: MarketplaceListingConnection
    MarketplaceListingEdge: MarketplaceListingEdge
    MemberStatusable: MemberStatusable
    MembersCanDeleteReposClearAuditEntry: MembersCanDeleteReposClearAuditEntry
    MembersCanDeleteReposDisableAuditEntry: MembersCanDeleteReposDisableAuditEntry
    MembersCanDeleteReposEnableAuditEntry: MembersCanDeleteReposEnableAuditEntry
    MentionedEvent: MentionedEvent
    MergeBranchPayload: MergeBranchPayload
    MergePullRequestPayload: MergePullRequestPayload
    MergeQueue: MergeQueue
    MergeQueueEntry: MergeQueueEntry
    MergeQueueEntryConnection: MergeQueueEntryConnection
    MergeQueueEntryEdge: MergeQueueEntryEdge
    MergedEvent: MergedEvent
    Milestone: Milestone
    MilestoneConnection: MilestoneConnection
    MilestoneEdge: MilestoneEdge
    MilestonedEvent: MilestonedEvent
    MoveProjectCardPayload: MoveProjectCardPayload
    MoveProjectColumnPayload: MoveProjectColumnPayload
    MovedColumnsInProjectEvent: MovedColumnsInProjectEvent
    Mutation: Mutation
    OIDCProvider: OIDCProvider
    OauthApplicationCreateAuditEntry: OauthApplicationCreateAuditEntry
    OrgAddBillingManagerAuditEntry: OrgAddBillingManagerAuditEntry
    OrgAddMemberAuditEntry: OrgAddMemberAuditEntry
    OrgBlockUserAuditEntry: OrgBlockUserAuditEntry
    OrgConfigDisableCollaboratorsOnlyAuditEntry: OrgConfigDisableCollaboratorsOnlyAuditEntry
    OrgConfigEnableCollaboratorsOnlyAuditEntry: OrgConfigEnableCollaboratorsOnlyAuditEntry
    OrgCreateAuditEntry: OrgCreateAuditEntry
    OrgDisableOauthAppRestrictionsAuditEntry: OrgDisableOauthAppRestrictionsAuditEntry
    OrgDisableSamlAuditEntry: OrgDisableSamlAuditEntry
    OrgDisableTwoFactorRequirementAuditEntry: OrgDisableTwoFactorRequirementAuditEntry
    OrgEnableOauthAppRestrictionsAuditEntry: OrgEnableOauthAppRestrictionsAuditEntry
    OrgEnableSamlAuditEntry: OrgEnableSamlAuditEntry
    OrgEnableTwoFactorRequirementAuditEntry: OrgEnableTwoFactorRequirementAuditEntry
    OrgInviteMemberAuditEntry: OrgInviteMemberAuditEntry
    OrgInviteToBusinessAuditEntry: OrgInviteToBusinessAuditEntry
    OrgOauthAppAccessApprovedAuditEntry: OrgOauthAppAccessApprovedAuditEntry
    OrgOauthAppAccessBlockedAuditEntry: OrgOauthAppAccessBlockedAuditEntry
    OrgOauthAppAccessDeniedAuditEntry: OrgOauthAppAccessDeniedAuditEntry
    OrgOauthAppAccessRequestedAuditEntry: OrgOauthAppAccessRequestedAuditEntry
    OrgOauthAppAccessUnblockedAuditEntry: OrgOauthAppAccessUnblockedAuditEntry
    OrgRemoveBillingManagerAuditEntry: OrgRemoveBillingManagerAuditEntry
    OrgRemoveMemberAuditEntry: OrgRemoveMemberAuditEntry
    OrgRemoveOutsideCollaboratorAuditEntry: OrgRemoveOutsideCollaboratorAuditEntry
    OrgRestoreMemberAuditEntry: OrgRestoreMemberAuditEntry
    OrgRestoreMemberMembershipOrganizationAuditEntryData: OrgRestoreMemberMembershipOrganizationAuditEntryData
    OrgRestoreMemberMembershipRepositoryAuditEntryData: OrgRestoreMemberMembershipRepositoryAuditEntryData
    OrgRestoreMemberMembershipTeamAuditEntryData: OrgRestoreMemberMembershipTeamAuditEntryData
    OrgUnblockUserAuditEntry: OrgUnblockUserAuditEntry
    OrgUpdateDefaultRepositoryPermissionAuditEntry: OrgUpdateDefaultRepositoryPermissionAuditEntry
    OrgUpdateMemberAuditEntry: OrgUpdateMemberAuditEntry
    OrgUpdateMemberRepositoryCreationPermissionAuditEntry: OrgUpdateMemberRepositoryCreationPermissionAuditEntry
    OrgUpdateMemberRepositoryInvitationPermissionAuditEntry: OrgUpdateMemberRepositoryInvitationPermissionAuditEntry
    Organization: Organization
    OrganizationAuditEntryData: OrganizationAuditEntryData
    OrganizationConnection: OrganizationConnection
    OrganizationEdge: OrganizationEdge
    OrganizationEnterpriseOwnerConnection: OrganizationEnterpriseOwnerConnection
    OrganizationEnterpriseOwnerEdge: OrganizationEnterpriseOwnerEdge
    OrganizationIdentityProvider: OrganizationIdentityProvider
    OrganizationInvitation: OrganizationInvitation
    OrganizationInvitationConnection: OrganizationInvitationConnection
    OrganizationInvitationEdge: OrganizationInvitationEdge
    OrganizationMemberConnection: OrganizationMemberConnection
    OrganizationMemberEdge: OrganizationMemberEdge
    OrganizationTeamsHovercardContext: OrganizationTeamsHovercardContext
    OrganizationsHovercardContext: OrganizationsHovercardContext
    Package: Package
    PackageConnection: PackageConnection
    PackageEdge: PackageEdge
    PackageFile: PackageFile
    PackageFileConnection: PackageFileConnection
    PackageFileEdge: PackageFileEdge
    PackageOwner: PackageOwner
    PackageTag: PackageTag
    PackageVersion: PackageVersion
    PackageVersionConnection: PackageVersionConnection
    PackageVersionEdge: PackageVersionEdge
    ParentIssueAddedEvent: ParentIssueAddedEvent
    ParentIssueRemovedEvent: ParentIssueRemovedEvent
    PermissionSource: PermissionSource
    PinEnvironmentPayload: PinEnvironmentPayload
    PinIssuePayload: PinIssuePayload
    PinnedDiscussion: PinnedDiscussion
    PinnedDiscussionConnection: PinnedDiscussionConnection
    PinnedDiscussionEdge: PinnedDiscussionEdge
    PinnedEnvironment: PinnedEnvironment
    PinnedEnvironmentConnection: PinnedEnvironmentConnection
    PinnedEnvironmentEdge: PinnedEnvironmentEdge
    PinnedEvent: PinnedEvent
    PinnedIssue: PinnedIssue
    PinnedIssueConnection: PinnedIssueConnection
    PinnedIssueEdge: PinnedIssueEdge
    PrivateRepositoryForkingDisableAuditEntry: PrivateRepositoryForkingDisableAuditEntry
    PrivateRepositoryForkingEnableAuditEntry: PrivateRepositoryForkingEnableAuditEntry
    ProfileItemShowcase: ProfileItemShowcase
    ProfileOwner: ProfileOwner
    Project: Project
    ProjectCard: ProjectCard
    ProjectCardConnection: ProjectCardConnection
    ProjectCardEdge: ProjectCardEdge
    ProjectColumn: ProjectColumn
    ProjectColumnConnection: ProjectColumnConnection
    ProjectColumnEdge: ProjectColumnEdge
    ProjectConnection: ProjectConnection
    ProjectEdge: ProjectEdge
    ProjectOwner: ProjectOwner
    ProjectV2: ProjectV2
    ProjectV2Connection: ProjectV2Connection
    ProjectV2Edge: ProjectV2Edge
    ProjectV2Field: ProjectV2Field
    ProjectV2FieldCommon: ProjectV2FieldCommon
    ProjectV2FieldConnection: ProjectV2FieldConnection
    ProjectV2FieldEdge: ProjectV2FieldEdge
    ProjectV2Item: ProjectV2Item
    ProjectV2ItemConnection: ProjectV2ItemConnection
    ProjectV2ItemEdge: ProjectV2ItemEdge
    ProjectV2ItemFieldDateValue: ProjectV2ItemFieldDateValue
    ProjectV2ItemFieldIterationValue: ProjectV2ItemFieldIterationValue
    ProjectV2ItemFieldLabelValue: ProjectV2ItemFieldLabelValue
    ProjectV2ItemFieldMilestoneValue: ProjectV2ItemFieldMilestoneValue
    ProjectV2ItemFieldNumberValue: ProjectV2ItemFieldNumberValue
    ProjectV2ItemFieldPullRequestValue: ProjectV2ItemFieldPullRequestValue
    ProjectV2ItemFieldRepositoryValue: ProjectV2ItemFieldRepositoryValue
    ProjectV2ItemFieldReviewerValue: ProjectV2ItemFieldReviewerValue
    ProjectV2ItemFieldSingleSelectValue: ProjectV2ItemFieldSingleSelectValue
    ProjectV2ItemFieldTextValue: ProjectV2ItemFieldTextValue
    ProjectV2ItemFieldUserValue: ProjectV2ItemFieldUserValue
    ProjectV2ItemFieldValueCommon: ProjectV2ItemFieldValueCommon
    ProjectV2IterationField: ProjectV2IterationField
    ProjectV2Owner: ProjectV2Owner
    ProjectV2Recent: ProjectV2Recent
    ProjectV2SingleSelectField: ProjectV2SingleSelectField
    ProjectV2SortBy: ProjectV2SortBy
    ProjectV2SortByConnection: ProjectV2SortByConnection
    ProjectV2SortByEdge: ProjectV2SortByEdge
    ProjectV2StatusUpdate: ProjectV2StatusUpdate
    ProjectV2StatusUpdateConnection: ProjectV2StatusUpdateConnection
    ProjectV2StatusUpdateEdge: ProjectV2StatusUpdateEdge
    ProjectV2View: ProjectV2View
    ProjectV2ViewConnection: ProjectV2ViewConnection
    ProjectV2ViewEdge: ProjectV2ViewEdge
    ProjectV2Workflow: ProjectV2Workflow
    ProjectV2WorkflowConnection: ProjectV2WorkflowConnection
    ProjectV2WorkflowEdge: ProjectV2WorkflowEdge
    PublishSponsorsTierPayload: PublishSponsorsTierPayload
    PullRequest: PullRequest
    PullRequestCommit: PullRequestCommit
    PullRequestCommitCommentThread: PullRequestCommitCommentThread
    PullRequestCommitConnection: PullRequestCommitConnection
    PullRequestCommitEdge: PullRequestCommitEdge
    PullRequestConnection: PullRequestConnection
    PullRequestContributionsByRepository: PullRequestContributionsByRepository
    PullRequestEdge: PullRequestEdge
    PullRequestReview: PullRequestReview
    PullRequestReviewComment: PullRequestReviewComment
    PullRequestReviewCommentConnection: PullRequestReviewCommentConnection
    PullRequestReviewCommentEdge: PullRequestReviewCommentEdge
    PullRequestReviewConnection: PullRequestReviewConnection
    PullRequestReviewContributionsByRepository: PullRequestReviewContributionsByRepository
    PullRequestReviewEdge: PullRequestReviewEdge
    PullRequestReviewThread: PullRequestReviewThread
    PullRequestReviewThreadConnection: PullRequestReviewThreadConnection
    PullRequestReviewThreadEdge: PullRequestReviewThreadEdge
    PullRequestRevisionMarker: PullRequestRevisionMarker
    PullRequestTemplate: PullRequestTemplate
    PullRequestThread: PullRequestThread
    Push: Push
    PushAllowance: PushAllowance
    PushAllowanceConnection: PushAllowanceConnection
    PushAllowanceEdge: PushAllowanceEdge
    Query: Query
    Reactable: Reactable
    ReactingUserConnection: ReactingUserConnection
    ReactingUserEdge: ReactingUserEdge
    Reaction: Reaction
    ReactionConnection: ReactionConnection
    ReactionEdge: ReactionEdge
    ReactionGroup: ReactionGroup
    ReadyForReviewEvent: ReadyForReviewEvent
    Ref: Ref
    RefConnection: RefConnection
    RefEdge: RefEdge
    ReferencedEvent: ReferencedEvent
    RegenerateEnterpriseIdentityProviderRecoveryCodesPayload: RegenerateEnterpriseIdentityProviderRecoveryCodesPayload
    RejectDeploymentsPayload: RejectDeploymentsPayload
    Release: Release
    ReleaseAsset: ReleaseAsset
    ReleaseAssetConnection: ReleaseAssetConnection
    ReleaseAssetEdge: ReleaseAssetEdge
    ReleaseConnection: ReleaseConnection
    ReleaseEdge: ReleaseEdge
    RemoveAssigneesFromAssignablePayload: RemoveAssigneesFromAssignablePayload
    RemoveEnterpriseAdminPayload: RemoveEnterpriseAdminPayload
    RemoveEnterpriseIdentityProviderPayload: RemoveEnterpriseIdentityProviderPayload
    RemoveEnterpriseMemberPayload: RemoveEnterpriseMemberPayload
    RemoveEnterpriseOrganizationPayload: RemoveEnterpriseOrganizationPayload
    RemoveLabelsFromLabelablePayload: RemoveLabelsFromLabelablePayload
    RemoveOutsideCollaboratorPayload: RemoveOutsideCollaboratorPayload
    RemoveReactionPayload: RemoveReactionPayload
    RemoveStarPayload: RemoveStarPayload
    RemoveSubIssuePayload: RemoveSubIssuePayload
    RemovedFromMergeQueueEvent: RemovedFromMergeQueueEvent
    RemovedFromProjectEvent: RemovedFromProjectEvent
    RenamedTitleEvent: RenamedTitleEvent
    ReopenDiscussionPayload: ReopenDiscussionPayload
    ReopenIssuePayload: ReopenIssuePayload
    ReopenPullRequestPayload: ReopenPullRequestPayload
    ReopenedEvent: ReopenedEvent
    ReorderEnvironmentPayload: ReorderEnvironmentPayload
    RepoAccessAuditEntry: RepoAccessAuditEntry
    RepoAddMemberAuditEntry: RepoAddMemberAuditEntry
    RepoAddTopicAuditEntry: RepoAddTopicAuditEntry
    RepoArchivedAuditEntry: RepoArchivedAuditEntry
    RepoChangeMergeSettingAuditEntry: RepoChangeMergeSettingAuditEntry
    RepoConfigDisableAnonymousGitAccessAuditEntry: RepoConfigDisableAnonymousGitAccessAuditEntry
    RepoConfigDisableCollaboratorsOnlyAuditEntry: RepoConfigDisableCollaboratorsOnlyAuditEntry
    RepoConfigDisableContributorsOnlyAuditEntry: RepoConfigDisableContributorsOnlyAuditEntry
    RepoConfigDisableSockpuppetDisallowedAuditEntry: RepoConfigDisableSockpuppetDisallowedAuditEntry
    RepoConfigEnableAnonymousGitAccessAuditEntry: RepoConfigEnableAnonymousGitAccessAuditEntry
    RepoConfigEnableCollaboratorsOnlyAuditEntry: RepoConfigEnableCollaboratorsOnlyAuditEntry
    RepoConfigEnableContributorsOnlyAuditEntry: RepoConfigEnableContributorsOnlyAuditEntry
    RepoConfigEnableSockpuppetDisallowedAuditEntry: RepoConfigEnableSockpuppetDisallowedAuditEntry
    RepoConfigLockAnonymousGitAccessAuditEntry: RepoConfigLockAnonymousGitAccessAuditEntry
    RepoConfigUnlockAnonymousGitAccessAuditEntry: RepoConfigUnlockAnonymousGitAccessAuditEntry
    RepoCreateAuditEntry: RepoCreateAuditEntry
    RepoDestroyAuditEntry: RepoDestroyAuditEntry
    RepoRemoveMemberAuditEntry: RepoRemoveMemberAuditEntry
    RepoRemoveTopicAuditEntry: RepoRemoveTopicAuditEntry
    Repository: Repository
    RepositoryAuditEntryData: RepositoryAuditEntryData
    RepositoryCollaboratorConnection: RepositoryCollaboratorConnection
    RepositoryCollaboratorEdge: RepositoryCollaboratorEdge
    RepositoryConnection: RepositoryConnection
    RepositoryDiscussionAuthor: RepositoryDiscussionAuthor
    RepositoryDiscussionCommentAuthor: RepositoryDiscussionCommentAuthor
    RepositoryEdge: RepositoryEdge
    RepositoryInfo: RepositoryInfo
    RepositoryInvitation: RepositoryInvitation
    RepositoryInvitationConnection: RepositoryInvitationConnection
    RepositoryInvitationEdge: RepositoryInvitationEdge
    RepositoryNode: RepositoryNode
    RepositoryOwner: RepositoryOwner
    RepositoryRule: RepositoryRule
    RepositoryRuleConnection: RepositoryRuleConnection
    RepositoryRuleEdge: RepositoryRuleEdge
    RepositoryRuleset: RepositoryRuleset
    RepositoryRulesetBypassActor: RepositoryRulesetBypassActor
    RepositoryRulesetBypassActorConnection: RepositoryRulesetBypassActorConnection
    RepositoryRulesetBypassActorEdge: RepositoryRulesetBypassActorEdge
    RepositoryRulesetConnection: RepositoryRulesetConnection
    RepositoryRulesetEdge: RepositoryRulesetEdge
    RepositoryTopic: RepositoryTopic
    RepositoryTopicConnection: RepositoryTopicConnection
    RepositoryTopicEdge: RepositoryTopicEdge
    RepositoryVisibilityChangeDisableAuditEntry: RepositoryVisibilityChangeDisableAuditEntry
    RepositoryVisibilityChangeEnableAuditEntry: RepositoryVisibilityChangeEnableAuditEntry
    RepositoryVulnerabilityAlert: RepositoryVulnerabilityAlert
    RepositoryVulnerabilityAlertConnection: RepositoryVulnerabilityAlertConnection
    RepositoryVulnerabilityAlertEdge: RepositoryVulnerabilityAlertEdge
    ReprioritizeSubIssuePayload: ReprioritizeSubIssuePayload
    RequestReviewsPayload: RequestReviewsPayload
    RequirableByPullRequest: RequirableByPullRequest
    RequiredStatusCheckDescription: RequiredStatusCheckDescription
    RerequestCheckSuitePayload: RerequestCheckSuitePayload
    ResolveReviewThreadPayload: ResolveReviewThreadPayload
    RestrictedContribution: RestrictedContribution
    RetireSponsorsTierPayload: RetireSponsorsTierPayload
    RevertPullRequestPayload: RevertPullRequestPayload
    ReviewDismissalAllowance: ReviewDismissalAllowance
    ReviewDismissalAllowanceConnection: ReviewDismissalAllowanceConnection
    ReviewDismissalAllowanceEdge: ReviewDismissalAllowanceEdge
    ReviewDismissedEvent: ReviewDismissedEvent
    ReviewRequest: ReviewRequest
    ReviewRequestConnection: ReviewRequestConnection
    ReviewRequestEdge: ReviewRequestEdge
    ReviewRequestRemovedEvent: ReviewRequestRemovedEvent
    ReviewRequestedEvent: ReviewRequestedEvent
    RevokeEnterpriseOrganizationsMigratorRolePayload: RevokeEnterpriseOrganizationsMigratorRolePayload
    SavedReply: SavedReply
    SavedReplyConnection: SavedReplyConnection
    SavedReplyEdge: SavedReplyEdge
    SecurityAdvisory: SecurityAdvisory
    SecurityAdvisoryConnection: SecurityAdvisoryConnection
    SecurityAdvisoryEdge: SecurityAdvisoryEdge
    SecurityVulnerability: SecurityVulnerability
    SecurityVulnerabilityConnection: SecurityVulnerabilityConnection
    SecurityVulnerabilityEdge: SecurityVulnerabilityEdge
    SetEnterpriseIdentityProviderPayload: SetEnterpriseIdentityProviderPayload
    SetOrganizationInteractionLimitPayload: SetOrganizationInteractionLimitPayload
    SetRepositoryInteractionLimitPayload: SetRepositoryInteractionLimitPayload
    SetUserInteractionLimitPayload: SetUserInteractionLimitPayload
    SmimeSignature: SmimeSignature
    SponsorAndLifetimeValue: SponsorAndLifetimeValue
    SponsorAndLifetimeValueConnection: SponsorAndLifetimeValueConnection
    SponsorAndLifetimeValueEdge: SponsorAndLifetimeValueEdge
    Sponsorable: Sponsorable
    SponsorsActivity: SponsorsActivity
    SponsorsActivityConnection: SponsorsActivityConnection
    SponsorsActivityEdge: SponsorsActivityEdge
    SponsorsListing: SponsorsListing
    SponsorsListingFeaturedItem: SponsorsListingFeaturedItem
    SponsorsTier: SponsorsTier
    SponsorsTierAdminInfo: SponsorsTierAdminInfo
    SponsorsTierConnection: SponsorsTierConnection
    SponsorsTierEdge: SponsorsTierEdge
    Sponsorship: Sponsorship
    SponsorshipConnection: SponsorshipConnection
    SponsorshipEdge: SponsorshipEdge
    SponsorshipNewsletter: SponsorshipNewsletter
    SponsorshipNewsletterConnection: SponsorshipNewsletterConnection
    SponsorshipNewsletterEdge: SponsorshipNewsletterEdge
    SshSignature: SshSignature
    StargazerConnection: StargazerConnection
    StargazerEdge: StargazerEdge
    Starrable: Starrable
    StarredRepositoryConnection: StarredRepositoryConnection
    StarredRepositoryEdge: StarredRepositoryEdge
    Status: Status
    StatusCheckRollup: StatusCheckRollup
    StatusContext: StatusContext
    StripeConnectAccount: StripeConnectAccount
    SubIssueAddedEvent: SubIssueAddedEvent
    SubIssueRemovedEvent: SubIssueRemovedEvent
    SubmitPullRequestReviewPayload: SubmitPullRequestReviewPayload
    SubscribedEvent: SubscribedEvent
    SuggestedReviewer: SuggestedReviewer
    Tag: Tag
    Team: Team
    TeamAddMemberAuditEntry: TeamAddMemberAuditEntry
    TeamAddRepositoryAuditEntry: TeamAddRepositoryAuditEntry
    TeamAuditEntryData: TeamAuditEntryData
    TeamChangeParentTeamAuditEntry: TeamChangeParentTeamAuditEntry
    TeamConnection: TeamConnection
    TeamDiscussion: TeamDiscussion
    TeamDiscussionComment: TeamDiscussionComment
    TeamDiscussionCommentConnection: TeamDiscussionCommentConnection
    TeamDiscussionCommentEdge: TeamDiscussionCommentEdge
    TeamDiscussionConnection: TeamDiscussionConnection
    TeamDiscussionEdge: TeamDiscussionEdge
    TeamEdge: TeamEdge
    TeamMemberConnection: TeamMemberConnection
    TeamMemberEdge: TeamMemberEdge
    TeamRemoveMemberAuditEntry: TeamRemoveMemberAuditEntry
    TeamRemoveRepositoryAuditEntry: TeamRemoveRepositoryAuditEntry
    TeamRepositoryConnection: TeamRepositoryConnection
    TeamRepositoryEdge: TeamRepositoryEdge
    Topic: Topic
    TopicAuditEntryData: TopicAuditEntryData
    TransferEnterpriseOrganizationPayload: TransferEnterpriseOrganizationPayload
    TransferIssuePayload: TransferIssuePayload
    TransferredEvent: TransferredEvent
    Tree: Tree
    TreeEntry: TreeEntry
    UnarchiveProjectV2ItemPayload: UnarchiveProjectV2ItemPayload
    UnarchiveRepositoryPayload: UnarchiveRepositoryPayload
    UnassignedEvent: UnassignedEvent
    UnfollowOrganizationPayload: UnfollowOrganizationPayload
    UnfollowUserPayload: UnfollowUserPayload
    UnknownSignature: UnknownSignature
    UnlabeledEvent: UnlabeledEvent
    UnlinkProjectV2FromRepositoryPayload: UnlinkProjectV2FromRepositoryPayload
    UnlinkProjectV2FromTeamPayload: UnlinkProjectV2FromTeamPayload
    UnlinkRepositoryFromProjectPayload: UnlinkRepositoryFromProjectPayload
    UnlockLockablePayload: UnlockLockablePayload
    UnlockedEvent: UnlockedEvent
    UnmarkDiscussionCommentAsAnswerPayload: UnmarkDiscussionCommentAsAnswerPayload
    UnmarkFileAsViewedPayload: UnmarkFileAsViewedPayload
    UnmarkProjectV2AsTemplatePayload: UnmarkProjectV2AsTemplatePayload
    UnmarkedAsDuplicateEvent: UnmarkedAsDuplicateEvent
    UnpinIssuePayload: UnpinIssuePayload
    UnpinnedEvent: UnpinnedEvent
    UnresolveReviewThreadPayload: UnresolveReviewThreadPayload
    UnsubscribedEvent: UnsubscribedEvent
    UpdateBranchProtectionRulePayload: UpdateBranchProtectionRulePayload
    UpdateCheckRunPayload: UpdateCheckRunPayload
    UpdateCheckSuitePreferencesPayload: UpdateCheckSuitePreferencesPayload
    UpdateDiscussionCommentPayload: UpdateDiscussionCommentPayload
    UpdateDiscussionPayload: UpdateDiscussionPayload
    UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload:
      UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload
    UpdateEnterpriseDefaultRepositoryPermissionSettingPayload: UpdateEnterpriseDefaultRepositoryPermissionSettingPayload
    UpdateEnterpriseDeployKeySettingPayload: UpdateEnterpriseDeployKeySettingPayload
    UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload:
      UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload
    UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload:
      UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload
    UpdateEnterpriseMembersCanDeleteIssuesSettingPayload: UpdateEnterpriseMembersCanDeleteIssuesSettingPayload
    UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload:
      UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload
    UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload:
      UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload
    UpdateEnterpriseMembersCanMakePurchasesSettingPayload: UpdateEnterpriseMembersCanMakePurchasesSettingPayload
    UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload:
      UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload
    UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload:
      UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload
    UpdateEnterpriseOrganizationProjectsSettingPayload: UpdateEnterpriseOrganizationProjectsSettingPayload
    UpdateEnterpriseProfilePayload: UpdateEnterpriseProfilePayload
    UpdateEnterpriseRepositoryProjectsSettingPayload: UpdateEnterpriseRepositoryProjectsSettingPayload
    UpdateEnterpriseTeamDiscussionsSettingPayload: UpdateEnterpriseTeamDiscussionsSettingPayload
    UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload:
      UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload
    UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload:
      UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload
    UpdateEnvironmentPayload: UpdateEnvironmentPayload
    UpdateIssueCommentPayload: UpdateIssueCommentPayload
    UpdateIssuePayload: UpdateIssuePayload
    UpdateLabelPayload: UpdateLabelPayload
    UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload:
      UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload
    UpdateOrganizationWebCommitSignoffSettingPayload: UpdateOrganizationWebCommitSignoffSettingPayload
    UpdatePatreonSponsorabilityPayload: UpdatePatreonSponsorabilityPayload
    UpdateProjectCardPayload: UpdateProjectCardPayload
    UpdateProjectColumnPayload: UpdateProjectColumnPayload
    UpdateProjectPayload: UpdateProjectPayload
    UpdateProjectV2CollaboratorsPayload: UpdateProjectV2CollaboratorsPayload
    UpdateProjectV2DraftIssuePayload: UpdateProjectV2DraftIssuePayload
    UpdateProjectV2ItemFieldValuePayload: UpdateProjectV2ItemFieldValuePayload
    UpdateProjectV2ItemPositionPayload: UpdateProjectV2ItemPositionPayload
    UpdateProjectV2Payload: UpdateProjectV2Payload
    UpdateProjectV2StatusUpdatePayload: UpdateProjectV2StatusUpdatePayload
    UpdatePullRequestBranchPayload: UpdatePullRequestBranchPayload
    UpdatePullRequestPayload: UpdatePullRequestPayload
    UpdatePullRequestReviewCommentPayload: UpdatePullRequestReviewCommentPayload
    UpdatePullRequestReviewPayload: UpdatePullRequestReviewPayload
    UpdateRefPayload: UpdateRefPayload
    UpdateRepositoryPayload: UpdateRepositoryPayload
    UpdateRepositoryRulesetPayload: UpdateRepositoryRulesetPayload
    UpdateRepositoryWebCommitSignoffSettingPayload: UpdateRepositoryWebCommitSignoffSettingPayload
    UpdateSponsorshipPreferencesPayload: UpdateSponsorshipPreferencesPayload
    UpdateTeamDiscussionCommentPayload: UpdateTeamDiscussionCommentPayload
    UpdateTeamDiscussionPayload: UpdateTeamDiscussionPayload
    UpdateTeamReviewAssignmentPayload: UpdateTeamReviewAssignmentPayload
    UpdateTeamsRepositoryPayload: UpdateTeamsRepositoryPayload
    UpdateTopicsPayload: UpdateTopicsPayload
    UpdateUserListPayload: UpdateUserListPayload
    UpdateUserListsForItemPayload: UpdateUserListsForItemPayload
    User: User
    UserBlockedEvent: UserBlockedEvent
    UserConnection: UserConnection
    UserContentEdit: UserContentEdit
    UserContentEditConnection: UserContentEditConnection
    UserContentEditEdge: UserContentEditEdge
    UserEdge: UserEdge
    UserList: UserList
    UserListConnection: UserListConnection
    UserListEdge: UserListEdge
    UserNamespaceRepository: UserNamespaceRepository
    UserNamespaceRepositoryConnection: UserNamespaceRepositoryConnection
    UserNamespaceRepositoryEdge: UserNamespaceRepositoryEdge
    UserStatus: UserStatus
    UserStatusConnection: UserStatusConnection
    UserStatusEdge: UserStatusEdge
    ViewerHovercardContext: ViewerHovercardContext
    Workflow: Workflow
    WorkflowRun: WorkflowRun
    WorkflowRunConnection: WorkflowRunConnection
    WorkflowRunEdge: WorkflowRunEdge
    WorkflowRunFile: WorkflowRunFile
    AbortQueuedMigrationsInput: AbortQueuedMigrationsInput
    AbortRepositoryMigrationInput: AbortRepositoryMigrationInput
    AcceptEnterpriseAdministratorInvitationInput: AcceptEnterpriseAdministratorInvitationInput
    AcceptEnterpriseMemberInvitationInput: AcceptEnterpriseMemberInvitationInput
    AcceptTopicSuggestionInput: AcceptTopicSuggestionInput
    AccessUserNamespaceRepositoryInput: AccessUserNamespaceRepositoryInput
    AddAssigneesToAssignableInput: AddAssigneesToAssignableInput
    AddCommentInput: AddCommentInput
    AddDiscussionCommentInput: AddDiscussionCommentInput
    AddDiscussionPollVoteInput: AddDiscussionPollVoteInput
    AddEnterpriseOrganizationMemberInput: AddEnterpriseOrganizationMemberInput
    AddEnterpriseSupportEntitlementInput: AddEnterpriseSupportEntitlementInput
    AddLabelsToLabelableInput: AddLabelsToLabelableInput
    AddProjectCardInput: AddProjectCardInput
    AddProjectColumnInput: AddProjectColumnInput
    AddProjectV2DraftIssueInput: AddProjectV2DraftIssueInput
    AddProjectV2ItemByIdInput: AddProjectV2ItemByIdInput
    AddPullRequestReviewCommentInput: AddPullRequestReviewCommentInput
    AddPullRequestReviewInput: AddPullRequestReviewInput
    AddPullRequestReviewThreadInput: AddPullRequestReviewThreadInput
    AddPullRequestReviewThreadReplyInput: AddPullRequestReviewThreadReplyInput
    AddReactionInput: AddReactionInput
    AddStarInput: AddStarInput
    AddSubIssueInput: AddSubIssueInput
    AddUpvoteInput: AddUpvoteInput
    AddVerifiableDomainInput: AddVerifiableDomainInput
    ApproveDeploymentsInput: ApproveDeploymentsInput
    ApproveVerifiableDomainInput: ApproveVerifiableDomainInput
    ArchiveProjectV2ItemInput: ArchiveProjectV2ItemInput
    ArchiveRepositoryInput: ArchiveRepositoryInput
    AuditLogOrder: AuditLogOrder
    BranchNamePatternParametersInput: BranchNamePatternParametersInput
    BulkSponsorship: BulkSponsorship
    CancelEnterpriseAdminInvitationInput: CancelEnterpriseAdminInvitationInput
    CancelEnterpriseMemberInvitationInput: CancelEnterpriseMemberInvitationInput
    CancelSponsorshipInput: CancelSponsorshipInput
    ChangeUserStatusInput: ChangeUserStatusInput
    CheckAnnotationData: CheckAnnotationData
    CheckAnnotationRange: CheckAnnotationRange
    CheckRunAction: CheckRunAction
    CheckRunFilter: CheckRunFilter
    CheckRunOutput: CheckRunOutput
    CheckRunOutputImage: CheckRunOutputImage
    CheckSuiteAutoTriggerPreference: CheckSuiteAutoTriggerPreference
    CheckSuiteFilter: CheckSuiteFilter
    ClearLabelsFromLabelableInput: ClearLabelsFromLabelableInput
    ClearProjectV2ItemFieldValueInput: ClearProjectV2ItemFieldValueInput
    CloneProjectInput: CloneProjectInput
    CloneTemplateRepositoryInput: CloneTemplateRepositoryInput
    CloseDiscussionInput: CloseDiscussionInput
    CloseIssueInput: CloseIssueInput
    ClosePullRequestInput: ClosePullRequestInput
    CodeScanningParametersInput: CodeScanningParametersInput
    CodeScanningToolInput: CodeScanningToolInput
    CommitAuthor: CommitAuthor
    CommitAuthorEmailPatternParametersInput: CommitAuthorEmailPatternParametersInput
    CommitContributionOrder: CommitContributionOrder
    CommitMessage: CommitMessage
    CommitMessagePatternParametersInput: CommitMessagePatternParametersInput
    CommittableBranch: CommittableBranch
    CommitterEmailPatternParametersInput: CommitterEmailPatternParametersInput
    ContributionOrder: ContributionOrder
    ConvertProjectCardNoteToIssueInput: ConvertProjectCardNoteToIssueInput
    ConvertProjectV2DraftIssueItemToIssueInput: ConvertProjectV2DraftIssueItemToIssueInput
    ConvertPullRequestToDraftInput: ConvertPullRequestToDraftInput
    CopyProjectV2Input: CopyProjectV2Input
    CreateAttributionInvitationInput: CreateAttributionInvitationInput
    CreateBranchProtectionRuleInput: CreateBranchProtectionRuleInput
    CreateCheckRunInput: CreateCheckRunInput
    CreateCheckSuiteInput: CreateCheckSuiteInput
    CreateCommitOnBranchInput: CreateCommitOnBranchInput
    CreateDeploymentInput: CreateDeploymentInput
    CreateDeploymentStatusInput: CreateDeploymentStatusInput
    CreateDiscussionInput: CreateDiscussionInput
    CreateEnterpriseOrganizationInput: CreateEnterpriseOrganizationInput
    CreateEnvironmentInput: CreateEnvironmentInput
    CreateIpAllowListEntryInput: CreateIpAllowListEntryInput
    CreateIssueInput: CreateIssueInput
    CreateLabelInput: CreateLabelInput
    CreateLinkedBranchInput: CreateLinkedBranchInput
    CreateMigrationSourceInput: CreateMigrationSourceInput
    CreateProjectInput: CreateProjectInput
    CreateProjectV2FieldInput: CreateProjectV2FieldInput
    CreateProjectV2Input: CreateProjectV2Input
    CreateProjectV2StatusUpdateInput: CreateProjectV2StatusUpdateInput
    CreatePullRequestInput: CreatePullRequestInput
    CreateRefInput: CreateRefInput
    CreateRepositoryInput: CreateRepositoryInput
    CreateRepositoryRulesetInput: CreateRepositoryRulesetInput
    CreateSponsorshipInput: CreateSponsorshipInput
    CreateSponsorshipsInput: CreateSponsorshipsInput
    CreateSponsorsListingInput: CreateSponsorsListingInput
    CreateSponsorsTierInput: CreateSponsorsTierInput
    CreateTeamDiscussionCommentInput: CreateTeamDiscussionCommentInput
    CreateTeamDiscussionInput: CreateTeamDiscussionInput
    CreateUserListInput: CreateUserListInput
    DeclineTopicSuggestionInput: DeclineTopicSuggestionInput
    DeleteBranchProtectionRuleInput: DeleteBranchProtectionRuleInput
    DeleteDeploymentInput: DeleteDeploymentInput
    DeleteDiscussionCommentInput: DeleteDiscussionCommentInput
    DeleteDiscussionInput: DeleteDiscussionInput
    DeleteEnvironmentInput: DeleteEnvironmentInput
    DeleteIpAllowListEntryInput: DeleteIpAllowListEntryInput
    DeleteIssueCommentInput: DeleteIssueCommentInput
    DeleteIssueInput: DeleteIssueInput
    DeleteLabelInput: DeleteLabelInput
    DeleteLinkedBranchInput: DeleteLinkedBranchInput
    DeletePackageVersionInput: DeletePackageVersionInput
    DeleteProjectCardInput: DeleteProjectCardInput
    DeleteProjectColumnInput: DeleteProjectColumnInput
    DeleteProjectInput: DeleteProjectInput
    DeleteProjectV2FieldInput: DeleteProjectV2FieldInput
    DeleteProjectV2Input: DeleteProjectV2Input
    DeleteProjectV2ItemInput: DeleteProjectV2ItemInput
    DeleteProjectV2StatusUpdateInput: DeleteProjectV2StatusUpdateInput
    DeleteProjectV2WorkflowInput: DeleteProjectV2WorkflowInput
    DeletePullRequestReviewCommentInput: DeletePullRequestReviewCommentInput
    DeletePullRequestReviewInput: DeletePullRequestReviewInput
    DeleteRefInput: DeleteRefInput
    DeleteRepositoryRulesetInput: DeleteRepositoryRulesetInput
    DeleteTeamDiscussionCommentInput: DeleteTeamDiscussionCommentInput
    DeleteTeamDiscussionInput: DeleteTeamDiscussionInput
    DeleteUserListInput: DeleteUserListInput
    DeleteVerifiableDomainInput: DeleteVerifiableDomainInput
    DeploymentOrder: DeploymentOrder
    DequeuePullRequestInput: DequeuePullRequestInput
    DisablePullRequestAutoMergeInput: DisablePullRequestAutoMergeInput
    DiscussionOrder: DiscussionOrder
    DiscussionPollOptionOrder: DiscussionPollOptionOrder
    DismissPullRequestReviewInput: DismissPullRequestReviewInput
    DismissRepositoryVulnerabilityAlertInput: DismissRepositoryVulnerabilityAlertInput
    DraftPullRequestReviewComment: DraftPullRequestReviewComment
    DraftPullRequestReviewThread: DraftPullRequestReviewThread
    EnablePullRequestAutoMergeInput: EnablePullRequestAutoMergeInput
    EnqueuePullRequestInput: EnqueuePullRequestInput
    EnterpriseAdministratorInvitationOrder: EnterpriseAdministratorInvitationOrder
    EnterpriseMemberInvitationOrder: EnterpriseMemberInvitationOrder
    EnterpriseMemberOrder: EnterpriseMemberOrder
    EnterpriseOrder: EnterpriseOrder
    EnterpriseServerInstallationOrder: EnterpriseServerInstallationOrder
    EnterpriseServerUserAccountEmailOrder: EnterpriseServerUserAccountEmailOrder
    EnterpriseServerUserAccountOrder: EnterpriseServerUserAccountOrder
    EnterpriseServerUserAccountsUploadOrder: EnterpriseServerUserAccountsUploadOrder
    Environments: Environments
    FileAddition: FileAddition
    FileChanges: FileChanges
    FileDeletion: FileDeletion
    FileExtensionRestrictionParametersInput: FileExtensionRestrictionParametersInput
    FilePathRestrictionParametersInput: FilePathRestrictionParametersInput
    FollowOrganizationInput: FollowOrganizationInput
    FollowUserInput: FollowUserInput
    GistOrder: GistOrder
    GrantEnterpriseOrganizationsMigratorRoleInput: GrantEnterpriseOrganizationsMigratorRoleInput
    GrantMigratorRoleInput: GrantMigratorRoleInput
    ImportProjectInput: ImportProjectInput
    InviteEnterpriseAdminInput: InviteEnterpriseAdminInput
    InviteEnterpriseMemberInput: InviteEnterpriseMemberInput
    IpAllowListEntryOrder: IpAllowListEntryOrder
    IssueCommentOrder: IssueCommentOrder
    IssueFilters: IssueFilters
    IssueOrder: IssueOrder
    LabelOrder: LabelOrder
    LanguageOrder: LanguageOrder
    LinkProjectV2ToRepositoryInput: LinkProjectV2ToRepositoryInput
    LinkProjectV2ToTeamInput: LinkProjectV2ToTeamInput
    LinkRepositoryToProjectInput: LinkRepositoryToProjectInput
    LockLockableInput: LockLockableInput
    MannequinOrder: MannequinOrder
    MarkDiscussionCommentAsAnswerInput: MarkDiscussionCommentAsAnswerInput
    MarkFileAsViewedInput: MarkFileAsViewedInput
    MarkProjectV2AsTemplateInput: MarkProjectV2AsTemplateInput
    MarkPullRequestReadyForReviewInput: MarkPullRequestReadyForReviewInput
    MaxFilePathLengthParametersInput: MaxFilePathLengthParametersInput
    MaxFileSizeParametersInput: MaxFileSizeParametersInput
    MergeBranchInput: MergeBranchInput
    MergePullRequestInput: MergePullRequestInput
    MergeQueueParametersInput: MergeQueueParametersInput
    MilestoneOrder: MilestoneOrder
    MinimizeCommentInput: MinimizeCommentInput
    MoveProjectCardInput: MoveProjectCardInput
    MoveProjectColumnInput: MoveProjectColumnInput
    OrganizationOrder: OrganizationOrder
    OrgEnterpriseOwnerOrder: OrgEnterpriseOwnerOrder
    PackageFileOrder: PackageFileOrder
    PackageOrder: PackageOrder
    PackageVersionOrder: PackageVersionOrder
    PinEnvironmentInput: PinEnvironmentInput
    PinIssueInput: PinIssueInput
    PinnedEnvironmentOrder: PinnedEnvironmentOrder
    ProjectCardImport: ProjectCardImport
    ProjectColumnImport: ProjectColumnImport
    ProjectOrder: ProjectOrder
    ProjectV2Collaborator: ProjectV2Collaborator
    ProjectV2FieldOrder: ProjectV2FieldOrder
    ProjectV2FieldValue: ProjectV2FieldValue
    ProjectV2Filters: ProjectV2Filters
    ProjectV2ItemFieldValueOrder: ProjectV2ItemFieldValueOrder
    ProjectV2ItemOrder: ProjectV2ItemOrder
    ProjectV2Order: ProjectV2Order
    ProjectV2SingleSelectFieldOptionInput: ProjectV2SingleSelectFieldOptionInput
    ProjectV2StatusOrder: ProjectV2StatusOrder
    ProjectV2ViewOrder: ProjectV2ViewOrder
    ProjectV2WorkflowOrder: ProjectV2WorkflowOrder
    PropertyTargetDefinitionInput: PropertyTargetDefinitionInput
    PublishSponsorsTierInput: PublishSponsorsTierInput
    PullRequestOrder: PullRequestOrder
    PullRequestParametersInput: PullRequestParametersInput
    ReactionOrder: ReactionOrder
    RefNameConditionTargetInput: RefNameConditionTargetInput
    RefOrder: RefOrder
    RefUpdate: RefUpdate
    RegenerateEnterpriseIdentityProviderRecoveryCodesInput: RegenerateEnterpriseIdentityProviderRecoveryCodesInput
    RegenerateVerifiableDomainTokenInput: RegenerateVerifiableDomainTokenInput
    RejectDeploymentsInput: RejectDeploymentsInput
    ReleaseOrder: ReleaseOrder
    RemoveAssigneesFromAssignableInput: RemoveAssigneesFromAssignableInput
    RemoveEnterpriseAdminInput: RemoveEnterpriseAdminInput
    RemoveEnterpriseIdentityProviderInput: RemoveEnterpriseIdentityProviderInput
    RemoveEnterpriseMemberInput: RemoveEnterpriseMemberInput
    RemoveEnterpriseOrganizationInput: RemoveEnterpriseOrganizationInput
    RemoveEnterpriseSupportEntitlementInput: RemoveEnterpriseSupportEntitlementInput
    RemoveLabelsFromLabelableInput: RemoveLabelsFromLabelableInput
    RemoveOutsideCollaboratorInput: RemoveOutsideCollaboratorInput
    RemoveReactionInput: RemoveReactionInput
    RemoveStarInput: RemoveStarInput
    RemoveSubIssueInput: RemoveSubIssueInput
    RemoveUpvoteInput: RemoveUpvoteInput
    ReopenDiscussionInput: ReopenDiscussionInput
    ReopenIssueInput: ReopenIssueInput
    ReopenPullRequestInput: ReopenPullRequestInput
    ReorderEnvironmentInput: ReorderEnvironmentInput
    RepositoryIdConditionTargetInput: RepositoryIdConditionTargetInput
    RepositoryInvitationOrder: RepositoryInvitationOrder
    RepositoryMigrationOrder: RepositoryMigrationOrder
    RepositoryNameConditionTargetInput: RepositoryNameConditionTargetInput
    RepositoryOrder: RepositoryOrder
    RepositoryPropertyConditionTargetInput: RepositoryPropertyConditionTargetInput
    RepositoryRuleConditionsInput: RepositoryRuleConditionsInput
    RepositoryRuleInput: RepositoryRuleInput
    RepositoryRuleOrder: RepositoryRuleOrder
    RepositoryRulesetBypassActorInput: RepositoryRulesetBypassActorInput
    ReprioritizeSubIssueInput: ReprioritizeSubIssueInput
    RequestReviewsInput: RequestReviewsInput
    RequiredDeploymentsParametersInput: RequiredDeploymentsParametersInput
    RequiredStatusCheckInput: RequiredStatusCheckInput
    RequiredStatusChecksParametersInput: RequiredStatusChecksParametersInput
    RerequestCheckSuiteInput: RerequestCheckSuiteInput
    ResolveReviewThreadInput: ResolveReviewThreadInput
    RetireSponsorsTierInput: RetireSponsorsTierInput
    RevertPullRequestInput: RevertPullRequestInput
    RevokeEnterpriseOrganizationsMigratorRoleInput: RevokeEnterpriseOrganizationsMigratorRoleInput
    RevokeMigratorRoleInput: RevokeMigratorRoleInput
    RuleParametersInput: RuleParametersInput
    SavedReplyOrder: SavedReplyOrder
    SecurityAdvisoryIdentifierFilter: SecurityAdvisoryIdentifierFilter
    SecurityAdvisoryOrder: SecurityAdvisoryOrder
    SecurityVulnerabilityOrder: SecurityVulnerabilityOrder
    SetEnterpriseIdentityProviderInput: SetEnterpriseIdentityProviderInput
    SetOrganizationInteractionLimitInput: SetOrganizationInteractionLimitInput
    SetRepositoryInteractionLimitInput: SetRepositoryInteractionLimitInput
    SetUserInteractionLimitInput: SetUserInteractionLimitInput
    SponsorableOrder: SponsorableOrder
    SponsorAndLifetimeValueOrder: SponsorAndLifetimeValueOrder
    SponsorOrder: SponsorOrder
    SponsorsActivityOrder: SponsorsActivityOrder
    SponsorshipNewsletterOrder: SponsorshipNewsletterOrder
    SponsorshipOrder: SponsorshipOrder
    SponsorsTierOrder: SponsorsTierOrder
    StarOrder: StarOrder
    StartOrganizationMigrationInput: StartOrganizationMigrationInput
    StartRepositoryMigrationInput: StartRepositoryMigrationInput
    StatusCheckConfigurationInput: StatusCheckConfigurationInput
    SubmitPullRequestReviewInput: SubmitPullRequestReviewInput
    TagNamePatternParametersInput: TagNamePatternParametersInput
    TeamDiscussionCommentOrder: TeamDiscussionCommentOrder
    TeamDiscussionOrder: TeamDiscussionOrder
    TeamMemberOrder: TeamMemberOrder
    TeamOrder: TeamOrder
    TeamRepositoryOrder: TeamRepositoryOrder
    TransferEnterpriseOrganizationInput: TransferEnterpriseOrganizationInput
    TransferIssueInput: TransferIssueInput
    UnarchiveProjectV2ItemInput: UnarchiveProjectV2ItemInput
    UnarchiveRepositoryInput: UnarchiveRepositoryInput
    UnfollowOrganizationInput: UnfollowOrganizationInput
    UnfollowUserInput: UnfollowUserInput
    UnlinkProjectV2FromRepositoryInput: UnlinkProjectV2FromRepositoryInput
    UnlinkProjectV2FromTeamInput: UnlinkProjectV2FromTeamInput
    UnlinkRepositoryFromProjectInput: UnlinkRepositoryFromProjectInput
    UnlockLockableInput: UnlockLockableInput
    UnmarkDiscussionCommentAsAnswerInput: UnmarkDiscussionCommentAsAnswerInput
    UnmarkFileAsViewedInput: UnmarkFileAsViewedInput
    UnmarkIssueAsDuplicateInput: UnmarkIssueAsDuplicateInput
    UnmarkProjectV2AsTemplateInput: UnmarkProjectV2AsTemplateInput
    UnminimizeCommentInput: UnminimizeCommentInput
    UnpinIssueInput: UnpinIssueInput
    UnresolveReviewThreadInput: UnresolveReviewThreadInput
    UpdateBranchProtectionRuleInput: UpdateBranchProtectionRuleInput
    UpdateCheckRunInput: UpdateCheckRunInput
    UpdateCheckSuitePreferencesInput: UpdateCheckSuitePreferencesInput
    UpdateDiscussionCommentInput: UpdateDiscussionCommentInput
    UpdateDiscussionInput: UpdateDiscussionInput
    UpdateEnterpriseAdministratorRoleInput: UpdateEnterpriseAdministratorRoleInput
    UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput
    UpdateEnterpriseDefaultRepositoryPermissionSettingInput: UpdateEnterpriseDefaultRepositoryPermissionSettingInput
    UpdateEnterpriseDeployKeySettingInput: UpdateEnterpriseDeployKeySettingInput
    UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput:
      UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput
    UpdateEnterpriseMembersCanCreateRepositoriesSettingInput: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput
    UpdateEnterpriseMembersCanDeleteIssuesSettingInput: UpdateEnterpriseMembersCanDeleteIssuesSettingInput
    UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput
    UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput
    UpdateEnterpriseMembersCanMakePurchasesSettingInput: UpdateEnterpriseMembersCanMakePurchasesSettingInput
    UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput:
      UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput
    UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput:
      UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput
    UpdateEnterpriseOrganizationProjectsSettingInput: UpdateEnterpriseOrganizationProjectsSettingInput
    UpdateEnterpriseOwnerOrganizationRoleInput: UpdateEnterpriseOwnerOrganizationRoleInput
    UpdateEnterpriseProfileInput: UpdateEnterpriseProfileInput
    UpdateEnterpriseRepositoryProjectsSettingInput: UpdateEnterpriseRepositoryProjectsSettingInput
    UpdateEnterpriseTeamDiscussionsSettingInput: UpdateEnterpriseTeamDiscussionsSettingInput
    UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput:
      UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput
    UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput:
      UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput
    UpdateEnvironmentInput: UpdateEnvironmentInput
    UpdateIpAllowListEnabledSettingInput: UpdateIpAllowListEnabledSettingInput
    UpdateIpAllowListEntryInput: UpdateIpAllowListEntryInput
    UpdateIpAllowListForInstalledAppsEnabledSettingInput: UpdateIpAllowListForInstalledAppsEnabledSettingInput
    UpdateIssueCommentInput: UpdateIssueCommentInput
    UpdateIssueInput: UpdateIssueInput
    UpdateLabelInput: UpdateLabelInput
    UpdateNotificationRestrictionSettingInput: UpdateNotificationRestrictionSettingInput
    UpdateOrganizationAllowPrivateRepositoryForkingSettingInput:
      UpdateOrganizationAllowPrivateRepositoryForkingSettingInput
    UpdateOrganizationWebCommitSignoffSettingInput: UpdateOrganizationWebCommitSignoffSettingInput
    UpdateParametersInput: UpdateParametersInput
    UpdatePatreonSponsorabilityInput: UpdatePatreonSponsorabilityInput
    UpdateProjectCardInput: UpdateProjectCardInput
    UpdateProjectColumnInput: UpdateProjectColumnInput
    UpdateProjectInput: UpdateProjectInput
    UpdateProjectV2CollaboratorsInput: UpdateProjectV2CollaboratorsInput
    UpdateProjectV2DraftIssueInput: UpdateProjectV2DraftIssueInput
    UpdateProjectV2FieldInput: UpdateProjectV2FieldInput
    UpdateProjectV2Input: UpdateProjectV2Input
    UpdateProjectV2ItemFieldValueInput: UpdateProjectV2ItemFieldValueInput
    UpdateProjectV2ItemPositionInput: UpdateProjectV2ItemPositionInput
    UpdateProjectV2StatusUpdateInput: UpdateProjectV2StatusUpdateInput
    UpdatePullRequestBranchInput: UpdatePullRequestBranchInput
    UpdatePullRequestInput: UpdatePullRequestInput
    UpdatePullRequestReviewCommentInput: UpdatePullRequestReviewCommentInput
    UpdatePullRequestReviewInput: UpdatePullRequestReviewInput
    UpdateRefInput: UpdateRefInput
    UpdateRefsInput: UpdateRefsInput
    UpdateRepositoryInput: UpdateRepositoryInput
    UpdateRepositoryRulesetInput: UpdateRepositoryRulesetInput
    UpdateRepositoryWebCommitSignoffSettingInput: UpdateRepositoryWebCommitSignoffSettingInput
    UpdateSponsorshipPreferencesInput: UpdateSponsorshipPreferencesInput
    UpdateSubscriptionInput: UpdateSubscriptionInput
    UpdateTeamDiscussionCommentInput: UpdateTeamDiscussionCommentInput
    UpdateTeamDiscussionInput: UpdateTeamDiscussionInput
    UpdateTeamReviewAssignmentInput: UpdateTeamReviewAssignmentInput
    UpdateTeamsRepositoryInput: UpdateTeamsRepositoryInput
    UpdateTopicsInput: UpdateTopicsInput
    UpdateUserListInput: UpdateUserListInput
    UpdateUserListsForItemInput: UpdateUserListsForItemInput
    UserStatusOrder: UserStatusOrder
    VerifiableDomainOrder: VerifiableDomainOrder
    VerifyVerifiableDomainInput: VerifyVerifiableDomainInput
    WorkflowFileReferenceInput: WorkflowFileReferenceInput
    WorkflowRunOrder: WorkflowRunOrder
    WorkflowsParametersInput: WorkflowsParametersInput
  }
}
